view: eps_stage_symmetric_load {
  # -- This view is designed for Analyzing data initial loaded into SnowFlake EPS_STAGE by Symmmetric from EPS stores. Granularity is Phmarmacy, and Table initial loaded.

  derived_table: {
    sql: SELECT TABLE_NAME
          , CHAIN_ID
          , NHIN_STORE_ID
          , SOURCE_TIMESTAMP
          , MIN_PROCESS_TIMESTAMP
          , MAX_PROCESS_TIMESTAMP
          , TOTAL_RECORDS
      FROM (
                        SELECT 'ADDRESS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.ADDRESS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'ADJUSTMENT_CODES' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.ADJUSTMENT_CODES_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'ADJUSTMENT_GROUP' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.ADJUSTMENT_GROUP_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'CARD' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.CARD_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'CENTRAL_FILL' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.CENTRAL_FILL_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'CII_INVENTORY_TRACKING' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.CII_INVENTORY_TRACKING_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'COMPOUND' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.COMPOUND_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'COMPOUND_INGREDIENT_TX_LOT' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.COMPOUND_INGREDIENT_TX_LOT_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'COMPOUND_INGREDIENTS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.COMPOUND_INGREDIENTS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'COMPOUND_INGREDIENTS_MODIFIERS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.COMPOUND_INGREDIENTS_MODIFIERS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'COMPOUND_INGREDIENTS_TX' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.COMPOUND_INGREDIENTS_TX_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'DRUG' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.DRUG_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'DRUG_COST_TYPE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.DRUG_COST_TYPE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'DRUG_COSTS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.DRUG_COSTS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'DRUG_LOCAL_STORE_SETTINGS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.DRUG_LOCAL_STORE_SETTINGS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'DRUG_ORDERS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.DRUG_ORDERS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            /*--========= THESE TABLES ARE NOT YET BUILT OUT IN EPS_STAGE =========--
            --UNION ALL   SELECT 'GROUPS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.GROUPS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            --UNION ALL   SELECT 'LICENSES' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.LICENSES_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            --===================================================================-- */
            UNION ALL   SELECT 'LINE_ITEM' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.LINE_ITEM_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'ORDER_ENTRY' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.ORDER_ENTRY_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'ORDER_ENTRY_REASON' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.ORDER_ENTRY_REASON_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PATIENT' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PATIENT_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PATIENT_TP_LINK' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PATIENT_TP_LINK_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PHARMACY' AS TABLE_NAME, CHAIN_ID, META_NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PHARMACY_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, META_NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PHONE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PHONE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PICKUP_TYPE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PICKUP_TYPE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PLAN' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PLAN_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PLAN_TRANSMIT' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PLAN_TRANSMIT_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PRESCRIBER_EDI' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PRESCRIBER_EDI_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PRICE_CODE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PRICE_CODE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'PURCHASE_ORDER' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.PURCHASE_ORDER_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'REORDER' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.REORDER_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'RETURN_AND_ADJUSTMENT' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.RETURN_AND_ADJUSTMENT_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'RX_STATUS_CHANGE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.RX_STATUS_CHANGE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'RX_SUMMARY' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.RX_SUMMARY_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'RX_TX' AS TABLE_NAME, CHAIN_ID, META_NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.RX_TX_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, META_NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'RX_TX_BARCODE_SCAN_HISTORY' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.RX_TX_BARCODE_SCAN_HISTORY_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'SHIPMENT' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.SHIPMENT_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            /*--========= THESE TABLES ARE NOT YET BUILT OUT IN EPS_STAGE =========--
            --UNION ALL   SELECT 'STANDARD_SERVICE_CODES' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.STANDARD_SERVICE_CODES_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            --UNION ALL   SELECT 'STORE_LICENSE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.STORE_LICENSE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            --===================================================================-- */
            UNION ALL   SELECT 'STORE_SETTINGS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.STORE_SETTINGS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TASK_HISTORY' AS TABLE_NAME, CHAIN_ID, META_NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TASK_HISTORY_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, META_NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TP_RESP_AMOUNT' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TP_RESP_AMOUNT_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TP_RESPONSE_CLAIM_DETAIL' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TP_RESPONSE_CLAIM_DETAIL_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TP_SUBMIT_CLAIM_DETAIL' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TP_SUBMIT_CLAIM_DETAIL_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TP_TRANSMIT_QUEUE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TP_TRANSMIT_QUEUE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TRANSFER' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TRANSFER_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TRANSFER_FILL_DATES' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TRANSFER_FILL_DATES_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TRANSFER_REQUEST_QUEUE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TRANSFER_REQUEST_QUEUE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'TX_TP' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.TX_TP_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            /*--========= THESE TABLES ARE NOT YET BUILT OUT IN EPS_STAGE =========--
            --UNION ALL   SELECT 'USER_GROUPS_LINK' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.USER_GROUPS_LINK_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            --UNION ALL   SELECT 'USERS' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.USERS_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            --===================================================================-- */
            UNION ALL   SELECT 'VENDOR' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.VENDOR_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'WORKFLOW_HISTORY' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.WORKFLOW_HISTORY_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'WORKFLOW_STATE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.WORKFLOW_STATE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'WORKFLOW_STATE_ATTRIBUTE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.WORKFLOW_STATE_ATTRIBUTE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'WORKFLOW_TOKEN' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.WORKFLOW_TOKEN_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'WORKFLOW_TRANSITION' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.WORKFLOW_TRANSITION_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
            UNION ALL   SELECT 'WORKFLOW_TYPE' AS TABLE_NAME, CHAIN_ID, NHIN_STORE_ID, TO_DATE(SOURCE_TIMESTAMP) SOURCE_TIMESTAMP,  MIN(PROCESS_TIMESTAMP) MIN_PROCESS_TIMESTAMP, MAX(PROCESS_TIMESTAMP) MAX_PROCESS_TIMESTAMP, COUNT (*) TOTAL_RECORDS FROM EPS_STAGE.WORKFLOW_TYPE_STAGE T WHERE {% condition chain.chain_id %} T.CHAIN_ID {% endcondition %} AND INITIAL_LOAD = 'Y' AND  {% condition process_timestamp_filter %} T.PROCESS_TIMESTAMP {% endcondition %}  GROUP BY CHAIN_ID, NHIN_STORE_ID, SOURCE_TIMESTAMP
          )
       ;;
  }

  dimension: chain_id {
    hidden: yes
    label: "Chain ID"
    description: "The Uhique ID assigned by PDX NHIN for the Pharmacy Chain"
    type: number
    sql: ${TABLE}.CHAIN_ID ;;
    value_format: "####"
  }

  dimension: nhin_store_id {
    hidden: yes
    label: "Pharmacy NHIN Store ID"
    description: "The Uhique ID assigned by PDX NHIN for the Pharmacy Chain"
    type: number
    sql: ${TABLE}.NHIN_STORE_ID ;;
    value_format: "####"
  }

  dimension: table_name {
    label: "Table Name"
    description: "The SnowFlake EPS_STAGE Table Name"
    type: string
    sql: ${TABLE}.TABLE_NAME ;;
  }

  dimension: unique_key {
    hidden: yes
    primary_key: yes
    type: number
    sql: ${chain_id} ||'@'|| ${nhin_store_id} ||'@'|| ${table_name} ;; #ERXLPS-1649
  }

  ################################################################################################## FILTERS #################################################################################################

  filter: process_timestamp_filter {
    label: "Process Timestamp"
    description: "The time that the record was inserted into EPS_STAGE"
    type: date
  }

  ########################################################################################### DATE / TIME DIMENSIONS ##########################################################################################

  ########## PROCESS TIMESTAMP ###########

  dimension_group: min_process_timestamp {
    label: "Min Process Timestamp"
    description: "The Minimum Process Timestamp for an EPS STAGE table, for a specific Pharmacy of a Chain"
    type: time
    timeframes: [
      time,
      date,
      week,
      month,
      month_num,
      yesno,
      hour_of_day,
      time_of_day,
      hour2,
      minute15,
      day_of_week,
      week_of_year,
      day_of_week_index,
      day_of_month
    ]
    sql: ${TABLE}.MIN_PROCESS_TIMESTAMP ;;
  }

  dimension_group: max_process_timestamp {
    label: "Max Process Timestamp"
    description: "The last / Max Process Timestamp for the table and Pharmacy Chain / NHIN Store ID in question"
    type: time
    timeframes: [
      time,
      date,
      week,
      month,
      month_num,
      yesno,
      hour_of_day,
      time_of_day,
      hour2,
      minute15,
      day_of_week,
      week_of_year,
      day_of_week_index,
      day_of_month
    ]
    sql: ${TABLE}.MAX_PROCESS_TIMESTAMP ;;
  }

  ########## SOURCE TIMESTAMP ###########

  dimension_group: source {
    label: "Source"
    description: "The source timestamp from the Pharmacy for the Symmetric Initial Load. Symmetric truncates the timestamp to a date, to the beggining of the day the initial load was performed."
    type: time
    timeframes: [
      date,
      week,
      month,
      month_num,
      yesno,
      day_of_week,
      week_of_year,
      day_of_week_index,
      day_of_month
    ]
    sql: ${TABLE}.SOURCE_TIMESTAMP ;;
  }

  ################################################################################################## Measures #################################################################################################

  measure: sum_total_records {
    label: "Total Initial Load Records"
    description: "The total count of records Initial Loaded for the Pharmacy Chain by Table"
    type: number
    sql: SUM(${TABLE}.TOTAL_RECORDS) ;;
    value_format: "#,###"
  }

  measure: count_total_tables {
    label: "Count Tables Initial Loaded"
    description: "The total count of Tables Initial Loaded for the Pharmacy Chain or NHIN Store ID"
    type: count_distinct
    sql: ${TABLE}.TABLE_NAME ;;
    value_format: "#,###"
    drill_fields: [table_count_drill_detail*]
  }

  measure: min_source_timestamp {
    label: "Min Source Date"
    description: "The Minimum source date from the Pharmacy for the Symmetric Initial Load. The minimum available Source date may indicate what date the Initial Load started."
    type: string
    sql: MIN(${TABLE}.SOURCE_TIMESTAMP) ;;
  }

  #############################################################################################################################################################################################################

  set: table_count_drill_detail {
    fields: [
      chain_id,
      chain.chain_name,
      nhin_store_id,
      store.store_name,
      table_name,
      source_date,
      sum_total_records
    ]
  }
}
