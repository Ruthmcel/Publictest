view: sales {
  sql_table_name:
  {% if _explore._name == 'sales' %}
    {% assign active_archive_filter_input_value = sales.active_archive_filter_input._sql | slice: 1,7 | downcase %}
    {% if active_archive_filter_input_value == 'archive'  %}
      EDW.F_SALE_ARCHIVE
    {% else %}
      EDW.F_SALE
    {% endif %}
  {% else %}
    EDW.F_SALE
  {% endif %}
  ;;

  ########################################################### Things to know (Techinical Implementation Details) ####################################################################
  #As part of TP Transmit Queue integration into Sales Explore, Unique Key for Sales is revised. For the measures which are referencing from other views such as eps_rx_tx, eps_rx and eps_tx_tp_transmit_queue within sales view, sum_distinct is applied at the respective measures with sql_distinct_key based on the unique key defined in corresponding views.
  #Measures in Sales view which are referencing only columns/dimensions/measures with in the sales view do not required sum_distinct_key. By default it uses the unique key defined for sales view.
  #Measures in Sales view which are referencing only columns/dimensions/measures from other view and added extra logic (ex: financial_category calculation) inside sales view, required sum_distinct_key at other view UK + Sales view dimensions (ex: financial_category) involved in logic.
  #Measures in Sales view which involves Addition/Sustraction/Multiplication/Division , all the dimensions should be at same granularity.
  #Dimensions in other view file will continue remain in other view file. This is done to avoid making changes to sales view file for every dimension being added in future to keep it simple for code management perspective.
  #Measure that are at transactional/claim level, such as price/dispensed quantity/prescribed quantity/transmit queue measures is being referenced in sales view to ensure when LY is selected for TY/LY analysis, existing measure which has only TY equivalent doesn't double its value.
  #Unit testing: Test till the lowest level of measure that are available with in the slaes. For Ex: Adding a quantity column in sales as measure, make sure other measure at lowest level such as tp transmit queue are working fine and doesn't cause any overflow collision or doubling of measure values.
  #ERXLPS-694 below point summarise user story changes at high level
  #Changes made to sales view - when reportable sales/ Sold date filter is selected, Consider transactions with either reportable sales date or Willcall pickup date falls with in reporting period
  #Please add these two flags (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') for any new dimension or measure(should not be after sold) in sales view
  #Please use after_adjudicated flag(for any after measures/dimensions) to consider any dollar amounts and transactions from third party based on reportable sales falls with in the reporting period
  # if a record is adjudicated ,not returned on same day and adjudication date falls in reporting period then any T/P dollars amount should be considered for net sales after sold measures using flag "After_Adjudicated"
  # if a record is sold/picked up by a patient ,not returned on same day and sold date falls in reporting period then any patient dollars amount should be considered for net sales after sold measures using flag "After_Sold"
  #Please use after_sold flag(for any after measures/dimensions) to consider any dollar amounts and  transactions will call pick up date falls with in reporting period
  #tx.RX_TX_WILL_CALL_PICKED_UP_DATE IS NOT NULL OR tx.RX_TX_REPORTABLE_SALES_DATE IS NOT NULL & NVL Function in Credit for 'SOLD' Filter Criteria- A transaction record is filled, adjudicated but not picked up a patient is reported as 'T/P - Filled' or 'Cash - filled', if same record has returned date should be populated under corresponding credit category.
  # NVL function in Credit category for 'SOLD' date filter will bring a record and it should be ignored for 'Sold' calculation , as those record aren't picked up by a patient. So added condtion "AND TX.RX_TX_WILL_CALL_PICKED_UP_DATE IS NOT NULL" in SOLD flag calculation
  #Added Type from report calender, if a transaction is falling in this year & Last year , then group by clause will show a single record instead of two. hence report type is added in group by clause
  #[ERXLPS-2278] - Removed explore_rx_budget_4_13_hidden_list set measures from sales view. These measures were not exposed in CUSTOMER Models and no longer required. Removed empty set explore_rx_budget_4_13_list from sale view.

  #[ERXDWPS-8260] COSTCO SOW - Moving Average Cost - Sales Looker Dimensions and Measures
  #New MVAC based fields added corresponding to all the ACQ based fields.
  #Please see the user story for the details of the new fields and their mapping against ACQ based fields.
  #Any changes made to the ACQ based fields need to be made to MVAC based fields as well.

  dimension: unique_key {
    hidden: yes
    primary_key: yes
    type: number
    sql: ${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_calendar_global.report_date}||'@'||${report_type} ||'@'||${financial_category} || '@' || nvl(${sales_tx_tp.tx_tp_id},0);;
  }

  dimension: chain_id {
    type: number
    hidden: yes
    sql: ${TABLE}.CHAIN_ID ;;
  }

  dimension: nhin_store_id {
    type: number
    hidden: yes
    sql: ${TABLE}.NHIN_STORE_ID ;;
  }

  dimension: rx_tx_id {
    label: "Prescription Transaction ID"
    description: "Unique ID number identifying a transanction record within a pharmacy chain"
    type: number
    sql: ${TABLE}.RX_TX_ID ;;
  }

  dimension: rx_id {
    type: number
    hidden: yes
    sql: ${TABLE}.RX_ID ;;
  }

  #[ERXLPS-2055] - Start
  dimension: source_system_id {
    hidden: yes
    type: number
    sql: ${TABLE}.SOURCE_SYSTEM_ID ;;
  }

  dimension: store_drug_multi_source_reference {
    type: string
    hidden: yes
    sql: NVL(${store_drug.drug_multi_source},'Y') ;;
  }

  filter: drug_brand_generic_measures_classification_filter {
    label: "Drug Brand/Generic Measures Source \"Filter Only\""
    description: "Determines how to classify the scripts (using 'MULTI SOURCE' or 'DRUG DISPENSED') for Brand and Generic measures. For EPS stores, by default 'DRUG DISPENSED' is used to define brand and generic scripts. For EPS Stores user has an option to choose 'MULTI SOURCE' or 'DRUG DISPENSED'"
    type: string
    suggestions: ["DRUG DISPENSED", "MULTI SOURCE"]
    default_value: "DRUG DISPENSED"
  }
  #[ERXLPS-2055] - End

  dimension: financial_category {
    type: string
    label: "Financial Category"
    description: "Indicates the different type of Financial buckets such as 'Cash - Filled','T/P - Filled','Partial - Filled','Cash - Credit', 'T/P - Credit', 'Partial - Credit'"
    sql: ${TABLE}.SALE_FINANCIAL_CATEGORY ;;
  }

  #[ERXLPS-2056] SASD Report fix: Added admin_rebill logic for WillCallPickUp/SOLD date flag. Fix implemented in EPS version 2.6.09.006 version.
  #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
  #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
  dimension: adjudicated_flg {
    type: string
#     hidden: yes
    label: "Adjudicated Flag"
    description: "Y/N Flag indicating if the transaction is adjudicated/returned for reporting period selected"
    sql: CASE WHEN {% condition date_to_use_filter %} 'SOLD' {% endcondition %}
              THEN 'N'
              ELSE ${TABLE}.SALE_REPORTABLE_SALES_HISTORY_FLAG
          END ;;
  }

  #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
  #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
  dimension: sold_flg {
    type: string
    #hidden: yes
    label: "Sold Flag"
    description: "Y/N Flag indicating if the transaction is sold/returned & picked up by patient for reporting period selected"
    sql: case when  {% condition date_to_use_filter %} 'REPORTABLE SALES' {% endcondition %}
              then 'N' else {% if sales.consider_nh_as_sold._in_query %}
                         case when ${is_tx_nh_with_null_sold_date} = 'Y'
                              then ${TABLE}.SALE_REPORTABLE_SALES_HISTORY_FLAG
                              else ${TABLE}.SALE_SOLD_HISTORY_FLAG
                          end
                         {% else %}
                         ${TABLE}.SALE_SOLD_HISTORY_FLAG
                         {% endif %}
           end ;;
  }

  #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
  #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
  #[ERXDWPS-5897] - Moved the dimension from sales view to sales_eps_rx_tx. As the sales view is driver for Sales explore, it was always pulling nursing home view join when this dimension was defined in sales view.
  dimension: is_tx_nh_with_null_sold_date {
    type: string
    hidden: yes
    sql: {% if sales.consider_nh_as_sold._in_query %}
                case when {% condition sales.consider_nh_as_sold %} 'YES' {% endcondition %}
                      and ${source_system_id}  = 11
                      and ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE is null
                      and ${store_nursing_home_flag_fill_time.patient_nursing_home_flag_fill_time} = 'Y'
                     then 'Y'
                     else 'N'
                 end
         {% else %}
          'N'
         {% endif %};;
  }

  dimension: after_adjudicated_flg {
    type: string
    label: "After Adjudicated Flag"
    description: "Y/N Flag indicating if the transaction is adjudicated/returned for reporting period selected, irrespective of date filter"
    sql: CASE WHEN {% condition show_after_sold_measure_values %} 'YES' {% endcondition %} THEN ${TABLE}.SALE_AFTER_ADJUDICATED_FLAG ELSE 'N' END ;;
  }

  dimension: after_sold_flg {
    type: string
    label: "After Sold Flag"
    description: "Y/N Flag indicating if the transaction is sold/returned & picked up by patient for reporting period selected, irrespective of date filter"
    sql: CASE WHEN {% condition show_after_sold_measure_values %} 'YES' {% endcondition %} THEN ${TABLE}.SALE_AFTER_SOLD_FLAG ELSE 'N' END  ;;
  }

  dimension: report_type {
    type: string
    hidden: yes
    label: "report type"
    description: "TY/LY Report Period"
    sql: ${report_calendar_global.type} ;;
  }

  #[ERXLPS-1159] - New Dimension for DATE TO USE to use in Sales report.
  dimension: date_to_use {
    label: "DATE TO USE"
    description: "Value selected for DATE TO USE filter"
    type: string
    can_filter: no
    sql: CASE WHEN {% condition date_to_use_filter %} 'REPORTABLE SALES' {% endcondition %} THEN 'REPORTABLE SALES'
              WHEN {% condition date_to_use_filter %} 'SOLD' {% endcondition %} THEN 'SOLD'
              WHEN {% condition date_to_use_filter %} 'FILLED' {% endcondition %} THEN 'FILLED'
              WHEN {% condition date_to_use_filter %} 'RETURNED' {% endcondition %} THEN 'RETURNED'
         END;;
  }

  #[ERXLPS-1055] - Derived columns integration from prescription transaction explore.
  dimension: fill_time {
    label: "Prescription Fill Time"
    description: "Time taken to fill a prescription transaction. Calculation Used: SOLD_DATE - FILLED_DATE"
    type: number
    sql: DATEDIFF(MIN,${filled_date},${sold_date}) ;;
  }

  dimension: patient_age {
    label: "Patient Age at the Time of Fill"
    description: "Patient's Age based on when the transaction was filled"
    type: number
    sql: (DATEDIFF('DAY',${patient.patient_birth_date},${filled_date})/365.25) ;;
  }

  dimension: 100_percent_copay {
    label: "Prescription Paid At 100% Copay"
    description: "Yes/No flag indicating if the transaction was entirely paid at the patient copay amount"
    type: yesno
    sql: ${price} = ${final_copay} ;;
  }

  #[ERXLPS-1070] added will_call_days dimension
  dimension: will_call_days_in_bin {
    label: "Prescription Will Call Days"
    description: "Days for which will call remains in bin. Calculation Used: Sold Date - Will Call Arrival Date OR Current Date - Will Call Arrival Date OR Returned Date - Will Call Arrival Date, depends upon the status of the prescription in the workflow"
    type: number
    sql: CASE WHEN     ${will_call_arrival_date} IS NOT NULL
                   AND ${sold_date} IS NOT NULL
              THEN DATEDIFF(Day,${will_call_arrival_date},${sold_date})
              WHEN     ${will_call_arrival_date} IS NOT NULL
                   AND ${sold_date} IS NULL
                   AND ${returned_date} IS NULL
              THEN DATEDIFF(Day,${will_call_arrival_date},current_date())
              WHEN     ${will_call_arrival_date} IS NOT NULL
                   AND ${sold_date} IS  NULL
                   AND ${returned_date} IS NOT NULL
              THEN DATEDIFF(Day,${will_call_arrival_date},${returned_date})
          END ;;

    }

    dimension_group: reportable_sales {
      label: "Reportable Sales"
      description: "Date when a TP script was adjudicated. For cash scripts, it is set when DE is completed. Example output '2017-01-13'" #[ERXLPS-2054]
      type: time
      can_filter: no
      timeframes: [date]
      sql: ${TABLE}.SALE_REPORTABLE_SALES_DATE ;;
    }

    #[ERXLPS-1182] Time component added and enabled for filter.
    dimension_group: reportable_sales {
      label: "Reportable Sales"
      description: "Date/Time when a TP script was adjudicated. For cash scripts, it is set when DE is completed. Example output '2017-01-13 01:59:59'" #[ERXLPS-2054]
      type: time
      timeframes: [time]
      sql: ${TABLE}.SALE_REPORTABLE_SALES_DATE ;;
    }

    #[ERXLPS-2054] - Seperated hour_of_day from time dimension to provide description with timeframe example.
    dimension_group: reportable_sales {
      label: "Reportable Sales"
      description: "Prescription Reportable Sales Hour of Day. Example output '1'"
      type: time
      timeframes: [hour_of_day]
      sql: ${TABLE}.SALE_REPORTABLE_SALES_DATE ;;
    }

    #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
    #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
    dimension_group: sold {
      label: "Sold"
      description: "Date when prescription was sold. This is based on the Will Call Picked Up Date in EPS. Example output '2017-01-13'" #[ERXLPS-2054]
      type: time
      can_filter: no
      timeframes: [date]
      sql: {% if sales.consider_nh_as_sold._in_query %}
              case when ${is_tx_nh_with_null_sold_date} = 'Y' then ${TABLE}.SALE_REPORTABLE_SALES_DATE else ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE end
           {% else %}
              ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE
           {% endif %}
               ;;
    }

    #[ERXLPS-1182] Time component added and enabled for filter.
    #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
    #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
    dimension_group: sold {
      label: "Sold"
      description: "Date/Time when prescription was sold. This is based on the Will Call Picked Up Date in EPS. Example output '2017-01-13 01:59:59'" #[ERXLPS-2054]
      type: time
      timeframes: [time]
      sql: {% if sales.consider_nh_as_sold._in_query %}
              case when ${is_tx_nh_with_null_sold_date} = 'Y' then ${TABLE}.SALE_REPORTABLE_SALES_DATE else ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE end
           {% else %}
              ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE
           {% endif %}
        ;;
    }

    #[ERXLPS-2054] - Seperated hour_of_day from time dimension to provide description with timeframe example.
    #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
    #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
    dimension_group: sold {
      label: "Sold"
      description: "Prescription Sold Hour of the day. Example output '1'"
      type: time
      timeframes: [hour_of_day]
      sql: {% if sales.consider_nh_as_sold._in_query %}
             case when ${is_tx_nh_with_null_sold_date} = 'Y' then ${TABLE}.SALE_REPORTABLE_SALES_DATE else ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE end
           {% else %}
            ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE
           {% endif %}
        ;;
    }

    dimension_group: returned {
      label: "Returned"
      description: "Date when Credit Return on the transaction was performed. Example output '2017-01-13'" #[ERXLPS-2054]
      type: time
      can_filter: no
      timeframes: [date]
      sql: ${TABLE}.SALE_RETURNED_DATE ;;
    }

    #[ERXLPS-1182] Time component added and enabled for filter.
    dimension_group: returned {
      label: "Returned"
      description: "Date/Time when Credit Return on the transaction was performed. Example output '2017-01-13 01:59:59'" #[ERXLPS-2054]
      type: time
      timeframes: [time]
      sql: ${TABLE}.SALE_RETURNED_DATE ;;
    }

    #[ERXLPS-2054] - Seperated hour_of_day from time dimension to provide description with timeframe example.
    dimension_group: returned {
      label: "Returned"
      description: "Prescription Returned Hour of the day. Example output '1'" #[ERXLPS-2054]
      type: time
      timeframes: [hour_of_day] #[ERXLPS-1945] - Added hour_of_day
      sql: ${TABLE}.SALE_RETURNED_DATE ;;
    }

    dimension_group: filled {
      label: "Filled"
      description: "Date when prescription was filled. Example output '2017-01-13'" #[ERXLPS-2054]
      type: time
      can_filter: no
      timeframes: [date]
      sql: ${TABLE}.SALE_FILL_DATE ;;
    }

    #[ERXLPS-2054] - Updated the description.
    dimension_group: filled {
      label: "Filled"
      description: "Date/Time prescription was filled. Example output '2017-01-13 01:59:59'" #[ERXLPS-2054]
      type: time
      timeframes: [time]
      sql: ${TABLE}.SALE_FILL_DATE ;;
    }

    #[ERXLPS-1945] - Added hour_of_day
    dimension_group: filled {
      label: "Filled"
      description: "Filled Hour of the day. Example output '1'" #[ERXLPS-2054]
      type: time
      timeframes: [hour_of_day]
      sql: ${TABLE}.SALE_FILL_DATE ;;
    }

    measure: last_filled {
      label: "Last Filled Date"
      group_label: "Other Measures"
      description: "Date prescription was last filled"
      type: string
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      sql: MAX(${filled_date}) ;;
    }

    dimension_group: will_call_arrival {
      label: "Will Call Arrival"
      description: "Date/time that a prescription enters Will Call"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_WILL_CALL_ARRIVAL_DATE) ;;
    }

    #[ERXLPS-1182] Time component added and enabled for filter.
    dimension_group: will_call_arrival {
      label: "Will Call Arrival"
      description: "Date/time that a prescription enters Will Call"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [time, hour_of_day] #[ERXLPS-1945] - Added hour_of_day
      sql: ${TABLE}.SALE_WILL_CALL_ARRIVAL_DATE ;;
    }

    dimension_group: rx_tx_return_to_stock {
      label: "Return To Stock"
      description: "Date prescription was returned to stock. The returned to stock date can be populated by a (1) Sold/Picked Up Credit Return, (2) a Will Call/Not Picked Up Return to Stock, or (3) a return from the RTS Utility. This field is EPS only!!!"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RETURN_TO_STOCK_DATE) ;;
    }

    dimension_group: rx_tx_written {
      label: "Prescription Written"
      description: "Date the doctor wrote the prescription. User entered"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_WRITTEN_DATE) ;;
    }

#[ERX-8161] START | - Looker changes: Expose F_RX fields from F_SALE table(already exposed on Sales explore)
    dimension_group: rx_tx_next_refill {
      label: "Next Refill"
      description: "Date prescription can be refilled, based on the days supply. Calculation Used: Filled Date + Days Supply"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_NEXT_REFILL_DATE) ;;
    }

    dimension_group: rx_file_buy {
      label: "Prescription File Buy"
      description: "Date that identifies if a patient or script was imported into EPS as part of a file buy"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_FILE_BUY_DATE) ;;
    }

    dimension: rpt_cal_filled_date {
      hidden: yes
      sql: TO_DATE(${TABLE}.SALE_FILL_DATE) ;;
    }

    #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
    #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
    #[ERXDWPS-5968] - Corrected else logic with TO_DATE function.
    dimension: rpt_cal_sold_date {
      hidden: yes
      sql: {% if sales.consider_nh_as_sold._in_query %}
              case when ${is_tx_nh_with_null_sold_date} = 'Y' then TO_DATE(${TABLE}.SALE_REPORTABLE_SALES_DATE) else TO_DATE(${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE) end
           {% else %}
              TO_DATE(${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE)
           {% endif %}
        ;;
    }

    dimension: rpt_cal_report_sales_date {
      hidden: yes
      sql: TO_DATE(${TABLE}.SALE_REPORTABLE_SALES_DATE) ;;
    }

    dimension: rpt_cal_returned_date {
      hidden: yes
      sql: TO_DATE(${TABLE}.SALE_RETURNED_DATE) ;;
    }

    #[ERXLPS-1055] - Date dimensions for remaining columns from F_RX_TX_LINK table. Start here...
    dimension_group: rx_tx_pos_sold {
      label: "Prescription Transaction POS Sold"
      description: "Date/Time the transaction was sold from the POS system. It is set upon the receipt of a POSSoldRequest from the POS system. This field is EPS only!!!"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_POS_SOLD_DATE ;;
    }

    dimension_group: rx_tx_custom_reported {
      label: "Prescription Transaction Custom Reported"
      description: "Date/time the record was reported on the Meijer Sales Report"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_CUSTOM_REPORTED_DATE ;;
    }

    dimension_group: rx_tx_dob_override {
      label: "Prescription Transaction DOB Override"
      description: "Date/time that the Override of the DOB was completed during DOB verification prompted at will call screen"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_DOB_OVERRIDE_TIME ;;
    }

    dimension_group: rx_tx_last_epr_synch {
      label: "Prescription Transaction Last EPR Synch"
      description: "Date/time when the EPS SYNC occurs and EPR sends a successful response"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_LAST_EPR_SYNCH ;;
    }

    dimension_group: rx_tx_missing {
      label: "Prescription Transaction Missing"
      description: "Date/time when the user reported that prescription missing"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_MISSING_DATE ;;
    }

    dimension_group: rx_tx_pc_ready {
      label: "Prescription Transaction PC Ready"
      description: "Date/time of when the prescription was marked as Patient Accepted Counseling"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_PC_READY_DATE ;;
    }

    dimension_group: rx_tx_replace {
      label: "Prescription Transaction Replace"
      description: "Date application replaced missing/stolen prescription filling"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_REPLACE_DATE ;;
    }

    dimension_group: rx_tx_central_fill_cutoff {
      label: "Prescription Transaction Central Fill Cutoff"
      description: "The cut-off date that the prescription must be transmitted to the fulfillment site by so that the prescription can be delivered by the promised date. System generated depending upon time and date of prescription"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_CENTRAL_FILL_CUTOFF_DATE ;;
    }

    dimension_group: rx_tx_drug_expiration {
      label: "Prescription Transaction Drug Expiration"
      description: "Dispensed drug's expiration date. system generated or user entered"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_DRUG_EXPIRATION_DATE ;;
    }

    dimension_group: rx_tx_drug_image_start {
      label: "Prescription Transaction Drug Image Start"
      description: "Date the drug image was added to the Medi-Span database. Medi-Span DIB"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_DRUG_IMAGE_START_DATE ;;
    }

    dimension_group: rx_tx_follow_up {
      label: "Prescription Transaction Follow Up"
      description: "Date of prescription follow-up. System Generated"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_FOLLOW_UP_DATE ;;
    }

    dimension_group: rx_tx_host_retrieval {
      label: "Prescription Transaction Host Retrieval"
      description: "Date Host retrieved the transaction record. System Generated when transaction record is retrieved"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_HOST_RETRIEVAL_DATE ;;
    }

    dimension_group: rx_tx_photo_id_birth {
      label: "Prescription Transaction Photo Identifier Birth"
      description: "Date of birth of the person dropping off or picking up the prescription. User input"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_PHOTO_ID_BIRTH_DATE ;;
    }

    dimension_group: rx_tx_photo_id_expire {
      label: "Prescription Transaction Photo Identifier Expire"
      description: "The expiration date on photographic identification card, which was presented at drop off or pick up. User entered"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_PHOTO_ID_EXPIRE_DATE ;;
    }

    dimension_group: rx_tx_stop {
      label: "Prescription Transaction Stop"
      description: "Nursing home or institutional stop date. (The date that the patient should stop receiving medication)"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SALE_STOP_DATE ;;
    }

    dimension_group: rx_tx_source_create {
      label: "Prescription Transaction Source Create"
      description: "Date/Time that the record was created. This date is used for central data analysis. Oracle generated timestamp when the insert is made in the database"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: ${TABLE}.SOURCE_CREATE_TIMESTAMP ;;
    }
    #[ERXLPS-1055] - Date dimensions for remaining columns from F_RX_TX_LINK table. End here...
    #[ERXLPS-1055] - Date dimensions for remaining columns from F_RX table. Start here...
    dimension_group: rx_merged_to {
      label: "Prescription Merged To"
      description: "Date the patient was changed on this prescription due to a single-prescription merge"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_MERGED_TO_DATE) ;;
    }

    dimension_group: rx_autofill_enable {
      label: "Prescription Autofill Enabled"
      description: "Date/Time the prescription was set up for auto-fill. This field is EPS only!!!"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_AUTOFILL_ENABLE_DATE) ;;
    }


    dimension_group: rx_received {
      label: "Prescription Received"
      description: "Date/Time that a prescription was presented to the pharmacy for filling. Set either by the user upon receipt of the Rx (or) when a new escript Rx is received in the store (or) populated by the auto transfer response with the received date sent in the auto transfer message. This field is EPS only!!!"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_RECEIVED_DATE) ;;
    }

    dimension_group: rx_last_refill_reminder {
      label: "Prescription Last Refill Reminder"
      description: "Date/Time last time the prescription was triggered for a refill reminder notification"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_LAST_REFILL_REMINDER_DATE) ;;
    }

    dimension_group: rx_short_fill_sent {
      label: "Prescription Short Fill Sent"
      description: "Date/Time used to identify when a SyncScript Short-Fill Request form was printed for the Prescription"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_SHORT_FILL_SENT) ;;
    }

    dimension_group: rx_chain_first_filled {
      label: "Prescription Chain First Filled"
      description: "Original first fill date used to populate SGHC and other.  System generated"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_CHAIN_FIRST_FILLED_DATE) ;;
    }

    dimension_group: rx_expiration {
      label: "Prescription Expiration"
      description: "Date the prescription expires. Generated by client or entered by user"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_EXPIRATION_DATE) ;;
    }

    dimension_group: rx_first_filled {
      label: "Prescription First Filled"
      description: "Original date the system filled and added the prescription to the patient's prescription profile. System generated"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_FIRST_FILLED_DATE) ;;
    }

    dimension_group: rx_original_written {
      label: "Prescription Original Written"
      description: "Date the physician originally wrote the prescription. User entered"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_ORIGINAL_WRITTEN_DATE) ;;
    }

    dimension_group: rx_start {
      label: "Prescription Start"
      description: "Effective Date or the Earliest Fill Date in which the pharmacy may fill a prescription. Can be set from an incoming escript record or set when Data entry is performed on the prescription"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_START_DATE) ;;
    }

    dimension_group: rx_sync_script_enrollment {
      label: "Prescription Sync Script Enrollment"
      description: "Source of prescription enrollment in SyncScript program. System generated"
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_SYNC_SCRIPT_ENROLLMENT_DATE) ;;
    }

    dimension_group: rx_source_create {
      label: "Prescription Source Create"
      description: "Date/Time that the record was created. This date is used for central data analysis. Oracle generated timestamp when the insert is made in the database."
      type: time
      #can_filter: no #[ERXLPS-1245] - Filter option enabled on date columns.
      timeframes: [date]
      sql: TO_DATE(${TABLE}.SALE_RX_SOURCE_CREATE_TIMESTAMP) ;;
    }

    #[ERXLPS-1055] - Date dimensions for remaining columns from F_RX table. End here...

    dimension_group: tx_tp_transmit_queue_submission {
      label: "Transmit Queue Submission"
      description: "Date/Time a third party transmit queue record was submitted to the third party. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp_transmit_queue.tx_tp_transmit_queue_submission_reference}) ;;
      view_label: "TP Transmit Queue"
    }

    dimension_group: tx_tp_transmit_queue_response {
      label: "Transmit Queue Response"
      description: "Date/Time a response for a  third party transmit queue record was received from  the third party. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp_transmit_queue.tx_tp_transmit_queue_response_reference}) ;;
      view_label: "TP Transmit Queue"
    }

    dimension_group: tx_tp_transmit_queue_original_submit {
      label: "Transmit Queue Original Submit"
      description: "Date/Time a third party transmit queue record was originally submitted to the third party. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp_transmit_queue.tx_tp_transmit_queue_original_submit_reference}) ;;
      view_label: "TP Transmit Queue"
    }

    dimension_group: tx_tp_transmit_queue_fill_override {
      label: "Transmit Queue Fill Override"
      description: "Fill date used when transmitting the claim. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp_transmit_queue.tx_tp_transmit_queue_fill_override_reference}) ;;
      view_label: "TP Transmit Queue"
    }

    dimension_group: store_tp_link_begin {
      label: "Claim Card Effective"
      description: "Date this patient third party link record become effective. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tp_link.store_tp_link_begin_reference}) ;;
      view_label: "Claim Card"
    }

    dimension_group: store_tp_link_store_last_used {
      label: "Claim Card Last Used"
      description: "Date a patient third party link record was last used. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tp_link.store_tp_link_store_last_used_reference}) ;;
      view_label: "Claim Card"
    }

    dimension_group: store_card_deactivate {
      label: "Claim Card Deactivate"
      description: "Date record was deactivated. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_card.store_card_deactivate_reference}) ;;
      view_label: "Claim Card"
    }

    dimension_group: store_card_end {
      label: "Claim Card End"
      description: "Date a card record expires. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_card.store_card_end_reference}) ;;
      view_label: "Claim Card"
    }

    #[ERXLPS-726] - Date columns from Response Detail and Submit Detail. Start here
    dimension_group: tx_tp_response_detail_service {
      label: "Response Detail Service"
      description: "Date/Time the prescription was filled or professional service rendered or subsequent payer began coverage following Part A expiration in a long-term care setting only. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp_response_detail.tx_tp_response_detail_service_reference}) ;;
      view_label: "Response Detail"
    }

    dimension_group: tx_tp_submit_detail_service {
      label: "Submit Detail Service"
      description: "Date/Time the prescription was filled or professional service rendered or subsequent payer began coverage following Part A expiration in a long-term care setting only. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp_submit_detail.tx_tp_submit_detail_service_reference}) ;;
      view_label: "Submit Detail"
    }

    dimension_group: tx_tp_submit_detail_patient_birth {
      label: "Submit Detail Patient Birth"
      description: "Date/Time the prescription was filled or professional service rendered or subsequent payer began coverage following Part A expiration in a long-term care setting only. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp_submit_detail.tx_tp_submit_detail_patient_birth_reference}) ;;
      view_label: "Submit Detail"
    }

    dimension_group: tx_tp_submit_detail_workers_comp_injury {
      label: "Submit Detail Workers Comp Injury"
      description: "Date/Time the prescription was filled or professional service rendered or subsequent payer began coverage following Part A expiration in a long-term care setting only. This field is EPS only!!!"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp_submit_detail.tx_tp_submit_detail_workers_comp_injury_reference}) ;;
      view_label: "Submit Detail"
    }
    #[ERXLPS-726] - Date columns from Response Detail and Submit Detail. End here

    #[ERXLPS-1020] - tx_tp_denial_date reference
    dimension_group: tx_tp_denial {
      label: "Claim Denial"
      description: "Date/Time a claim was denied by the third party"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_tx_tp.tx_tp_denial_reference}) ;;
      view_label: "Claim"
    }

    #[ERXLPS-794] - Date Columns from chain_patient_summary_info
    dimension_group: last_filled {
      label: "Store Patient Last Filled"
      description: "Date/Time prescription was last filled"
      type: time
      timeframes: [date]
      sql: TO_DATE(${chain_patient_summary_info.last_filled_reference}) ;;
      view_label: "Patient - Store"
    }

    dimension_group: first_fill {
      label: "Store Patient First Filled"
      description: "Date/Time prescription was first filled"
      type: time
      timeframes: [date]
      sql: TO_DATE(${chain_patient_summary_info.first_fill_reference}) ;;
      view_label: "Patient - Store"
    }

    dimension_group: patient_source_create {
      label: "Store Patient Pharmacy Add"
      description: "Date/Time patient was added to pharmacy"
      type: time
      timeframes: [date]
      sql: TO_DATE(${eps_patient.patient_source_create_reference}) ;;
      view_label: "Patient - Store"
    }

    dimension: rpt_sales_calendar_date {
      label: "Reportable Sales Date"
      description: "Prescription Reportable Sales Date"
      type: date
      hidden: yes
      sql: ${rpt_sales_timeframes.calendar_date} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_chain_id {
      label: "Reportable Sales Chain ID"
      description: "Prescription Reportable Sales Chain ID"
      type: number
      hidden: yes
      sql: ${rpt_sales_timeframes.chain_id} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_calendar_owner_chain_id {
      label: "Reportable Sales Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rpt_sales_timeframes.calendar_owner_chain_id} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_yesno {
      label: "Reportable Sales (Yes/No)"
      group_label: "Reportable Sales Date"
      description: "Yes/No flag indicating if a prescription has a Reportable Sales Date. Example output 'Yes'" #[ERXLPS-2054]
      type: string
      can_filter: yes

      case: {
        when: {
          sql: ${TABLE}.SALE_REPORTABLE_SALES_DATE IS NOT NULL ;;
          label: "Yes"
        }

        when: {
          sql: true ;;
          label: "No"
        }
      }
    }

    dimension: rpt_sales_day_of_week {
      label: "Reportable Sales Day Of Week"
      description: "Prescription Reportable Sales Day Of Week Full Name. Example output 'Monday'" #[ERXLPS-2054]
      type: string
      sql: ${rpt_sales_timeframes.day_of_week} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_day_of_month {
      label: "Reportable Sales Day Of Month"
      description: "Prescription Reportable Sales Day Of Month. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.day_of_month} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_week_of_year {
      label: "Reportable Sales Week Of Year"
      description: "Prescription Reportable Sales Week Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.week_of_year} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_month_num {
      label: "Reportable Sales Month Num"
      description: "Prescription Reportable Sales Month Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.month_num} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_month {
      label: "Reportable Sales Month"
      description: "Prescription Reportable Sales Month. Example output '2017-01'" #[ERXLPS-2054]
      type: string
      sql: ${rpt_sales_timeframes.month} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_quarter_of_year {
      label: "Reportable Sales Quarter Of Year"
      description: "Prescription Reportable Sales Quarter Of Year. Example output 'Q1'" #[ERXLPS-2054]
      type: string
      sql: ${rpt_sales_timeframes.quarter_of_year} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_quarter {
      label: "Reportable Sales Quarter"
      description: "Prescription Reportable Sales Quarter. Example output '2017-Q1'" #[ERXLPS-2054]
      type: string
      sql: ${rpt_sales_timeframes.quarter} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_year {
      label: "Reportable Sales Year"
      description: "Prescription Reportable Sales Year. Example output '2017'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.year} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_day_of_week_index {
      label: "Reportable Sales day Of Week Index"
      description: "Prescription Reportable Sales Day Of Week Index. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.day_of_week_index} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_week_begin_date {
      label: "Reportable Sales Week Begin Date" #[ERXLPS-1229] - Label name change.
      description: "Prescription Reportable Sales Week Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${rpt_sales_timeframes.week_begin_date} ;;
      group_label: "Reportable Sales Date"
    }

    #[ERXLPS-1229] - Added remaining timeframe components from d_fiscal_date
    dimension: rpt_sales_week_end_date {
      label: "Reportable Sales Week End Date"
      description: "Prescription Reportable Sales Week End Date. Example output '2017-01-19'" #[ERXLPS-2054]
      type: date
      sql: ${rpt_sales_timeframes.week_end_date} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_week_of_quarter {
      label: "Reportable Sales Week Of Quarter"
      description: "Prescription Reportable Sales Week of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.week_of_quarter} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_month_begin_date {
      label: "Reportable Sales Month Begin Date"
      description: "Prescription Reportable Sales Month Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${rpt_sales_timeframes.month_begin_date} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_month_end_date {
      label: "Reportable Sales Month End Date"
      description: "Prescription Reportable Sales Month End Date. Example output '2017-01-31'" #[ERXLPS-2054]
      type: date
      sql: ${rpt_sales_timeframes.month_end_date} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_weeks_in_month {
      label: "Reportable Sales Weeks In Month"
      description: "Prescription Reportable Sales Weeks In Month. Example output '4'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.weeks_in_month} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_quarter_begin_date {
      label: "Reportable Sales Quarter Begin Date"
      description: "Prescription Reportable Sales Quarter Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${rpt_sales_timeframes.quarter_begin_date} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_quarter_end_date {
      label: "Reportable Sales Quarter End Date"
      description: "Prescription Reportable Sales Quarter End Date. Example output '2017-03-31'" #[ERXLPS-2054]
      type: date
      sql: ${rpt_sales_timeframes.quarter_end_date} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_weeks_in_quarter {
      label: "Reportable Sales Weeks In Quarter"
      description: "Prescription Reportable Sales Weeks In Quarter. Example output '13'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.weeks_in_quarter} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_year_begin_date {
      label: "Reportable Sales Year Begin Date"
      description: "Prescription Reportable Sales Year Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${rpt_sales_timeframes.year_begin_date} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_year_end_date {
      label: "Reportable Sales Year End Date"
      description: "Prescription Reportable Sales Year End Date. Example output '2017-12-31'" #[ERXLPS-2054]
      type: date
      sql: ${rpt_sales_timeframes.year_end_date} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_weeks_in_year {
      label: "Reportable Sales Weeks In Year"
      description: "Prescription Reportable Sales Weeks In Year. Example output '52'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.weeks_in_year} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_leap_year_flag {
      label: "Reportable Sales Leap Year Flag"
      description: "Prescription Reportable Sales Leap Year Flag. Example output 'N'" #[ERXLPS-2054]
      type: string
      sql: ${rpt_sales_timeframes.leap_year_flag} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_day_of_quarter {
      label: "Reportable Sales Day Of Quarter"
      description: "Prescription Reportable Sales Day of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.day_of_quarter} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: rpt_sales_day_of_year {
      label: "Reportable Sales Day Of Year"
      description: "Prescription Reportable Sales Day of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${rpt_sales_timeframes.day_of_year} ;;
      group_label: "Reportable Sales Date"
    }

    dimension: filled_calendar_date {
      label: "Filled Date"
      description: "Prescription Filled Date"
      type: date
      hidden: yes
      sql: ${filled_timeframes.calendar_date} ;;
      group_label: "Filled Date"
    }

    dimension: filled_chain_id {
      label: "Filled Chain ID"
      description: "Prescription Filled Chain ID"
      type: number
      hidden: yes
      sql: ${filled_timeframes.chain_id} ;;
      group_label: "Filled Date"
    }

    dimension: filled_calendar_owner_chain_id {
      label: "Filled Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${filled_timeframes.calendar_owner_chain_id} ;;
      group_label: "Filled Date"
    }

    dimension: filled_yesno {
      label: "Filled (Yes/No)"
      group_label: "Filled Date"
      description: "Yes/No flag indicating if a prescription has a Filled Date. Example output 'Yes'" #[ERXLPS-2054]
      type: string
      can_filter: yes

      case: {
        when: {
          sql: ${TABLE}.SALE_FILL_DATE IS NOT NULL ;;
          label: "Yes"
        }

        when: {
          sql: true ;;
          label: "No"
        }
      }
    }

    dimension: filled_day_of_week {
      label: "Filled Day Of Week"
      description: "Prescription Filled Day Of Week Full Name. Example output 'Monday'" #[ERXLPS-2054]
      type: string
      sql: ${filled_timeframes.day_of_week} ;;
      group_label: "Filled Date"
    }

    dimension: filled_day_of_month {
      label: "Filled Day Of Month"
      description: "Prescription Filled Day Of Month. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.day_of_month} ;;
      group_label: "Filled Date"
    }

    dimension: filled_week_of_year {
      label: "Filled Week Of Year"
      description: "Prescription Filled Week Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.week_of_year} ;;
      group_label: "Filled Date"
    }

    dimension: filled_month_num {
      label: "Filled Month Num"
      description: "Prescription Filled Month Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.month_num} ;;
      group_label: "Filled Date"
    }

    dimension: filled_month {
      label: "Filled Month"
      description: "Prescription Filled Month. Example output '2017-01'" #[ERXLPS-2054]
      type: string
      sql: ${filled_timeframes.month} ;;
      group_label: "Filled Date"
    }

    dimension: filled_quarter_of_year {
      label: "Filled Quarter Of Year"
      description: "Prescription Filled Quarter Of Year. Example output 'Q1'" #[ERXLPS-2054]
      type: string
      sql: ${filled_timeframes.quarter_of_year} ;;
      group_label: "Filled Date"
    }

    dimension: filled_quarter {
      label: "Filled Quarter"
      description: "Prescription Filled Quarter. Example output '2017-Q1'" #[ERXLPS-2054]
      type: string
      sql: ${filled_timeframes.quarter} ;;
      group_label: "Filled Date"
    }

    dimension: filled_year {
      label: "Filled Year"
      description: "Prescription Filled Year. Example output '2017'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.year} ;;
      group_label: "Filled Date"
    }

    dimension: filled_day_of_week_index {
      label: "Filled day Of Week Index"
      description: "Prescription Filled Day Of Week Index. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.day_of_week_index} ;;
      group_label: "Filled Date"
    }

    dimension: filled_week_begin_date {
      label: "Filled Week Begin Date" #[ERXLPS-1229] - Label name change.
      description: "Prescription Filled Week Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${filled_timeframes.week_begin_date} ;;
      group_label: "Filled Date"
    }

    #[ERXLPS-1229] - Added remaining timeframe components from d_fiscal_date
    dimension: filled_week_end_date {
      label: "Filled Week End Date"
      description: "Prescription Filled Week End Date. Example output '2017-01-19'" #[ERXLPS-2054]
      type: date
      sql: ${filled_timeframes.week_end_date} ;;
      group_label: "Filled Date"
    }

    dimension: filled_week_of_quarter {
      label: "Filled Week Of Quarter"
      description: "Prescription Filled Week of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.week_of_quarter} ;;
      group_label: "Filled Date"
    }

    dimension: filled_month_begin_date {
      label: "Filled Month Begin Date"
      description: "Prescription Filled Month Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${filled_timeframes.month_begin_date} ;;
      group_label: "Filled Date"
    }

    dimension: filled_month_end_date {
      label: "Filled Month End Date"
      description: "Prescription Filled Month End Date. Example output '2017-01-31'" #[ERXLPS-2054]
      type: date
      sql: ${filled_timeframes.month_end_date} ;;
      group_label: "Filled Date"
    }

    dimension: filled_weeks_in_month {
      label: "Filled Weeks In Month"
      description: "Prescription Filled Weeks In Month. Example output '4'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.weeks_in_month} ;;
      group_label: "Filled Date"
    }

    dimension: filled_quarter_begin_date {
      label: "Filled Quarter Begin Date"
      description: "Prescription Filled Quarter Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${filled_timeframes.quarter_begin_date} ;;
      group_label: "Filled Date"
    }

    dimension: filled_quarter_end_date {
      label: "Filled Quarter End Date"
      description: "Prescription Filled Quarter End Date. Example output '2017-03-31'" #[ERXLPS-2054]
      type: date
      sql: ${filled_timeframes.quarter_end_date} ;;
      group_label: "Filled Date"
    }

    dimension: filled_weeks_in_quarter {
      label: "Filled Weeks In Quarter"
      description: "Prescription Filled Weeks In Quarter. Example output '13'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.weeks_in_quarter} ;;
      group_label: "Filled Date"
    }

    dimension: filled_year_begin_date {
      label: "Filled Year Begin Date"
      description: "Prescription Filled Year Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${filled_timeframes.year_begin_date} ;;
      group_label: "Filled Date"
    }

    dimension: filled_year_end_date {
      label: "Filled Year End Date"
      description: "Prescription Filled Year End Date. Example output '2017-12-31'" #[ERXLPS-2054]
      type: date
      sql: ${filled_timeframes.year_end_date} ;;
      group_label: "Filled Date"
    }

    dimension: filled_weeks_in_year {
      label: "Filled Weeks In Year"
      description: "Prescription Filled Weeks In Year. Example output '52'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.weeks_in_year} ;;
      group_label: "Filled Date"
    }

    dimension: filled_leap_year_flag {
      label: "Filled Leap Year Flag"
      description: "Prescription Filled Leap Year Flag. Example output 'N'" #[ERXLPS-2054]
      type: string
      sql: ${filled_timeframes.leap_year_flag} ;;
      group_label: "Filled Date"
    }

    dimension: filled_day_of_quarter {
      label: "Filled Day Of Quarter"
      description: "Prescription Filled Day of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.day_of_quarter} ;;
      group_label: "Filled Date"
    }

    dimension: filled_day_of_year {
      label: "Filled Day Of Year"
      description: "Prescription Filled Day of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${filled_timeframes.day_of_year} ;;
      group_label: "Filled Date"
    }

    dimension: rtn_to_stock_calendar_date {
      label: "Return To Stock Date"
      description: "Prescription Return To Stock Date"
      type: date
      hidden: yes
      sql: ${rtn_stock_timeframes.calendar_date} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_chain_id {
      label: "Return To Stock Chain ID"
      description: "Prescription Return To Stock Chain ID"
      type: number
      hidden: yes
      sql: ${rtn_stock_timeframes.chain_id} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_calendar_owner_chain_id {
      label: "Return To Stock Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rtn_stock_timeframes.calendar_owner_chain_id} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_day_of_week {
      label: "Return To Stock Day Of Week"
      description: "Prescription Return To Stock Day Of Week Full Name"
      type: string
      sql: ${rtn_stock_timeframes.day_of_week} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_day_of_month {
      label: "Return To Stock Day Of Month"
      description: "Prescription Return To Stock Day Of Month"
      type: number
      sql: ${rtn_stock_timeframes.day_of_month} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_week_of_year {
      label: "Return To Stock Week Of Year"
      description: "Prescription Return To Stock Week Of Year"
      type: number
      sql: ${rtn_stock_timeframes.week_of_year} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_month_num {
      label: "Return To Stock Month Num"
      description: "Prescription Return To Stock Month Of Year"
      type: number
      sql: ${rtn_stock_timeframes.month_num} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_month {
      label: "Return To Stock Month"
      description: "Prescription Return To Stock Month"
      type: string
      sql: ${rtn_stock_timeframes.month} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_quarter_of_year {
      label: "Return To Stock Quarter Of Year"
      description: "Prescription Return To Stock Quarter Of Year"
      type: string
      sql: ${rtn_stock_timeframes.quarter_of_year} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_quarter {
      label: "Return To Stock Quarter"
      description: "Prescription Return To Stock Quarter"
      type: string
      sql: ${rtn_stock_timeframes.quarter} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_year {
      label: "Return To Stock Year"
      description: "Prescription Return To Stock Year"
      type: number
      sql: ${rtn_stock_timeframes.year} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_day_of_week_index {
      label: "Return To Stock day Of Week Index"
      description: "Prescription Return To Stock Day Of Week Index"
      type: number
      sql: ${rtn_stock_timeframes.day_of_week_index} ;;
      group_label: "Return To Stock Date"
    }

    dimension: rtn_to_stock_week_begin_date {
      label: "Return To Stock Week"
      description: "Prescription Return To Stock Week Begin Date"
      type: date
      sql: ${rtn_stock_timeframes.week_begin_date} ;;
      group_label: "Return To Stock Date"
    }

    dimension: will_call_arrival_calendar_date {
      label: "Will Call Arrival Date"
      description: "Prescription Will Call Arrival Date"
      type: date
      hidden: yes
      sql: ${will_call_arrival_timeframes.calendar_date} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_chain_id {
      label: "Will Call Arrival Chain ID"
      description: "Prescription Will Call Arrival Chain ID"
      type: number
      hidden: yes
      sql: ${will_call_arrival_timeframes.chain_id} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_calendar_owner_chain_id {
      label: "Will Call Arrival Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${will_call_arrival_timeframes.calendar_owner_chain_id} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_yesno {
      label: "Will Call Arrival (Yes/No)"
      group_label: "Will Call Arrival Date"
      description: "Yes/No flag indicating if a prescription has a Will Call Arrival Date"
      type: string
      can_filter: yes

      case: {
        when: {
          sql: ${TABLE}.SALE_WILL_CALL_ARRIVAL_DATE IS NOT NULL ;;
          label: "Yes"
        }

        when: {
          sql: true ;;
          label: "No"
        }
      }
    }

    dimension: will_call_arrival_day_of_week {
      label: "Will Call Arrival Day Of Week"
      description: "Prescription Will Call Arrival Day Of Week Full Name"
      type: string
      sql: ${will_call_arrival_timeframes.day_of_week} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_day_of_month {
      label: "Will Call Arrival Day Of Month"
      description: "Prescription Will Call Arrival Day Of Month"
      type: number
      sql: ${will_call_arrival_timeframes.day_of_month} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_week_of_year {
      label: "Will Call Arrival Week Of Year"
      description: "Prescription Will Call Arrival Week Of Year"
      type: number
      sql: ${will_call_arrival_timeframes.week_of_year} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_month_num {
      label: "Will Call Arrival Month Num"
      description: "Prescription Will Call Arrival Month Of Year"
      type: number
      sql: ${will_call_arrival_timeframes.month_num} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_month {
      label: "Will Call Arrival Month"
      description: "Prescription Will Call Arrival Month"
      type: string
      sql: ${will_call_arrival_timeframes.month} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_quarter_of_year {
      label: "Will Call Arrival Quarter Of Year"
      description: "Prescription Will Call Arrival Quarter Of Year"
      type: string
      sql: ${will_call_arrival_timeframes.quarter_of_year} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_quarter {
      label: "Will Call Arrival Quarter"
      description: "Prescription Will Call Arrival Quarter"
      type: string
      sql: ${will_call_arrival_timeframes.quarter} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_year {
      label: "Will Call Arrival Year"
      description: "Prescription Will Call Arrival Year"
      type: number
      sql: ${will_call_arrival_timeframes.year} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_day_of_week_index {
      label: "Will Call Arrival day Of Week Index"
      description: "Prescription Will Call Arrival Day Of Week Index"
      type: number
      sql: ${will_call_arrival_timeframes.day_of_week_index} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: will_call_arrival_week_begin_date {
      label: "Will Call Arrival Week"
      description: "Prescription Will Call Arrival Week Begin Date"
      type: date
      sql: ${will_call_arrival_timeframes.week_begin_date} ;;
      group_label: "Will Call Arrival Date"
    }

    dimension: returned_calendar_date {
      label: "Returned Date"
      description: "Prescription Returned Date"
      type: date
      hidden: yes
      sql: ${returned_timeframes.calendar_date} ;;
      group_label: "Returned Date"
    }

    dimension: returned_chain_id {
      label: "Returned Chain ID"
      description: "Prescription Returned Chain ID"
      type: number
      hidden: yes
      sql: ${returned_timeframes.chain_id} ;;
      group_label: "Returned Date"
    }

    dimension: returned_calendar_owner_chain_id {
      label: "Returned Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${returned_timeframes.calendar_owner_chain_id} ;;
      group_label: "Returned Date"
    }

    #[ERXLPS-2054] Retunred(Yes/No) timeframe added
    dimension: retunred_yesno {
      label: "Returned (Yes/No)"
      group_label: "Returned Date"
      description: "Yes/No flag indicating if a prescription has Credit Retuned Date. Example output 'Yes'" #[ERXLPS-2054]
      type: string
      can_filter: yes

      case: {
        when: {
          sql: ${TABLE}.SALE_RETURNED_DATE IS NOT NULL ;;
          label: "Yes"
        }

        when: {
          sql: true ;;
          label: "No"
        }
      }
    }

    dimension: returned_day_of_week {
      label: "Returned Day Of Week"
      description: "Prescription Returned Day Of Week Full Name. Example output 'Monday'" #[ERXLPS-2054]
      type: string
      sql: ${returned_timeframes.day_of_week} ;;
      group_label: "Returned Date"
    }

    dimension: returned_day_of_month {
      label: "Returned Day Of Month"
      description: "Prescription Returned Day Of Month. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.day_of_month} ;;
      group_label: "Returned Date"
    }

    dimension: returned_week_of_year {
      label: "Returned Week Of Year"
      description: "Prescription Returned Week Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.week_of_year} ;;
      group_label: "Returned Date"
    }

    dimension: returned_month_num {
      label: "Returned Month Num"
      description: "Prescription Returned Month Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.month_num} ;;
      group_label: "Returned Date"
    }

    dimension: returned_month {
      label: "Returned Month"
      description: "Prescription Returned Month. Example output '2017-01'" #[ERXLPS-2054]
      type: string
      sql: ${returned_timeframes.month} ;;
      group_label: "Returned Date"
    }

    dimension: returned_quarter_of_year {
      label: "Returned Quarter Of Year"
      description: "Prescription Returned Quarter Of Year. Example output 'Q1'" #[ERXLPS-2054]
      type: string
      sql: ${returned_timeframes.quarter_of_year} ;;
      group_label: "Returned Date"
    }

    dimension: returned_quarter {
      label: "Returned Quarter"
      description: "Prescription Returned Quarter. Example output '2017-Q1'" #[ERXLPS-2054]
      type: string
      sql: ${returned_timeframes.quarter} ;;
      group_label: "Returned Date"
    }

    dimension: returned_year {
      label: "Returned Year"
      description: "Prescription Returned Year. Example output '2017'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.year} ;;
      group_label: "Returned Date"
    }

    dimension: returned_day_of_week_index {
      label: "Returned day Of Week Index"
      description: "Prescription Returned Day Of Week Index. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.day_of_week_index} ;;
      group_label: "Returned Date"
    }

    dimension: returned_week_begin_date {
      label: "Returned Week Begin Date" #[ERXLPS-1229] - Label name change.
      description: "Prescription Returned Week Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${returned_timeframes.week_begin_date} ;;
      group_label: "Returned Date"
    }

    #[ERXLPS-1229] - Added remaining timeframe components from d_fiscal_date
    dimension: returned_week_end_date {
      label: "Returned Week End Date"
      description: "Prescription Returned Week End Date. Example output '2017-01-19'" #[ERXLPS-2054]
      type: date
      sql: ${returned_timeframes.week_end_date} ;;
      group_label: "Returned Date"
    }

    dimension: returned_week_of_quarter {
      label: "Returned Week Of Quarter"
      description: "Prescription Returned Week of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.week_of_quarter} ;;
      group_label: "Returned Date"
    }

    dimension: returned_month_begin_date {
      label: "Returned Month Begin Date"
      description: "Prescription Returned Month Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${returned_timeframes.month_begin_date} ;;
      group_label: "Returned Date"
    }

    dimension: returned_month_end_date {
      label: "Returned Month End Date"
      description: "Prescription Returned Month End Date. Example output '2017-01-31'" #[ERXLPS-2054]
      type: date
      sql: ${returned_timeframes.month_end_date} ;;
      group_label: "Returned Date"
    }

    dimension: returned_weeks_in_month {
      label: "Returned Weeks In Month"
      description: "Prescription Returned Weeks In Month. Example output '4'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.weeks_in_month} ;;
      group_label: "Returned Date"
    }

    dimension: returned_quarter_begin_date {
      label: "Returned Quarter Begin Date"
      description: "Prescription Returned Quarter Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${returned_timeframes.quarter_begin_date} ;;
      group_label: "Returned Date"
    }

    dimension: returned_quarter_end_date {
      label: "Returned Quarter End Date"
      description: "Prescription Returned Quarter End Date. Example output '2017-03-31'" #[ERXLPS-2054]
      type: date
      sql: ${returned_timeframes.quarter_end_date} ;;
      group_label: "Returned Date"
    }

    dimension: returned_weeks_in_quarter {
      label: "Returned Weeks In Quarter"
      description: "Prescription Returned Weeks In Quarter. Example output '13'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.weeks_in_quarter} ;;
      group_label: "Returned Date"
    }

    dimension: returned_year_begin_date {
      label: "Returned Year Begin Date"
      description: "Prescription Returned Year Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${returned_timeframes.year_begin_date} ;;
      group_label: "Returned Date"
    }

    dimension: returned_year_end_date {
      label: "Returned Year End Date"
      description: "Prescription Returned Year End Date. Example output '2017-12-31'" #[ERXLPS-2054]
      type: date
      sql: ${returned_timeframes.year_end_date} ;;
      group_label: "Returned Date"
    }

    dimension: returned_weeks_in_year {
      label: "Returned Weeks In Year"
      description: "Prescription Returned Weeks In Year. Example output '52'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.weeks_in_year} ;;
      group_label: "Returned Date"
    }

    dimension: returned_leap_year_flag {
      label: "Returned Leap Year Flag"
      description: "Prescription Returned Leap Year Flag. Example output 'N'" #[ERXLPS-2054]
      type: string
      sql: ${returned_timeframes.leap_year_flag} ;;
      group_label: "Returned Date"
    }

    dimension: returned_day_of_quarter {
      label: "Returned Day Of Quarter"
      description: "Prescription Returned Day of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.day_of_quarter} ;;
      group_label: "Returned Date"
    }

    dimension: returned_day_of_year {
      label: "Returned Day Of Year"
      description: "Prescription Returned Day of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${returned_timeframes.day_of_year} ;;
      group_label: "Returned Date"
    }

    dimension: sold_calendar_date {
      label: "Sold Date"
      description: "Prescription Sold Date"
      type: date
      hidden: yes
      sql: ${sold_timeframes.calendar_date} ;;
      group_label: "Sold Date"
    }

    dimension: sold_chain_id {
      label: "Sold Chain ID"
      description: "Prescription Sold Chain ID"
      type: number
      hidden: yes
      sql: ${sold_timeframes.chain_id} ;;
      group_label: "Sold Date"
    }

    dimension: sold_calendar_owner_chain_id {
      label: "Sold Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${sold_timeframes.calendar_owner_chain_id} ;;
      group_label: "Sold Date"
    }

    #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
    #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
    #[ERXDWPS-5951] - Made changes to fix the production issue for sold_yesno object
    dimension: sold_yesno {
      label: "Sold (Yes/No)"
      group_label: "Sold Date"
      description: "Yes/No flag indicating if a prescription has a Sold Date. Example output 'Yes'" #[ERXLPS-2054]
      type: string
      can_filter: yes

      case: {
        when: {
          sql: {% if sales.consider_nh_as_sold._in_query %}
                  case when ${is_tx_nh_with_null_sold_date} = 'Y' then ${TABLE}.SALE_REPORTABLE_SALES_DATE else ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE end IS NOT NULL
               {% else %}
                  ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE IS NOT NULL
               {% endif %}
             ;;
          label: "Yes"
        }

        when: {
          sql: true ;;
          label: "No"
        }
      }
    }

    dimension: sold_day_of_week {
      label: "Sold Day Of Week"
      description: "Prescription Sold Day Of Week Full Name. Example output 'Monday'" #[ERXLPS-2054]
      type: string
      sql: ${sold_timeframes.day_of_week} ;;
      group_label: "Sold Date"
    }

    dimension: sold_day_of_month {
      label: "Sold Day Of Month"
      description: "Prescription Sold Day Of Month. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.day_of_month} ;;
      group_label: "Sold Date"
    }

    dimension: sold_week_of_year {
      label: "Sold Week Of Year"
      description: "Prescription Sold Week Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.week_of_year} ;;
      group_label: "Sold Date"
    }

    dimension: sold_month_num {
      label: "Sold Month Num"
      description: "Prescription Sold Month Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.month_num} ;;
      group_label: "Sold Date"
    }

    dimension: sold_month {
      label: "Sold Month"
      description: "Prescription Sold Month. Example output '2017-01'" #[ERXLPS-2054]
      type: string
      sql: ${sold_timeframes.month} ;;
      group_label: "Sold Date"
    }

    dimension: sold_quarter_of_year {
      label: "Sold Quarter Of Year"
      description: "Prescription Sold Quarter Of Year. Example output 'Q1'" #[ERXLPS-2054]
      type: string
      sql: ${sold_timeframes.quarter_of_year} ;;
      group_label: "Sold Date"
    }

    dimension: sold_quarter {
      label: "Sold Quarter"
      description: "Prescription Sold Quarter. Example output '2017-Q1'" #[ERXLPS-2054]
      type: string
      sql: ${sold_timeframes.quarter} ;;
      group_label: "Sold Date"
    }

    dimension: sold_year {
      label: "Sold Year"
      description: "Prescription Sold Year. Example output '2017'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.year} ;;
      group_label: "Sold Date"
    }

    dimension: sold_day_of_week_index {
      label: "Sold day Of Week Index"
      description: "Prescription Sold Day Of Week Index. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.day_of_week_index} ;;
      group_label: "Sold Date"
    }

    dimension: sold_week_begin_date {
      label: "Sold Week Begin Date" #[ERXLPS-1229] - Label name change.
      description: "Prescription Sold Week Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${sold_timeframes.week_begin_date} ;;
      group_label: "Sold Date"
    }

    #[ERXLPS-1229] - Added remaining timeframe components from d_fiscal_date
    dimension: sold_week_end_date {
      label: "Sold Week End Date"
      description: "Prescription Sold Week End Date. Example output '2017-01-19'" #[ERXLPS-2054]
      type: date
      sql: ${sold_timeframes.week_end_date} ;;
      group_label: "Sold Date"
    }

    dimension: sold_week_of_quarter {
      label: "Sold Week Of Quarter"
      description: "Prescription Sold Week of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.week_of_quarter} ;;
      group_label: "Sold Date"
    }

    dimension: sold_month_begin_date {
      label: "Sold Month Begin Date"
      description: "Prescription Sold Month Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${sold_timeframes.month_begin_date} ;;
      group_label: "Sold Date"
    }

    dimension: sold_month_end_date {
      label: "Sold Month End Date"
      description: "Prescription Sold Month End Date. Example output '2017-01-31'" #[ERXLPS-2054]
      type: date
      sql: ${sold_timeframes.month_end_date} ;;
      group_label: "Sold Date"
    }

    dimension: sold_weeks_in_month {
      label: "Sold Weeks In Month"
      description: "Prescription Sold Weeks In Month. Example output '4'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.weeks_in_month} ;;
      group_label: "Sold Date"
    }

    dimension: sold_quarter_begin_date {
      label: "Sold Quarter Begin Date"
      description: "Prescription Sold Quarter Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${sold_timeframes.quarter_begin_date} ;;
      group_label: "Sold Date"
    }

    dimension: sold_quarter_end_date {
      label: "Sold Quarter End Date"
      description: "Prescription Sold Quarter End Date. Example output '2017-03-31'" #[ERXLPS-2054]
      type: date
      sql: ${sold_timeframes.quarter_end_date} ;;
      group_label: "Sold Date"
    }

    dimension: sold_weeks_in_quarter {
      label: "Sold Weeks In Quarter"
      description: "Prescription Sold Weeks In Quarter. Example output '13'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.weeks_in_quarter} ;;
      group_label: "Sold Date"
    }

    dimension: sold_year_begin_date {
      label: "Sold Year Begin Date"
      description: "Prescription Sold Year Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${sold_timeframes.year_begin_date} ;;
      group_label: "Sold Date"
    }

    dimension: sold_year_end_date {
      label: "Sold Year End Date"
      description: "Prescription Sold Year End Date. Example output '2017-12-31'" #[ERXLPS-2054]
      type: date
      sql: ${sold_timeframes.year_end_date} ;;
      group_label: "Sold Date"
    }

    dimension: sold_weeks_in_year {
      label: "Sold Weeks In Year"
      description: "Prescription Sold Weeks In Year. Example output '52'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.weeks_in_year} ;;
      group_label: "Sold Date"
    }

    dimension: sold_leap_year_flag {
      label: "Sold Leap Year Flag"
      description: "Prescription Sold Leap Year Flag. Example output 'N'" #[ERXLPS-2054]
      type: string
      sql: ${sold_timeframes.leap_year_flag} ;;
      group_label: "Sold Date"
    }

    dimension: sold_day_of_quarter {
      label: "Sold Day Of Quarter"
      description: "Prescription Sold Day of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.day_of_quarter} ;;
      group_label: "Sold Date"
    }

    dimension: sold_day_of_year {
      label: "Sold Day Of Year"
      description: "Prescription Sold Day of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${sold_timeframes.day_of_year} ;;
      group_label: "Sold Date"
    }

    dimension: written_calendar_date {
      label: "Prescription Written Date"
      description: "Prescription Written Date"
      type: date
      hidden: yes
      sql: ${written_timeframes.calendar_date} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_chain_id {
      label: "Prescription Written Chain ID"
      description: "Prescription Written Chain ID"
      type: number
      hidden: yes
      sql: ${written_timeframes.chain_id} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_calendar_owner_chain_id {
      label: "Prescription Written Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${written_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_day_of_week {
      label: "Prescription Written Day Of Week"
      description: "Prescription Written Day Of Week Full Name"
      type: string
      sql: ${written_timeframes.day_of_week} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_day_of_month {
      label: "Prescription Written Day Of Month"
      description: "Prescription Written Day Of Month"
      type: number
      sql: ${written_timeframes.day_of_month} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_week_of_year {
      label: "Prescription Written Week Of Year"
      description: "Prescription Written Week Of Year"
      type: number
      sql: ${written_timeframes.week_of_year} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_month_num {
      label: "Prescription Written Month Num"
      description: "Prescription Written Month Of Year"
      type: number
      sql: ${written_timeframes.month_num} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_month {
      label: "Prescription Written Month"
      description: "Prescription Written Month"
      type: string
      sql: ${written_timeframes.month} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_quarter_of_year {
      label: "Prescription Written Quarter Of Year"
      description: "Prescription Written Quarter Of Year"
      type: string
      sql: ${written_timeframes.quarter_of_year} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_quarter {
      label: "Prescription Written Quarter"
      description: "Prescription Written Quarter"
      type: string
      sql: ${written_timeframes.quarter} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_year {
      label: "Prescription Written Year"
      description: "Prescription Written Year"
      type: number
      sql: ${written_timeframes.year} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_day_of_week_index {
      label: "Prescription Written day Of Week Index"
      description: "Prescription Written Day Of Week Index"
      type: number
      sql: ${written_timeframes.day_of_week_index} ;;
      group_label: "Prescription Written Date"
    }

    dimension: written_week_begin_date {
      label: "Prescription Written Week"
      description: "Prescription Written Week Begin Date"
      type: date
      sql: ${written_timeframes.week_begin_date} ;;
      group_label: "Prescription Written Date"
    }

    dimension: next_refill_calendar_date {
      label: "Next Refill Date"
      description: "Prescription Next Refill Date"
      type: date
      hidden: yes
      sql: ${next_refill_timeframes.calendar_date} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_chain_id {
      label: "Next Refill Chain ID"
      description: "Prescription Next Refill Chain ID"
      type: number
      hidden: yes
      sql: ${next_refill_timeframes.chain_id} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_calendar_owner_chain_id {
      label: "Next Refill Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${next_refill_timeframes.calendar_owner_chain_id} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_day_of_week {
      label: "Next Refill Day Of Week"
      description: "Prescription Next Refill Day Of Week Full Name"
      type: string
      sql: ${next_refill_timeframes.day_of_week} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_day_of_month {
      label: "Next Refill Day Of Month"
      description: "Prescription Next Refill Day Of Month"
      type: number
      sql: ${next_refill_timeframes.day_of_month} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_week_of_year {
      label: "Next Refill Week Of Year"
      description: "Prescription Next Refill Week Of Year"
      type: number
      sql: ${next_refill_timeframes.week_of_year} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_month_num {
      label: "Next Refill Month Num"
      description: "Prescription Next Refill Month Of Year"
      type: number
      sql: ${next_refill_timeframes.month_num} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_month {
      label: "Next Refill Month"
      description: "Prescription Next Refill Month"
      type: string
      sql: ${next_refill_timeframes.month} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_quarter_of_year {
      label: "Next Refill Quarter Of Year"
      description: "Prescription Next Refill Quarter Of Year"
      type: string
      sql: ${next_refill_timeframes.quarter_of_year} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_quarter {
      label: "Next Refill Quarter"
      description: "Prescription Next Refill Quarter"
      type: string
      sql: ${next_refill_timeframes.quarter} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_year {
      label: "Next Refill Year"
      description: "Prescription Next Refill Year"
      type: number
      sql: ${next_refill_timeframes.year} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_day_of_week_index {
      label: "Next Refill day Of Week Index"
      description: "Prescription Next Refill Day Of Week Index"
      type: number
      sql: ${next_refill_timeframes.day_of_week_index} ;;
      group_label: "Next Refill Date"
    }

    dimension: next_refill_week_begin_date {
      label: "Next Refill Week"
      description: "Prescription Next Refill Week Begin Date"
      type: date
      sql: ${next_refill_timeframes.week_begin_date} ;;
      group_label: "Next Refill Date"
    }

    dimension: file_buy_calendar_date {
      label: "Prescription File Buy Date"
      description: "Prescription File Buy Date"
      type: date
      hidden: yes
      sql: ${file_buy_timeframes.calendar_date} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_chain_id {
      label: "Prescription File Buy Chain ID"
      description: "Prescription File Buy Chain ID"
      type: number
      hidden: yes
      sql: ${file_buy_timeframes.chain_id} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_calendar_owner_chain_id {
      label: "Prescription File Buy Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${file_buy_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_day_of_week {
      label: "Prescription File Buy Day Of Week"
      description: "Prescription File Buy Day Of Week Full Name"
      type: string
      sql: ${file_buy_timeframes.day_of_week} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_day_of_month {
      label: "Prescription File Buy Day Of Month"
      description: "Prescription File Buy Day Of Month"
      type: number
      sql: ${file_buy_timeframes.day_of_month} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_week_of_year {
      label: "Prescription File Buy Week Of Year"
      description: "Prescription File Buy Week Of Year"
      type: number
      sql: ${file_buy_timeframes.week_of_year} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_month_num {
      label: "Prescription File Buy Month Num"
      description: "Prescription File Buy Month Of Year"
      type: number
      sql: ${file_buy_timeframes.month_num} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_month {
      label: "Prescription File Buy Month"
      description: "Prescription File Buy Month"
      type: string
      sql: ${file_buy_timeframes.month} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_quarter_of_year {
      label: "Prescription File Buy Quarter Of Year"
      description: "Prescription File Buy Quarter Of Year"
      type: string
      sql: ${file_buy_timeframes.quarter_of_year} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_quarter {
      label: "Prescription File Buy Quarter"
      description: "Prescription File Buy Quarter"
      type: string
      sql: ${file_buy_timeframes.quarter} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_year {
      label: "Prescription File Buy Year"
      description: "Prescription File Buy Year"
      type: number
      sql: ${file_buy_timeframes.year} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_day_of_week_index {
      label: "Prescription File Buy day Of Week Index"
      description: "Prescription File Buy Day Of Week Index"
      type: number
      sql: ${file_buy_timeframes.day_of_week_index} ;;
      group_label: "Prescription File Buy Date"
    }

    dimension: file_buy_week_begin_date {
      label: "Prescription File Buy Week"
      description: "Prescription File Buy Week Begin Date"
      type: date
      sql: ${file_buy_timeframes.week_begin_date} ;;
      group_label: "Prescription File Buy Date"
    }

    #[ERXLPS-1055] Remaining date columns added from F_RX_TX_LINK.  Start here...
    dimension: rx_tx_pos_sold_calendar_date {
      label: "Prescription Transaction POS Sold"
      description: "Prescription Transaction POS Sold Date"
      type: date
      hidden: yes
      sql: ${rx_tx_pos_sold_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_chain_id {
      label: "Prescription Transaction POS Sold Chain ID"
      description: "Prescription Transaction POS Sold Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_pos_sold_timeframes.chain_id} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_calendar_owner_chain_id {
      label: "Prescription Transaction POS Sold Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_pos_sold_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_day_of_week {
      label: "Prescription Transaction POS Sold Day Of Week"
      description: "Prescription Transaction POS Sold Day Of Week Full Name"
      type: string
      sql: ${rx_tx_pos_sold_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_day_of_month {
      label: "Prescription Transaction POS Sold Day Of Month"
      description: "Prescription Transaction POS Sold Day Of Month"
      type: number
      sql: ${rx_tx_pos_sold_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_week_of_year {
      label: "Prescription Transaction POS Sold Week Of Year"
      description: "Prescription Transaction POS Sold Week Of Year"
      type: number
      sql: ${rx_tx_pos_sold_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_month_num {
      label: "Prescription Transaction POS Sold Month Num"
      description: "Prescription Transaction POS Sold Month Of Year"
      type: number
      sql: ${rx_tx_pos_sold_timeframes.month_num} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_month {
      label: "Prescription Transaction POS Sold Month"
      description: "Prescription Transaction POS Sold Month"
      type: string
      sql: ${rx_tx_pos_sold_timeframes.month} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_quarter_of_year {
      label: "Prescription Transaction POS Sold Quarter Of Year"
      description: "Prescription Transaction POS Sold Quarter Of Year"
      type: string
      sql: ${rx_tx_pos_sold_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_quarter {
      label: "Prescription Transaction POS Sold Quarter"
      description: "Prescription Transaction POS Sold Quarter"
      type: string
      sql: ${rx_tx_pos_sold_timeframes.quarter} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_year {
      label: "Prescription Transaction POS Sold Year"
      description: "Prescription Transaction POS Sold Year"
      type: number
      sql: ${rx_tx_pos_sold_timeframes.year} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_day_of_week_index {
      label: "Prescription Transaction POS Sold day Of Week Index"
      description: "Prescription Transaction POS Sold Day Of Week Index"
      type: number
      sql: ${rx_tx_pos_sold_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_pos_sold_week_begin_date {
      label: "Prescription Transaction POS Sold Week"
      description: "Prescription Transaction POS Sold Week Begin Date"
      type: date
      sql: ${rx_tx_pos_sold_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction POS Sold Date"
    }

    dimension: rx_tx_custom_reported_calendar_date {
      label: "Prescription Transaction Custom Reported"
      description: "Prescription Transaction Custom Reported Date"
      type: date
      hidden: yes
      sql: ${rx_tx_custom_reported_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_chain_id {
      label: "Prescription Transaction Custom Reported Chain ID"
      description: "Prescription Transaction Custom Reported Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_custom_reported_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_calendar_owner_chain_id {
      label: "Prescription Transaction Custom Reported Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_custom_reported_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_day_of_week {
      label: "Prescription Transaction Custom Reported Day Of Week"
      description: "Prescription Transaction Custom Reported Day Of Week Full Name"
      type: string
      sql: ${rx_tx_custom_reported_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_day_of_month {
      label: "Prescription Transaction Custom Reported Day Of Month"
      description: "Prescription Transaction Custom Reported Day Of Month"
      type: number
      sql: ${rx_tx_custom_reported_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_week_of_year {
      label: "Prescription Transaction Custom Reported Week Of Year"
      description: "Prescription Transaction Custom Reported Week Of Year"
      type: number
      sql: ${rx_tx_custom_reported_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_month_num {
      label: "Prescription Transaction Custom Reported Month Num"
      description: "Prescription Transaction Custom Reported Month Of Year"
      type: number
      sql: ${rx_tx_custom_reported_timeframes.month_num} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_month {
      label: "Prescription Transaction Custom Reported Month"
      description: "Prescription Transaction Custom Reported Month"
      type: string
      sql: ${rx_tx_custom_reported_timeframes.month} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_quarter_of_year {
      label: "Prescription Transaction Custom Reported Quarter Of Year"
      description: "Prescription Transaction Custom Reported Quarter Of Year"
      type: string
      sql: ${rx_tx_custom_reported_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_quarter {
      label: "Prescription Transaction Custom Reported Quarter"
      description: "Prescription Transaction Custom Reported Quarter"
      type: string
      sql: ${rx_tx_custom_reported_timeframes.quarter} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_year {
      label: "Prescription Transaction Custom Reported Year"
      description: "Prescription Transaction Custom Reported Year"
      type: number
      sql: ${rx_tx_custom_reported_timeframes.year} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_day_of_week_index {
      label: "Prescription Transaction Custom Reported day Of Week Index"
      description: "Prescription Transaction Custom Reported Day Of Week Index"
      type: number
      sql: ${rx_tx_custom_reported_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_custom_reported_week_begin_date {
      label: "Prescription Transaction Custom Reported Week"
      description: "Prescription Transaction Custom Reported Week Begin Date"
      type: date
      sql: ${rx_tx_custom_reported_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Custom Reported Date"
    }

    dimension: rx_tx_dob_override_calendar_date {
      label: "Prescription Transaction DOB Override"
      description: "Prescription Transaction DOB Override Date"
      type: date
      hidden: yes
      sql: ${rx_tx_dob_override_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_chain_id {
      label: "Prescription Transaction DOB Override Chain ID"
      description: "Prescription Transaction DOB Override Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_dob_override_timeframes.chain_id} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_calendar_owner_chain_id {
      label: "Prescription Transaction DOB Override Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_dob_override_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_day_of_week {
      label: "Prescription Transaction DOB Override Day Of Week"
      description: "Prescription Transaction DOB Override Day Of Week Full Name"
      type: string
      sql: ${rx_tx_dob_override_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_day_of_month {
      label: "Prescription Transaction DOB Override Day Of Month"
      description: "Prescription Transaction DOB Override Day Of Month"
      type: number
      sql: ${rx_tx_dob_override_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_week_of_year {
      label: "Prescription Transaction DOB Override Week Of Year"
      description: "Prescription Transaction DOB Override Week Of Year"
      type: number
      sql: ${rx_tx_dob_override_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_month_num {
      label: "Prescription Transaction DOB Override Month Num"
      description: "Prescription Transaction DOB Override Month Of Year"
      type: number
      sql: ${rx_tx_dob_override_timeframes.month_num} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_month {
      label: "Prescription Transaction DOB Override Month"
      description: "Prescription Transaction DOB Override Month"
      type: string
      sql: ${rx_tx_dob_override_timeframes.month} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_quarter_of_year {
      label: "Prescription Transaction DOB Override Quarter Of Year"
      description: "Prescription Transaction DOB Override Quarter Of Year"
      type: string
      sql: ${rx_tx_dob_override_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_quarter {
      label: "Prescription Transaction DOB Override Quarter"
      description: "Prescription Transaction DOB Override Quarter"
      type: string
      sql: ${rx_tx_dob_override_timeframes.quarter} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_year {
      label: "Prescription Transaction DOB Override Year"
      description: "Prescription Transaction DOB Override Year"
      type: number
      sql: ${rx_tx_dob_override_timeframes.year} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_day_of_week_index {
      label: "Prescription Transaction DOB Override day Of Week Index"
      description: "Prescription Transaction DOB Override Day Of Week Index"
      type: number
      sql: ${rx_tx_dob_override_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_dob_override_week_begin_date {
      label: "Prescription Transaction DOB Override Week"
      description: "Prescription Transaction DOB Override Week Begin Date"
      type: date
      sql: ${rx_tx_dob_override_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction DOB Override Date"
    }

    dimension: rx_tx_last_epr_synch_calendar_date {
      label: "Prescription Transaction Last EPR Synch"
      description: "Prescription Transaction Last EPR Synch Date"
      type: date
      hidden: yes
      sql: ${rx_tx_last_epr_synch_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_chain_id {
      label: "Prescription Transaction Last EPR Synch Chain ID"
      description: "Prescription Transaction Last EPR Synch Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_last_epr_synch_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_calendar_owner_chain_id {
      label: "Prescription Transaction Last EPR Synch Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_last_epr_synch_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_day_of_week {
      label: "Prescription Transaction Last EPR Synch Day Of Week"
      description: "Prescription Transaction Last EPR Synch Day Of Week Full Name"
      type: string
      sql: ${rx_tx_last_epr_synch_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_day_of_month {
      label: "Prescription Transaction Last EPR Synch Day Of Month"
      description: "Prescription Transaction Last EPR Synch Day Of Month"
      type: number
      sql: ${rx_tx_last_epr_synch_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_week_of_year {
      label: "Prescription Transaction Last EPR Synch Week Of Year"
      description: "Prescription Transaction Last EPR Synch Week Of Year"
      type: number
      sql: ${rx_tx_last_epr_synch_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_month_num {
      label: "Prescription Transaction Last EPR Synch Month Num"
      description: "Prescription Transaction Last EPR Synch Month Of Year"
      type: number
      sql: ${rx_tx_last_epr_synch_timeframes.month_num} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_month {
      label: "Prescription Transaction Last EPR Synch Month"
      description: "Prescription Transaction Last EPR Synch Month"
      type: string
      sql: ${rx_tx_last_epr_synch_timeframes.month} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_quarter_of_year {
      label: "Prescription Transaction Last EPR Synch Quarter Of Year"
      description: "Prescription Transaction Last EPR Synch Quarter Of Year"
      type: string
      sql: ${rx_tx_last_epr_synch_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_quarter {
      label: "Prescription Transaction Last EPR Synch Quarter"
      description: "Prescription Transaction Last EPR Synch Quarter"
      type: string
      sql: ${rx_tx_last_epr_synch_timeframes.quarter} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_year {
      label: "Prescription Transaction Last EPR Synch Year"
      description: "Prescription Transaction Last EPR Synch Year"
      type: number
      sql: ${rx_tx_last_epr_synch_timeframes.year} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_day_of_week_index {
      label: "Prescription Transaction Last EPR Synch day Of Week Index"
      description: "Prescription Transaction Last EPR Synch Day Of Week Index"
      type: number
      sql: ${rx_tx_last_epr_synch_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_last_epr_synch_week_begin_date {
      label: "Prescription Transaction Last EPR Synch Week"
      description: "Prescription Transaction Last EPR Synch Week Begin Date"
      type: date
      sql: ${rx_tx_last_epr_synch_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Last EPR Synch Date"
    }

    dimension: rx_tx_missing_calendar_date {
      label: "Prescription Transaction Missing"
      description: "Prescription Transaction Missing Date"
      type: date
      hidden: yes
      sql: ${rx_tx_missing_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_chain_id {
      label: "Prescription Transaction Missing Chain ID"
      description: "Prescription Transaction Missing Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_missing_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_calendar_owner_chain_id {
      label: "Prescription Transaction Missing Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_missing_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_day_of_week {
      label: "Prescription Transaction Missing Day Of Week"
      description: "Prescription Transaction Missing Day Of Week Full Name"
      type: string
      sql: ${rx_tx_missing_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_day_of_month {
      label: "Prescription Transaction Missing Day Of Month"
      description: "Prescription Transaction Missing Day Of Month"
      type: number
      sql: ${rx_tx_missing_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_week_of_year {
      label: "Prescription Transaction Missing Week Of Year"
      description: "Prescription Transaction Missing Week Of Year"
      type: number
      sql: ${rx_tx_missing_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_month_num {
      label: "Prescription Transaction Missing Month Num"
      description: "Prescription Transaction Missing Month Of Year"
      type: number
      sql: ${rx_tx_missing_timeframes.month_num} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_month {
      label: "Prescription Transaction Missing Month"
      description: "Prescription Transaction Missing Month"
      type: string
      sql: ${rx_tx_missing_timeframes.month} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_quarter_of_year {
      label: "Prescription Transaction Missing Quarter Of Year"
      description: "Prescription Transaction Missing Quarter Of Year"
      type: string
      sql: ${rx_tx_missing_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_quarter {
      label: "Prescription Transaction Missing Quarter"
      description: "Prescription Transaction Missing Quarter"
      type: string
      sql: ${rx_tx_missing_timeframes.quarter} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_year {
      label: "Prescription Transaction Missing Year"
      description: "Prescription Transaction Missing Year"
      type: number
      sql: ${rx_tx_missing_timeframes.year} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_day_of_week_index {
      label: "Prescription Transaction Missing day Of Week Index"
      description: "Prescription Transaction Missing Day Of Week Index"
      type: number
      sql: ${rx_tx_missing_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_missing_week_begin_date {
      label: "Prescription Transaction Missing Week"
      description: "Prescription Transaction Missing Week Begin Date"
      type: date
      sql: ${rx_tx_missing_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Missing Date"
    }

    dimension: rx_tx_pc_ready_calendar_date {
      label: "Prescription Transaction PC Ready"
      description: "Prescription Transaction PC Ready Date"
      type: date
      hidden: yes
      sql: ${rx_tx_pc_ready_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_chain_id {
      label: "Prescription Transaction PC Ready Chain ID"
      description: "Prescription Transaction PC Ready Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_pc_ready_timeframes.chain_id} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_calendar_owner_chain_id {
      label: "Prescription Transaction PC Ready Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_pc_ready_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_day_of_week {
      label: "Prescription Transaction PC Ready Day Of Week"
      description: "Prescription Transaction PC Ready Day Of Week Full Name"
      type: string
      sql: ${rx_tx_pc_ready_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_day_of_month {
      label: "Prescription Transaction PC Ready Day Of Month"
      description: "Prescription Transaction PC Ready Day Of Month"
      type: number
      sql: ${rx_tx_pc_ready_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_week_of_year {
      label: "Prescription Transaction PC Ready Week Of Year"
      description: "Prescription Transaction PC Ready Week Of Year"
      type: number
      sql: ${rx_tx_pc_ready_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_month_num {
      label: "Prescription Transaction PC Ready Month Num"
      description: "Prescription Transaction PC Ready Month Of Year"
      type: number
      sql: ${rx_tx_pc_ready_timeframes.month_num} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_month {
      label: "Prescription Transaction PC Ready Month"
      description: "Prescription Transaction PC Ready Month"
      type: string
      sql: ${rx_tx_pc_ready_timeframes.month} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_quarter_of_year {
      label: "Prescription Transaction PC Ready Quarter Of Year"
      description: "Prescription Transaction PC Ready Quarter Of Year"
      type: string
      sql: ${rx_tx_pc_ready_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_quarter {
      label: "Prescription Transaction PC Ready Quarter"
      description: "Prescription Transaction PC Ready Quarter"
      type: string
      sql: ${rx_tx_pc_ready_timeframes.quarter} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_year {
      label: "Prescription Transaction PC Ready Year"
      description: "Prescription Transaction PC Ready Year"
      type: number
      sql: ${rx_tx_pc_ready_timeframes.year} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_day_of_week_index {
      label: "Prescription Transaction PC Ready day Of Week Index"
      description: "Prescription Transaction PC Ready Day Of Week Index"
      type: number
      sql: ${rx_tx_pc_ready_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_pc_ready_week_begin_date {
      label: "Prescription Transaction PC Ready Week"
      description: "Prescription Transaction PC Ready Week Begin Date"
      type: date
      sql: ${rx_tx_pc_ready_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction PC Ready Date"
    }

    dimension: rx_tx_replace_calendar_date {
      label: "Prescription Transaction Replace"
      description: "Prescription Transaction Replace Date"
      type: date
      hidden: yes
      sql: ${rx_tx_replace_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_chain_id {
      label: "Prescription Transaction Replace Chain ID"
      description: "Prescription Transaction Replace Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_replace_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_calendar_owner_chain_id {
      label: "Prescription Transaction Replace Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_replace_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_day_of_week {
      label: "Prescription Transaction Replace Day Of Week"
      description: "Prescription Transaction Replace Day Of Week Full Name"
      type: string
      sql: ${rx_tx_replace_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_day_of_month {
      label: "Prescription Transaction Replace Day Of Month"
      description: "Prescription Transaction Replace Day Of Month"
      type: number
      sql: ${rx_tx_replace_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_week_of_year {
      label: "Prescription Transaction Replace Week Of Year"
      description: "Prescription Transaction Replace Week Of Year"
      type: number
      sql: ${rx_tx_replace_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_month_num {
      label: "Prescription Transaction Replace Month Num"
      description: "Prescription Transaction Replace Month Of Year"
      type: number
      sql: ${rx_tx_replace_timeframes.month_num} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_month {
      label: "Prescription Transaction Replace Month"
      description: "Prescription Transaction Replace Month"
      type: string
      sql: ${rx_tx_replace_timeframes.month} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_quarter_of_year {
      label: "Prescription Transaction Replace Quarter Of Year"
      description: "Prescription Transaction Replace Quarter Of Year"
      type: string
      sql: ${rx_tx_replace_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_quarter {
      label: "Prescription Transaction Replace Quarter"
      description: "Prescription Transaction Replace Quarter"
      type: string
      sql: ${rx_tx_replace_timeframes.quarter} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_year {
      label: "Prescription Transaction Replace Year"
      description: "Prescription Transaction Replace Year"
      type: number
      sql: ${rx_tx_replace_timeframes.year} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_day_of_week_index {
      label: "Prescription Transaction Replace day Of Week Index"
      description: "Prescription Transaction Replace Day Of Week Index"
      type: number
      sql: ${rx_tx_replace_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_replace_week_begin_date {
      label: "Prescription Transaction Replace Week"
      description: "Prescription Transaction Replace Week Begin Date"
      type: date
      sql: ${rx_tx_replace_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Replace Date"
    }

    dimension: rx_tx_central_fill_cutoff_calendar_date {
      label: "Prescription Transaction Central Fill Cutoff"
      description: "Prescription Transaction Central Fill Cutoff Date"
      type: date
      hidden: yes
      sql: ${rx_tx_central_fill_cutoff_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_chain_id {
      label: "Prescription Transaction Central Fill Cutoff Chain ID"
      description: "Prescription Transaction Central Fill Cutoff Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_central_fill_cutoff_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_calendar_owner_chain_id {
      label: "Prescription Transaction Central Fill Cutoff Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_central_fill_cutoff_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_day_of_week {
      label: "Prescription Transaction Central Fill Cutoff Day Of Week"
      description: "Prescription Transaction Central Fill Cutoff Day Of Week Full Name"
      type: string
      sql: ${rx_tx_central_fill_cutoff_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_day_of_month {
      label: "Prescription Transaction Central Fill Cutoff Day Of Month"
      description: "Prescription Transaction Central Fill Cutoff Day Of Month"
      type: number
      sql: ${rx_tx_central_fill_cutoff_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_week_of_year {
      label: "Prescription Transaction Central Fill Cutoff Week Of Year"
      description: "Prescription Transaction Central Fill Cutoff Week Of Year"
      type: number
      sql: ${rx_tx_central_fill_cutoff_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_month_num {
      label: "Prescription Transaction Central Fill Cutoff Month Num"
      description: "Prescription Transaction Central Fill Cutoff Month Of Year"
      type: number
      sql: ${rx_tx_central_fill_cutoff_timeframes.month_num} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_month {
      label: "Prescription Transaction Central Fill Cutoff Month"
      description: "Prescription Transaction Central Fill Cutoff Month"
      type: string
      sql: ${rx_tx_central_fill_cutoff_timeframes.month} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_quarter_of_year {
      label: "Prescription Transaction Central Fill Cutoff Quarter Of Year"
      description: "Prescription Transaction Central Fill Cutoff Quarter Of Year"
      type: string
      sql: ${rx_tx_central_fill_cutoff_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_quarter {
      label: "Prescription Transaction Central Fill Cutoff Quarter"
      description: "Prescription Transaction Central Fill Cutoff Quarter"
      type: string
      sql: ${rx_tx_central_fill_cutoff_timeframes.quarter} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_year {
      label: "Prescription Transaction Central Fill Cutoff Year"
      description: "Prescription Transaction Central Fill Cutoff Year"
      type: number
      sql: ${rx_tx_central_fill_cutoff_timeframes.year} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_day_of_week_index {
      label: "Prescription Transaction Central Fill Cutoff day Of Week Index"
      description: "Prescription Transaction Central Fill Cutoff Day Of Week Index"
      type: number
      sql: ${rx_tx_central_fill_cutoff_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_central_fill_cutoff_week_begin_date {
      label: "Prescription Transaction Central Fill Cutoff Week"
      description: "Prescription Transaction Central Fill Cutoff Week Begin Date"
      type: date
      sql: ${rx_tx_central_fill_cutoff_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Central Fill Cutoff Date"
    }

    dimension: rx_tx_drug_expiration_calendar_date {
      label: "Prescription Transaction Drug Expiration"
      description: "Prescription Transaction Drug Expiration Date"
      type: date
      hidden: yes
      sql: ${rx_tx_drug_expiration_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_chain_id {
      label: "Prescription Transaction Drug Expiration Chain ID"
      description: "Prescription Transaction Drug Expiration Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_drug_expiration_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_calendar_owner_chain_id {
      label: "Prescription Transaction Drug Expiration Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_drug_expiration_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_day_of_week {
      label: "Prescription Transaction Drug Expiration Day Of Week"
      description: "Prescription Transaction Drug Expiration Day Of Week Full Name"
      type: string
      sql: ${rx_tx_drug_expiration_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_day_of_month {
      label: "Prescription Transaction Drug Expiration Day Of Month"
      description: "Prescription Transaction Drug Expiration Day Of Month"
      type: number
      sql: ${rx_tx_drug_expiration_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_week_of_year {
      label: "Prescription Transaction Drug Expiration Week Of Year"
      description: "Prescription Transaction Drug Expiration Week Of Year"
      type: number
      sql: ${rx_tx_drug_expiration_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_month_num {
      label: "Prescription Transaction Drug Expiration Month Num"
      description: "Prescription Transaction Drug Expiration Month Of Year"
      type: number
      sql: ${rx_tx_drug_expiration_timeframes.month_num} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_month {
      label: "Prescription Transaction Drug Expiration Month"
      description: "Prescription Transaction Drug Expiration Month"
      type: string
      sql: ${rx_tx_drug_expiration_timeframes.month} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_quarter_of_year {
      label: "Prescription Transaction Drug Expiration Quarter Of Year"
      description: "Prescription Transaction Drug Expiration Quarter Of Year"
      type: string
      sql: ${rx_tx_drug_expiration_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_quarter {
      label: "Prescription Transaction Drug Expiration Quarter"
      description: "Prescription Transaction Drug Expiration Quarter"
      type: string
      sql: ${rx_tx_drug_expiration_timeframes.quarter} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_year {
      label: "Prescription Transaction Drug Expiration Year"
      description: "Prescription Transaction Drug Expiration Year"
      type: number
      sql: ${rx_tx_drug_expiration_timeframes.year} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_day_of_week_index {
      label: "Prescription Transaction Drug Expiration day Of Week Index"
      description: "Prescription Transaction Drug Expiration Day Of Week Index"
      type: number
      sql: ${rx_tx_drug_expiration_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_expiration_week_begin_date {
      label: "Prescription Transaction Drug Expiration Week"
      description: "Prescription Transaction Drug Expiration Week Begin Date"
      type: date
      sql: ${rx_tx_drug_expiration_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Drug Expiration Date"
    }

    dimension: rx_tx_drug_image_start_calendar_date {
      label: "Prescription Transaction Drug Image Start"
      description: "Prescription Transaction Drug Image Start Date"
      type: date
      hidden: yes
      sql: ${rx_tx_drug_image_start_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_chain_id {
      label: "Prescription Transaction Drug Image Start Chain ID"
      description: "Prescription Transaction Drug Image Start Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_drug_image_start_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_calendar_owner_chain_id {
      label: "Prescription Transaction Drug Image Start Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_drug_image_start_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_day_of_week {
      label: "Prescription Transaction Drug Image Start Day Of Week"
      description: "Prescription Transaction Drug Image Start Day Of Week Full Name"
      type: string
      sql: ${rx_tx_drug_image_start_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_day_of_month {
      label: "Prescription Transaction Drug Image Start Day Of Month"
      description: "Prescription Transaction Drug Image Start Day Of Month"
      type: number
      sql: ${rx_tx_drug_image_start_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_week_of_year {
      label: "Prescription Transaction Drug Image Start Week Of Year"
      description: "Prescription Transaction Drug Image Start Week Of Year"
      type: number
      sql: ${rx_tx_drug_image_start_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_month_num {
      label: "Prescription Transaction Drug Image Start Month Num"
      description: "Prescription Transaction Drug Image Start Month Of Year"
      type: number
      sql: ${rx_tx_drug_image_start_timeframes.month_num} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_month {
      label: "Prescription Transaction Drug Image Start Month"
      description: "Prescription Transaction Drug Image Start Month"
      type: string
      sql: ${rx_tx_drug_image_start_timeframes.month} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_quarter_of_year {
      label: "Prescription Transaction Drug Image Start Quarter Of Year"
      description: "Prescription Transaction Drug Image Start Quarter Of Year"
      type: string
      sql: ${rx_tx_drug_image_start_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_quarter {
      label: "Prescription Transaction Drug Image Start Quarter"
      description: "Prescription Transaction Drug Image Start Quarter"
      type: string
      sql: ${rx_tx_drug_image_start_timeframes.quarter} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_year {
      label: "Prescription Transaction Drug Image Start Year"
      description: "Prescription Transaction Drug Image Start Year"
      type: number
      sql: ${rx_tx_drug_image_start_timeframes.year} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_day_of_week_index {
      label: "Prescription Transaction Drug Image Start day Of Week Index"
      description: "Prescription Transaction Drug Image Start Day Of Week Index"
      type: number
      sql: ${rx_tx_drug_image_start_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_drug_image_start_week_begin_date {
      label: "Prescription Transaction Drug Image Start Week"
      description: "Prescription Transaction Drug Image Start Week Begin Date"
      type: date
      sql: ${rx_tx_drug_image_start_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Drug Image Start Date"
    }

    dimension: rx_tx_follow_up_calendar_date {
      label: "Prescription Transaction Follow Up"
      description: "Prescription Transaction Follow Up Date"
      type: date
      hidden: yes
      sql: ${rx_tx_follow_up_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_chain_id {
      label: "Prescription Transaction Follow Up Chain ID"
      description: "Prescription Transaction Follow Up Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_follow_up_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_calendar_owner_chain_id {
      label: "Prescription Transaction Follow Up Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_follow_up_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_day_of_week {
      label: "Prescription Transaction Follow Up Day Of Week"
      description: "Prescription Transaction Follow Up Day Of Week Full Name"
      type: string
      sql: ${rx_tx_follow_up_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_day_of_month {
      label: "Prescription Transaction Follow Up Day Of Month"
      description: "Prescription Transaction Follow Up Day Of Month"
      type: number
      sql: ${rx_tx_follow_up_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_week_of_year {
      label: "Prescription Transaction Follow Up Week Of Year"
      description: "Prescription Transaction Follow Up Week Of Year"
      type: number
      sql: ${rx_tx_follow_up_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_month_num {
      label: "Prescription Transaction Follow Up Month Num"
      description: "Prescription Transaction Follow Up Month Of Year"
      type: number
      sql: ${rx_tx_follow_up_timeframes.month_num} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_month {
      label: "Prescription Transaction Follow Up Month"
      description: "Prescription Transaction Follow Up Month"
      type: string
      sql: ${rx_tx_follow_up_timeframes.month} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_quarter_of_year {
      label: "Prescription Transaction Follow Up Quarter Of Year"
      description: "Prescription Transaction Follow Up Quarter Of Year"
      type: string
      sql: ${rx_tx_follow_up_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_quarter {
      label: "Prescription Transaction Follow Up Quarter"
      description: "Prescription Transaction Follow Up Quarter"
      type: string
      sql: ${rx_tx_follow_up_timeframes.quarter} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_year {
      label: "Prescription Transaction Follow Up Year"
      description: "Prescription Transaction Follow Up Year"
      type: number
      sql: ${rx_tx_follow_up_timeframes.year} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_day_of_week_index {
      label: "Prescription Transaction Follow Up day Of Week Index"
      description: "Prescription Transaction Follow Up Day Of Week Index"
      type: number
      sql: ${rx_tx_follow_up_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_follow_up_week_begin_date {
      label: "Prescription Transaction Follow Up Week"
      description: "Prescription Transaction Follow Up Week Begin Date"
      type: date
      sql: ${rx_tx_follow_up_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Follow Up Date"
    }

    dimension: rx_tx_host_retrieval_calendar_date {
      label: "Prescription Transaction Host Retrieval"
      description: "Prescription Transaction Host Retrieval Date"
      type: date
      hidden: yes
      sql: ${rx_tx_host_retrieval_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_chain_id {
      label: "Prescription Transaction Host Retrieval Chain ID"
      description: "Prescription Transaction Host Retrieval Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_host_retrieval_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_calendar_owner_chain_id {
      label: "Prescription Transaction Host Retrieval Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_host_retrieval_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_day_of_week {
      label: "Prescription Transaction Host Retrieval Day Of Week"
      description: "Prescription Transaction Host Retrieval Day Of Week Full Name"
      type: string
      sql: ${rx_tx_host_retrieval_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_day_of_month {
      label: "Prescription Transaction Host Retrieval Day Of Month"
      description: "Prescription Transaction Host Retrieval Day Of Month"
      type: number
      sql: ${rx_tx_host_retrieval_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_week_of_year {
      label: "Prescription Transaction Host Retrieval Week Of Year"
      description: "Prescription Transaction Host Retrieval Week Of Year"
      type: number
      sql: ${rx_tx_host_retrieval_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_month_num {
      label: "Prescription Transaction Host Retrieval Month Num"
      description: "Prescription Transaction Host Retrieval Month Of Year"
      type: number
      sql: ${rx_tx_host_retrieval_timeframes.month_num} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_month {
      label: "Prescription Transaction Host Retrieval Month"
      description: "Prescription Transaction Host Retrieval Month"
      type: string
      sql: ${rx_tx_host_retrieval_timeframes.month} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_quarter_of_year {
      label: "Prescription Transaction Host Retrieval Quarter Of Year"
      description: "Prescription Transaction Host Retrieval Quarter Of Year"
      type: string
      sql: ${rx_tx_host_retrieval_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_quarter {
      label: "Prescription Transaction Host Retrieval Quarter"
      description: "Prescription Transaction Host Retrieval Quarter"
      type: string
      sql: ${rx_tx_host_retrieval_timeframes.quarter} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_year {
      label: "Prescription Transaction Host Retrieval Year"
      description: "Prescription Transaction Host Retrieval Year"
      type: number
      sql: ${rx_tx_host_retrieval_timeframes.year} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_day_of_week_index {
      label: "Prescription Transaction Host Retrieval day Of Week Index"
      description: "Prescription Transaction Host Retrieval Day Of Week Index"
      type: number
      sql: ${rx_tx_host_retrieval_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_host_retrieval_week_begin_date {
      label: "Prescription Transaction Host Retrieval Week"
      description: "Prescription Transaction Host Retrieval Week Begin Date"
      type: date
      sql: ${rx_tx_host_retrieval_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Host Retrieval Date"
    }

    dimension: rx_tx_photo_id_birth_calendar_date {

      label: "Prescription Transaction Photo Identifier Birth"
      description: "Prescription Transaction Photo Identifier Birth Date"
      type: date
      hidden: yes
      sql: ${rx_tx_photo_id_birth_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_chain_id {
      label: "Prescription Transaction Photo Identifier Birth Chain ID"
      description: "Prescription Transaction Photo Identifier Birth Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_photo_id_birth_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_calendar_owner_chain_id {
      label: "Prescription Transaction Photo Identifier Birth Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_photo_id_birth_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_day_of_week {
      label: "Prescription Transaction Photo Identifier Birth Day Of Week"
      description: "Prescription Transaction Photo Identifier Birth Day Of Week Full Name"
      type: string
      sql: ${rx_tx_photo_id_birth_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_day_of_month {
      label: "Prescription Transaction Photo Identifier Birth Day Of Month"
      description: "Prescription Transaction Photo Identifier Birth Day Of Month"
      type: number
      sql: ${rx_tx_photo_id_birth_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_week_of_year {
      label: "Prescription Transaction Photo Identifier Birth Week Of Year"
      description: "Prescription Transaction Photo Identifier Birth Week Of Year"
      type: number
      sql: ${rx_tx_photo_id_birth_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_month_num {
      label: "Prescription Transaction Photo Identifier Birth Month Num"
      description: "Prescription Transaction Photo Identifier Birth Month Of Year"
      type: number
      sql: ${rx_tx_photo_id_birth_timeframes.month_num} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_month {
      label: "Prescription Transaction Photo Identifier Birth Month"
      description: "Prescription Transaction Photo Identifier Birth Month"
      type: string
      sql: ${rx_tx_photo_id_birth_timeframes.month} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_quarter_of_year {
      label: "Prescription Transaction Photo Identifier Birth Quarter Of Year"
      description: "Prescription Transaction Photo Identifier Birth Quarter Of Year"
      type: string
      sql: ${rx_tx_photo_id_birth_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_quarter {
      label: "Prescription Transaction Photo Identifier Birth Quarter"
      description: "Prescription Transaction Photo Identifier Birth Quarter"
      type: string
      sql: ${rx_tx_photo_id_birth_timeframes.quarter} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_year {
      label: "Prescription Transaction Photo Identifier Birth Year"
      description: "Prescription Transaction Photo Identifier Birth Year"
      type: number
      sql: ${rx_tx_photo_id_birth_timeframes.year} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_day_of_week_index {
      label: "Prescription Transaction Photo Identifier Birth day Of Week Index"
      description: "Prescription Transaction Photo Identifier Birth Day Of Week Index"
      type: number
      sql: ${rx_tx_photo_id_birth_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_birth_week_begin_date {
      label: "Prescription Transaction Photo Identifier Birth Week"
      description: "Prescription Transaction Photo Identifier Birth Week Begin Date"
      type: date
      sql: ${rx_tx_photo_id_birth_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Photo Identifier Birth Date"
    }

    dimension: rx_tx_photo_id_expire_calendar_date {
      label: "Prescription Transaction Photo Identifier Expire"
      description: "Prescription Transaction Photo Identifier Expire Date"
      type: date
      hidden: yes
      sql: ${rx_tx_photo_id_expire_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_chain_id {
      label: "Prescription Transaction Photo Identifier Expire Chain ID"
      description: "Prescription Transaction Photo Identifier Expire Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_photo_id_expire_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_calendar_owner_chain_id {
      label: "Prescription Transaction Photo Identifier Expire Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_photo_id_expire_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_day_of_week {
      label: "Prescription Transaction Photo Identifier Expire Day Of Week"
      description: "Prescription Transaction Photo Identifier Expire Day Of Week Full Name"
      type: string
      sql: ${rx_tx_photo_id_expire_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_day_of_month {
      label: "Prescription Transaction Photo Identifier Expire Day Of Month"
      description: "Prescription Transaction Photo Identifier Expire Day Of Month"
      type: number
      sql: ${rx_tx_photo_id_expire_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_week_of_year {
      label: "Prescription Transaction Photo Identifier Expire Week Of Year"
      description: "Prescription Transaction Photo Identifier Expire Week Of Year"
      type: number
      sql: ${rx_tx_photo_id_expire_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_month_num {
      label: "Prescription Transaction Photo Identifier Expire Month Num"
      description: "Prescription Transaction Photo Identifier Expire Month Of Year"
      type: number
      sql: ${rx_tx_photo_id_expire_timeframes.month_num} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_month {
      label: "Prescription Transaction Photo Identifier Expire Month"
      description: "Prescription Transaction Photo Identifier Expire Month"
      type: string
      sql: ${rx_tx_photo_id_expire_timeframes.month} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_quarter_of_year {
      label: "Prescription Transaction Photo Identifier Expire Quarter Of Year"
      description: "Prescription Transaction Photo Identifier Expire Quarter Of Year"
      type: string
      sql: ${rx_tx_photo_id_expire_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_quarter {
      label: "Prescription Transaction Photo Identifier Expire Quarter"
      description: "Prescription Transaction Photo Identifier Expire Quarter"
      type: string
      sql: ${rx_tx_photo_id_expire_timeframes.quarter} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_year {
      label: "Prescription Transaction Photo Identifier Expire Year"
      description: "Prescription Transaction Photo Identifier Expire Year"
      type: number
      sql: ${rx_tx_photo_id_expire_timeframes.year} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_day_of_week_index {
      label: "Prescription Transaction Photo Identifier Expire day Of Week Index"
      description: "Prescription Transaction Photo Identifier Expire Day Of Week Index"
      type: number
      sql: ${rx_tx_photo_id_expire_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_photo_id_expire_week_begin_date {
      label: "Prescription Transaction Photo Identifier Expire Week"
      description: "Prescription Transaction Photo Identifier Expire Week Begin Date"
      type: date
      sql: ${rx_tx_photo_id_expire_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Photo Identifier Expire Date"
    }

    dimension: rx_tx_stop_calendar_date {
      label: "Prescription Transaction Stop"
      description: "Prescription Transaction Stop Date"
      type: date
      hidden: yes
      sql: ${rx_tx_stop_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_chain_id {
      label: "Prescription Transaction Stop Chain ID"
      description: "Prescription Transaction Stop Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_stop_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_calendar_owner_chain_id {
      label: "Prescription Transaction Stop Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_stop_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_day_of_week {
      label: "Prescription Transaction Stop Day Of Week"
      description: "Prescription Transaction Stop Day Of Week Full Name"
      type: string
      sql: ${rx_tx_stop_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_day_of_month {
      label: "Prescription Transaction Stop Day Of Month"
      description: "Prescription Transaction Stop Day Of Month"
      type: number
      sql: ${rx_tx_stop_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_week_of_year {
      label: "Prescription Transaction Stop Week Of Year"
      description: "Prescription Transaction Stop Week Of Year"
      type: number
      sql: ${rx_tx_stop_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_month_num {
      label: "Prescription Transaction Stop Month Num"
      description: "Prescription Transaction Stop Month Of Year"
      type: number
      sql: ${rx_tx_stop_timeframes.month_num} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_month {
      label: "Prescription Transaction Stop Month"
      description: "Prescription Transaction Stop Month"
      type: string
      sql: ${rx_tx_stop_timeframes.month} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_quarter_of_year {
      label: "Prescription Transaction Stop Quarter Of Year"
      description: "Prescription Transaction Stop Quarter Of Year"
      type: string
      sql: ${rx_tx_stop_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_quarter {
      label: "Prescription Transaction Stop Quarter"
      description: "Prescription Transaction Stop Quarter"
      type: string
      sql: ${rx_tx_stop_timeframes.quarter} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_year {
      label: "Prescription Transaction Stop Year"
      description: "Prescription Transaction Stop Year"
      type: number
      sql: ${rx_tx_stop_timeframes.year} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_day_of_week_index {
      label: "Prescription Transaction Stop day Of Week Index"
      description: "Prescription Transaction Stop Day Of Week Index"
      type: number
      sql: ${rx_tx_stop_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_stop_week_begin_date {
      label: "Prescription Transaction Stop Week"
      description: "Prescription Transaction Stop Week Begin Date"
      type: date
      sql: ${rx_tx_stop_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Stop Date"
    }

    dimension: rx_tx_source_create_calendar_date {

      label: "Prescription Transaction Source Create"
      description: "Prescription Transaction Source Create Date"
      type: date
      hidden: yes
      sql: ${rx_tx_source_create_timeframes.calendar_date} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_chain_id {
      label: "Prescription Transaction Source Create Chain ID"
      description: "Prescription Transaction Source Create Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_source_create_timeframes.chain_id} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_calendar_owner_chain_id {
      label: "Prescription Transaction Source Create Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_tx_source_create_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_day_of_week {
      label: "Prescription Transaction Source Create Day Of Week"
      description: "Prescription Transaction Source Create Day Of Week Full Name"
      type: string
      sql: ${rx_tx_source_create_timeframes.day_of_week} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_day_of_month {
      label: "Prescription Transaction Source Create Day Of Month"
      description: "Prescription Transaction Source Create Day Of Month"
      type: number
      sql: ${rx_tx_source_create_timeframes.day_of_month} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_week_of_year {
      label: "Prescription Transaction Source Create Week Of Year"
      description: "Prescription Transaction Source Create Week Of Year"
      type: number
      sql: ${rx_tx_source_create_timeframes.week_of_year} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_month_num {
      label: "Prescription Transaction Source Create Month Num"
      description: "Prescription Transaction Source Create Month Of Year"
      type: number
      sql: ${rx_tx_source_create_timeframes.month_num} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_month {
      label: "Prescription Transaction Source Create Month"
      description: "Prescription Transaction Source Create Month"
      type: string
      sql: ${rx_tx_source_create_timeframes.month} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_quarter_of_year {
      label: "Prescription Transaction Source Create Quarter Of Year"
      description: "Prescription Transaction Source Create Quarter Of Year"
      type: string
      sql: ${rx_tx_source_create_timeframes.quarter_of_year} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_quarter {
      label: "Prescription Transaction Source Create Quarter"
      description: "Prescription Transaction Source Create Quarter"
      type: string
      sql: ${rx_tx_source_create_timeframes.quarter} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_year {
      label: "Prescription Transaction Source Create Year"
      description: "Prescription Transaction Source Create Year"
      type: number
      sql: ${rx_tx_source_create_timeframes.year} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_day_of_week_index {
      label: "Prescription Transaction Source Create day Of Week Index"
      description: "Prescription Transaction Source Create Day Of Week Index"
      type: number
      sql: ${rx_tx_source_create_timeframes.day_of_week_index} ;;
      group_label: "Prescription Transaction Source Create Date"
    }

    dimension: rx_tx_source_create_week_begin_date {
      label: "Prescription Transaction Source Create Week"
      description: "Prescription Transaction Source Create Week Begin Date"
      type: date
      sql: ${rx_tx_source_create_timeframes.week_begin_date} ;;
      group_label: "Prescription Transaction Source Create Date"
    }
    #[ERXLPS-1055] Remaining date columns added from F_RX_TX_LINK.  End here...
    #[ERXLPS-1055] Remaining date columns added from F_RX. Start here...
    dimension: rx_merged_to_calendar_date {
      label: "Prescription Merged To Date"
      description: "Prescription Merged To Date"
      type: date
      hidden: yes
      sql: ${rx_merged_to_timeframes.calendar_date} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_chain_id {
      label: "Prescription Merged To Chain ID"
      description: "Prescription Merged To Chain ID"
      type: number
      hidden: yes
      sql: ${rx_merged_to_timeframes.chain_id} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_calendar_owner_chain_id {
      label: "Prescription Merged To Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_merged_to_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_day_of_week {
      label: "Prescription Merged To Day Of Week"
      description: "Prescription Merged To Day Of Week Full Name"
      type: string
      sql: ${rx_merged_to_timeframes.day_of_week} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_day_of_month {
      label: "Prescription Merged To Day Of Month"
      description: "Prescription Merged To Day Of Month"
      type: number
      sql: ${rx_merged_to_timeframes.day_of_month} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_week_of_year {
      label: "Prescription Merged To Week Of Year"
      description: "Prescription Merged To Week Of Year"
      type: number
      sql: ${rx_merged_to_timeframes.week_of_year} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_month_num {
      label: "Prescription Merged To Month Num"
      description: "Prescription Merged To Month Of Year"
      type: number
      sql: ${rx_merged_to_timeframes.month_num} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_month {
      label: "Prescription Merged To Month"
      description: "Prescription Merged To Month"
      type: string
      sql: ${rx_merged_to_timeframes.month} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_quarter_of_year {
      label: "Prescription Merged To Quarter Of Year"
      description: "Prescription Merged To Quarter Of Year"
      type: string
      sql: ${rx_merged_to_timeframes.quarter_of_year} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_quarter {
      label: "Prescription Merged To Quarter"
      description: "Prescription Merged To Quarter"
      type: string
      sql: ${rx_merged_to_timeframes.quarter} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_year {
      label: "Prescription Merged To Year"
      description: "Prescription Merged To Year"
      type: number
      sql: ${rx_merged_to_timeframes.year} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_day_of_week_index {
      label: "Prescription Merged To day Of Week Index"
      description: "Prescription Merged To Day Of Week Index"
      type: number
      sql: ${rx_merged_to_timeframes.day_of_week_index} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_merged_to_week_begin_date {
      label: "Prescription Merged To Week"
      description: "Prescription Merged To Week Begin Date"
      type: date
      sql: ${rx_merged_to_timeframes.week_begin_date} ;;
      group_label: "Prescription Merged To Date"
    }

    dimension: rx_autofill_enable_calendar_date {
      label: "Prescription Autofill Enabled Date"
      description: "Prescription Autofill Enabled Date"
      type: date
      hidden: yes
      sql: ${rx_autofill_enable_timeframes.calendar_date} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_chain_id {
      label: "Prescription Autofill Enabled Chain ID"
      description: "Prescription Autofill Enabled Chain ID"
      type: number
      hidden: yes
      sql: ${rx_autofill_enable_timeframes.chain_id} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_calendar_owner_chain_id {
      label: "Prescription Autofill Enabled Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_autofill_enable_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_day_of_week {
      label: "Prescription Autofill Enabled Day Of Week"
      description: "Prescription Autofill Enabled Day Of Week Full Name"
      type: string
      sql: ${rx_autofill_enable_timeframes.day_of_week} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_day_of_month {
      label: "Prescription Autofill Enabled Day Of Month"
      description: "Prescription Autofill Enabled Day Of Month"
      type: number
      sql: ${rx_autofill_enable_timeframes.day_of_month} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_week_of_year {
      label: "Prescription Autofill Enabled Week Of Year"
      description: "Prescription Autofill Enabled Week Of Year"
      type: number
      sql: ${rx_autofill_enable_timeframes.week_of_year} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_month_num {
      label: "Prescription Autofill Enabled Month Num"
      description: "Prescription Autofill Enabled Month Of Year"
      type: number
      sql: ${rx_autofill_enable_timeframes.month_num} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_month {
      label: "Prescription Autofill Enabled Month"
      description: "Prescription Autofill Enabled Month"
      type: string
      sql: ${rx_autofill_enable_timeframes.month} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_quarter_of_year {
      label: "Prescription Autofill Enabled Quarter Of Year"
      description: "Prescription Autofill Enabled Quarter Of Year"
      type: string
      sql: ${rx_autofill_enable_timeframes.quarter_of_year} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_quarter {
      label: "Prescription Autofill Enabled Quarter"
      description: "Prescription Autofill Enabled Quarter"
      type: string
      sql: ${rx_autofill_enable_timeframes.quarter} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_year {
      label: "Prescription Autofill Enabled Year"
      description: "Prescription Autofill Enabled Year"
      type: number
      sql: ${rx_autofill_enable_timeframes.year} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_day_of_week_index {
      label: "Prescription Autofill Enabled day Of Week Index"
      description: "Prescription Autofill Enabled Day Of Week Index"
      type: number
      sql: ${rx_autofill_enable_timeframes.day_of_week_index} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_autofill_enable_week_begin_date {
      label: "Prescription Autofill Enabled Week"
      description: "Prescription Autofill Enabled Week Begin Date"
      type: date
      sql: ${rx_autofill_enable_timeframes.week_begin_date} ;;
      group_label: "Prescription Autofill Enabled Date"
    }

    dimension: rx_received_calendar_date {
      label: "Prescription Received Date"
      description: "Prescription Received Date"
      type: date
      hidden: yes
      sql: ${rx_received_timeframes.calendar_date} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_chain_id {
      label: "Prescription Received Chain ID"
      description: "Prescription Received Chain ID"
      type: number
      hidden: yes
      sql: ${rx_received_timeframes.chain_id} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_calendar_owner_chain_id {
      label: "Prescription Received Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_received_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_day_of_week {
      label: "Prescription Received Day Of Week"
      description: "Prescription Received Day Of Week Full Name"
      type: string
      sql: ${rx_received_timeframes.day_of_week} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_day_of_month {
      label: "Prescription Received Day Of Month"
      description: "Prescription Received Day Of Month"
      type: number
      sql: ${rx_received_timeframes.day_of_month} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_week_of_year {
      label: "Prescription Received Week Of Year"
      description: "Prescription Received Week Of Year"
      type: number
      sql: ${rx_received_timeframes.week_of_year} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_month_num {
      label: "Prescription Received Month Num"
      description: "Prescription Received Month Of Year"
      type: number
      sql: ${rx_received_timeframes.month_num} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_month {
      label: "Prescription Received Month"
      description: "Prescription Received Month"
      type: string
      sql: ${rx_received_timeframes.month} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_quarter_of_year {
      label: "Prescription Received Quarter Of Year"
      description: "Prescription Received Quarter Of Year"
      type: string
      sql: ${rx_received_timeframes.quarter_of_year} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_quarter {
      label: "Prescription Received Quarter"
      description: "Prescription Received Quarter"
      type: string
      sql: ${rx_received_timeframes.quarter} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_year {
      label: "Prescription Received Year"
      description: "Prescription Received Year"
      type: number
      sql: ${rx_received_timeframes.year} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_day_of_week_index {
      label: "Prescription Received day Of Week Index"
      description: "Prescription Received Day Of Week Index"
      type: number
      sql: ${rx_received_timeframes.day_of_week_index} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_received_week_begin_date {
      label: "Prescription Received Week"
      description: "Prescription Received Week Begin Date"
      type: date
      sql: ${rx_received_timeframes.week_begin_date} ;;
      group_label: "Prescription Received Date"
    }

    dimension: rx_last_refill_reminder_calendar_date {
      label: "Prescription Last Refill Reminder Date"
      description: "Prescription Last Refill Reminder Date"
      type: date
      hidden: yes
      sql: ${rx_last_refill_reminder_timeframes.calendar_date} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_chain_id {
      label: "Prescription Last Refill Reminder Chain ID"
      description: "Prescription Last Refill Reminder Chain ID"
      type: number
      hidden: yes
      sql: ${rx_last_refill_reminder_timeframes.chain_id} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_calendar_owner_chain_id {
      label: "Prescription Last Refill Reminder Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_last_refill_reminder_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_day_of_week {
      label: "Prescription Last Refill Reminder Day Of Week"
      description: "Prescription Last Refill Reminder Day Of Week Full Name"
      type: string
      sql: ${rx_last_refill_reminder_timeframes.day_of_week} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_day_of_month {
      label: "Prescription Last Refill Reminder Day Of Month"
      description: "Prescription Last Refill Reminder Day Of Month"
      type: number
      sql: ${rx_last_refill_reminder_timeframes.day_of_month} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_week_of_year {
      label: "Prescription Last Refill Reminder Week Of Year"
      description: "Prescription Last Refill Reminder Week Of Year"
      type: number
      sql: ${rx_last_refill_reminder_timeframes.week_of_year} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_month_num {
      label: "Prescription Last Refill Reminder Month Num"
      description: "Prescription Last Refill Reminder Month Of Year"
      type: number
      sql: ${rx_last_refill_reminder_timeframes.month_num} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_month {
      label: "Prescription Last Refill Reminder Month"
      description: "Prescription Last Refill Reminder Month"
      type: string
      sql: ${rx_last_refill_reminder_timeframes.month} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_quarter_of_year {
      label: "Prescription Last Refill Reminder Quarter Of Year"
      description: "Prescription Last Refill Reminder Quarter Of Year"
      type: string
      sql: ${rx_last_refill_reminder_timeframes.quarter_of_year} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_quarter {
      label: "Prescription Last Refill Reminder Quarter"
      description: "Prescription Last Refill Reminder Quarter"
      type: string
      sql: ${rx_last_refill_reminder_timeframes.quarter} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_year {
      label: "Prescription Last Refill Reminder Year"
      description: "Prescription Last Refill Reminder Year"
      type: number
      sql: ${rx_last_refill_reminder_timeframes.year} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_day_of_week_index {
      label: "Prescription Last Refill Reminder day Of Week Index"
      description: "Prescription Last Refill Reminder Day Of Week Index"
      type: number
      sql: ${rx_last_refill_reminder_timeframes.day_of_week_index} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_last_refill_reminder_week_begin_date {
      label: "Prescription Last Refill Reminder Week"
      description: "Prescription Last Refill Reminder Week Begin Date"
      type: date
      sql: ${rx_last_refill_reminder_timeframes.week_begin_date} ;;
      group_label: "Prescription Last Refill Reminder Date"
    }

    dimension: rx_short_fill_sent_calendar_date {
      label: "Prescription Short Fill Sent Date"
      description: "Prescription Short Fill Sent Date"
      type: date
      hidden: yes
      sql: ${rx_short_fill_sent_timeframes.calendar_date} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_chain_id {
      label: "Prescription Short Fill Sent Chain ID"
      description: "Prescription Short Fill Sent Chain ID"
      type: number
      hidden: yes
      sql: ${rx_short_fill_sent_timeframes.chain_id} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_calendar_owner_chain_id {
      label: "Prescription Short Fill Sent Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_short_fill_sent_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_day_of_week {
      label: "Prescription Short Fill Sent Day Of Week"
      description: "Prescription Short Fill Sent Day Of Week Full Name"
      type: string
      sql: ${rx_short_fill_sent_timeframes.day_of_week} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_day_of_month {
      label: "Prescription Short Fill Sent Day Of Month"
      description: "Prescription Short Fill Sent Day Of Month"
      type: number
      sql: ${rx_short_fill_sent_timeframes.day_of_month} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_week_of_year {
      label: "Prescription Short Fill Sent Week Of Year"
      description: "Prescription Short Fill Sent Week Of Year"
      type: number
      sql: ${rx_short_fill_sent_timeframes.week_of_year} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_month_num {
      label: "Prescription Short Fill Sent Month Num"
      description: "Prescription Short Fill Sent Month Of Year"
      type: number
      sql: ${rx_short_fill_sent_timeframes.month_num} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_month {
      label: "Prescription Short Fill Sent Month"
      description: "Prescription Short Fill Sent Month"
      type: string
      sql: ${rx_short_fill_sent_timeframes.month} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_quarter_of_year {
      label: "Prescription Short Fill Sent Quarter Of Year"
      description: "Prescription Short Fill Sent Quarter Of Year"
      type: string
      sql: ${rx_short_fill_sent_timeframes.quarter_of_year} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_quarter {
      label: "Prescription Short Fill Sent Quarter"
      description: "Prescription Short Fill Sent Quarter"
      type: string
      sql: ${rx_short_fill_sent_timeframes.quarter} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_year {
      label: "Prescription Short Fill Sent Year"
      description: "Prescription Short Fill Sent Year"
      type: number
      sql: ${rx_short_fill_sent_timeframes.year} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_day_of_week_index {
      label: "Prescription Short Fill Sent day Of Week Index"
      description: "Prescription Short Fill Sent Day Of Week Index"
      type: number
      sql: ${rx_short_fill_sent_timeframes.day_of_week_index} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_short_fill_sent_week_begin_date {
      label: "Prescription Short Fill Sent Week"
      description: "Prescription Short Fill Sent Week Begin Date"
      type: date
      sql: ${rx_short_fill_sent_timeframes.week_begin_date} ;;
      group_label: "Prescription Short Fill Sent Date"
    }

    dimension: rx_chain_first_filled_calendar_date {
      label: "Prescription Chain First Filled Date"
      description: "Prescription Chain First Filled Date"
      type: date
      hidden: yes
      sql: ${rx_chain_first_filled_timeframes.calendar_date} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_chain_id {
      label: "Prescription Chain First Filled Chain ID"
      description: "Prescription Chain First Filled Chain ID"
      type: number
      hidden: yes
      sql: ${rx_chain_first_filled_timeframes.chain_id} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_calendar_owner_chain_id {
      label: "Prescription Chain First Filled Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_chain_first_filled_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_day_of_week {
      label: "Prescription Chain First Filled Day Of Week"
      description: "Prescription Chain First Filled Day Of Week Full Name"
      type: string
      sql: ${rx_chain_first_filled_timeframes.day_of_week} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_day_of_month {
      label: "Prescription Chain First Filled Day Of Month"
      description: "Prescription Chain First Filled Day Of Month"
      type: number
      sql: ${rx_chain_first_filled_timeframes.day_of_month} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_week_of_year {
      label: "Prescription Chain First Filled Week Of Year"
      description: "Prescription Chain First Filled Week Of Year"
      type: number
      sql: ${rx_chain_first_filled_timeframes.week_of_year} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_month_num {
      label: "Prescription Chain First Filled Month Num"
      description: "Prescription Chain First Filled Month Of Year"
      type: number
      sql: ${rx_chain_first_filled_timeframes.month_num} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_month {
      label: "Prescription Chain First Filled Month"
      description: "Prescription Chain First Filled Month"
      type: string
      sql: ${rx_chain_first_filled_timeframes.month} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_quarter_of_year {
      label: "Prescription Chain First Filled Quarter Of Year"
      description: "Prescription Chain First Filled Quarter Of Year"
      type: string
      sql: ${rx_chain_first_filled_timeframes.quarter_of_year} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_quarter {
      label: "Prescription Chain First Filled Quarter"
      description: "Prescription Chain First Filled Quarter"
      type: string
      sql: ${rx_chain_first_filled_timeframes.quarter} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_year {
      label: "Prescription Chain First Filled Year"
      description: "Prescription Chain First Filled Year"
      type: number
      sql: ${rx_chain_first_filled_timeframes.year} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_day_of_week_index {
      label: "Prescription Chain First Filled day Of Week Index"
      description: "Prescription Chain First Filled Day Of Week Index"
      type: number
      sql: ${rx_chain_first_filled_timeframes.day_of_week_index} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_chain_first_filled_week_begin_date {
      label: "Prescription Chain First Filled Week"
      description: "Prescription Chain First Filled Week Begin Date"
      type: date
      sql: ${rx_chain_first_filled_timeframes.week_begin_date} ;;
      group_label: "Prescription Chain First Filled Date"
    }

    dimension: rx_expiration_calendar_date {
      label: "Prescription Expiration Date"
      description: "Prescription Expiration Date"
      type: date
      hidden: yes
      sql: ${rx_expiration_timeframes.calendar_date} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_chain_id {
      label: "Prescription Expiration Chain ID"
      description: "Prescription Expiration Chain ID"
      type: number
      hidden: yes
      sql: ${rx_expiration_timeframes.chain_id} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_calendar_owner_chain_id {
      label: "Prescription Expiration Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_expiration_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_day_of_week {
      label: "Prescription Expiration Day Of Week"
      description: "Prescription Expiration Day Of Week Full Name"
      type: string
      sql: ${rx_expiration_timeframes.day_of_week} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_day_of_month {
      label: "Prescription Expiration Day Of Month"
      description: "Prescription Expiration Day Of Month"
      type: number
      sql: ${rx_expiration_timeframes.day_of_month} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_week_of_year {
      label: "Prescription Expiration Week Of Year"
      description: "Prescription Expiration Week Of Year"
      type: number
      sql: ${rx_expiration_timeframes.week_of_year} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_month_num {
      label: "Prescription Expiration Month Num"
      description: "Prescription Expiration Month Of Year"
      type: number
      sql: ${rx_expiration_timeframes.month_num} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_month {
      label: "Prescription Expiration Month"
      description: "Prescription Expiration Month"
      type: string
      sql: ${rx_expiration_timeframes.month} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_quarter_of_year {
      label: "Prescription Expiration Quarter Of Year"
      description: "Prescription Expiration Quarter Of Year"
      type: string
      sql: ${rx_expiration_timeframes.quarter_of_year} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_quarter {
      label: "Prescription Expiration Quarter"
      description: "Prescription Expiration Quarter"
      type: string
      sql: ${rx_expiration_timeframes.quarter} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_year {
      label: "Prescription Expiration Year"
      description: "Prescription Expiration Year"
      type: number
      sql: ${rx_expiration_timeframes.year} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_day_of_week_index {
      label: "Prescription Expiration day Of Week Index"
      description: "Prescription Expiration Day Of Week Index"
      type: number
      sql: ${rx_expiration_timeframes.day_of_week_index} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_expiration_week_begin_date {
      label: "Prescription Expiration Week"
      description: "Prescription Expiration Week Begin Date"
      type: date
      sql: ${rx_expiration_timeframes.week_begin_date} ;;
      group_label: "Prescription Expiration Date"
    }

    dimension: rx_first_filled_calendar_date {
      label: "Prescription First Filled Date"
      description: "Prescription First Filled Date"
      type: date
      hidden: yes
      sql: ${rx_first_filled_timeframes.calendar_date} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_chain_id {
      label: "Prescription First Filled Chain ID"
      description: "Prescription First Filled Chain ID"
      type: number
      hidden: yes
      sql: ${rx_first_filled_timeframes.chain_id} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_calendar_owner_chain_id {
      label: "Prescription First Filled Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_first_filled_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_day_of_week {
      label: "Prescription First Filled Day Of Week"
      description: "Prescription First Filled Day Of Week Full Name"
      type: string
      sql: ${rx_first_filled_timeframes.day_of_week} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_day_of_month {
      label: "Prescription First Filled Day Of Month"
      description: "Prescription First Filled Day Of Month"
      type: number
      sql: ${rx_first_filled_timeframes.day_of_month} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_week_of_year {
      label: "Prescription First Filled Week Of Year"
      description: "Prescription First Filled Week Of Year"
      type: number
      sql: ${rx_first_filled_timeframes.week_of_year} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_month_num {
      label: "Prescription First Filled Month Num"
      description: "Prescription First Filled Month Of Year"
      type: number
      sql: ${rx_first_filled_timeframes.month_num} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_month {
      label: "Prescription First Filled Month"
      description: "Prescription First Filled Month"
      type: string
      sql: ${rx_first_filled_timeframes.month} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_quarter_of_year {
      label: "Prescription First Filled Quarter Of Year"
      description: "Prescription First Filled Quarter Of Year"
      type: string
      sql: ${rx_first_filled_timeframes.quarter_of_year} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_quarter {
      label: "Prescription First Filled Quarter"
      description: "Prescription First Filled Quarter"
      type: string
      sql: ${rx_first_filled_timeframes.quarter} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_year {
      label: "Prescription First Filled Year"
      description: "Prescription First Filled Year"
      type: number
      sql: ${rx_first_filled_timeframes.year} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_day_of_week_index {
      label: "Prescription First Filled day Of Week Index"
      description: "Prescription First Filled Day Of Week Index"
      type: number
      sql: ${rx_first_filled_timeframes.day_of_week_index} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_first_filled_week_begin_date {
      label: "Prescription First Filled Week"
      description: "Prescription First Filled Week Begin Date"
      type: date
      sql: ${rx_first_filled_timeframes.week_begin_date} ;;
      group_label: "Prescription First Filled Date"
    }

    dimension: rx_original_written_calendar_date {
      label: "Prescription Original Written Date"
      description: "Prescription Original Written Date"
      type: date
      hidden: yes
      sql: ${rx_original_written_timeframes.calendar_date} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_chain_id {
      label: "Prescription Original Written Chain ID"
      description: "Prescription Original Written Chain ID"
      type: number
      hidden: yes
      sql: ${rx_original_written_timeframes.chain_id} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_calendar_owner_chain_id {
      label: "Prescription Original Written Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_original_written_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_day_of_week {
      label: "Prescription Original Written Day Of Week"
      description: "Prescription Original Written Day Of Week Full Name"
      type: string
      sql: ${rx_original_written_timeframes.day_of_week} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_day_of_month {
      label: "Prescription Original Written Day Of Month"
      description: "Prescription Original Written Day Of Month"
      type: number
      sql: ${rx_original_written_timeframes.day_of_month} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_week_of_year {
      label: "Prescription Original Written Week Of Year"
      description: "Prescription Original Written Week Of Year"
      type: number
      sql: ${rx_original_written_timeframes.week_of_year} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_month_num {
      label: "Prescription Original Written Month Num"
      description: "Prescription Original Written Month Of Year"
      type: number
      sql: ${rx_original_written_timeframes.month_num} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_month {
      label: "Prescription Original Written Month"
      description: "Prescription Original Written Month"
      type: string
      sql: ${rx_original_written_timeframes.month} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_quarter_of_year {
      label: "Prescription Original Written Quarter Of Year"
      description: "Prescription Original Written Quarter Of Year"
      type: string
      sql: ${rx_original_written_timeframes.quarter_of_year} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_quarter {
      label: "Prescription Original Written Quarter"
      description: "Prescription Original Written Quarter"
      type: string
      sql: ${rx_original_written_timeframes.quarter} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_year {
      label: "Prescription Original Written Year"
      description: "Prescription Original Written Year"
      type: number
      sql: ${rx_original_written_timeframes.year} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_day_of_week_index {
      label: "Prescription Original Written day Of Week Index"
      description: "Prescription Original Written Day Of Week Index"
      type: number
      sql: ${rx_original_written_timeframes.day_of_week_index} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_original_written_week_begin_date {
      label: "Prescription Original Written Week"
      description: "Prescription Original Written Week Begin Date"
      type: date
      sql: ${rx_original_written_timeframes.week_begin_date} ;;
      group_label: "Prescription Original Written Date"
    }

    dimension: rx_start_calendar_date {
      label: "Prescription Start Date"
      description: "Prescription Start Date"
      type: date
      hidden: yes
      sql: ${rx_start_timeframes.calendar_date} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_chain_id {
      label: "Prescription Start Chain ID"
      description: "Prescription Start Chain ID"
      type: number
      hidden: yes
      sql: ${rx_start_timeframes.chain_id} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_calendar_owner_chain_id {
      label: "Prescription Start Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_start_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_day_of_week {
      label: "Prescription Start Day Of Week"
      description: "Prescription Start Day Of Week Full Name"
      type: string
      sql: ${rx_start_timeframes.day_of_week} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_day_of_month {
      label: "Prescription Start Day Of Month"
      description: "Prescription Start Day Of Month"
      type: number
      sql: ${rx_start_timeframes.day_of_month} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_week_of_year {
      label: "Prescription Start Week Of Year"
      description: "Prescription Start Week Of Year"
      type: number
      sql: ${rx_start_timeframes.week_of_year} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_month_num {
      label: "Prescription Start Month Num"
      description: "Prescription Start Month Of Year"
      type: number
      sql: ${rx_start_timeframes.month_num} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_month {
      label: "Prescription Start Month"
      description: "Prescription Start Month"
      type: string
      sql: ${rx_start_timeframes.month} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_quarter_of_year {
      label: "Prescription Start Quarter Of Year"
      description: "Prescription Start Quarter Of Year"
      type: string
      sql: ${rx_start_timeframes.quarter_of_year} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_quarter {
      label: "Prescription Start Quarter"
      description: "Prescription Start Quarter"
      type: string
      sql: ${rx_start_timeframes.quarter} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_year {
      label: "Prescription Start Year"
      description: "Prescription Start Year"
      type: number
      sql: ${rx_start_timeframes.year} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_day_of_week_index {
      label: "Prescription Start day Of Week Index"
      description: "Prescription Start Day Of Week Index"
      type: number
      sql: ${rx_start_timeframes.day_of_week_index} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_start_week_begin_date {
      label: "Prescription Start Week"
      description: "Prescription Start Week Begin Date"
      type: date
      sql: ${rx_start_timeframes.week_begin_date} ;;
      group_label: "Prescription Start Date"
    }

    dimension: rx_sync_script_enrollment_calendar_date {
      label: "Prescription Sync Script Enrollment Date"
      description: "Prescription Sync Script Enrollment Date"
      type: date
      hidden: yes
      sql: ${rx_sync_script_enrollment_timeframes.calendar_date} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_chain_id {
      label: "Prescription Sync Script Enrollment Chain ID"
      description: "Prescription Sync Script Enrollment Chain ID"
      type: number
      hidden: yes
      sql: ${rx_sync_script_enrollment_timeframes.chain_id} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_calendar_owner_chain_id {
      label: "Prescription Sync Script Enrollment Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_sync_script_enrollment_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_day_of_week {
      label: "Prescription Sync Script Enrollment Day Of Week"
      description: "Prescription Sync Script Enrollment Day Of Week Full Name"
      type: string
      sql: ${rx_sync_script_enrollment_timeframes.day_of_week} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_day_of_month {
      label: "Prescription Sync Script Enrollment Day Of Month"
      description: "Prescription Sync Script Enrollment Day Of Month"
      type: number
      sql: ${rx_sync_script_enrollment_timeframes.day_of_month} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_week_of_year {
      label: "Prescription Sync Script Enrollment Week Of Year"
      description: "Prescription Sync Script Enrollment Week Of Year"
      type: number
      sql: ${rx_sync_script_enrollment_timeframes.week_of_year} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_month_num {
      label: "Prescription Sync Script Enrollment Month Num"
      description: "Prescription Sync Script Enrollment Month Of Year"
      type: number
      sql: ${rx_sync_script_enrollment_timeframes.month_num} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_month {
      label: "Prescription Sync Script Enrollment Month"
      description: "Prescription Sync Script Enrollment Month"
      type: string
      sql: ${rx_sync_script_enrollment_timeframes.month} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_quarter_of_year {
      label: "Prescription Sync Script Enrollment Quarter Of Year"
      description: "Prescription Sync Script Enrollment Quarter Of Year"
      type: string
      sql: ${rx_sync_script_enrollment_timeframes.quarter_of_year} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_quarter {
      label: "Prescription Sync Script Enrollment Quarter"
      description: "Prescription Sync Script Enrollment Quarter"
      type: string
      sql: ${rx_sync_script_enrollment_timeframes.quarter} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_year {
      label: "Prescription Sync Script Enrollment Year"
      description: "Prescription Sync Script Enrollment Year"
      type: number
      sql: ${rx_sync_script_enrollment_timeframes.year} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_day_of_week_index {
      label: "Prescription Sync Script Enrollment day Of Week Index"
      description: "Prescription Sync Script Enrollment Day Of Week Index"
      type: number
      sql: ${rx_sync_script_enrollment_timeframes.day_of_week_index} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_sync_script_enrollment_week_begin_date {
      label: "Prescription Sync Script Enrollment Week"
      description: "Prescription Sync Script Enrollment Week Begin Date"
      type: date
      sql: ${rx_sync_script_enrollment_timeframes.week_begin_date} ;;
      group_label: "Prescription Sync Script Enrollment Date"
    }

    dimension: rx_source_create_calendar_date {
      label: "Prescription Source Create Date"
      description: "Prescription Source Create Date"
      type: date
      hidden: yes
      sql: ${rx_source_create_timeframes.calendar_date} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_chain_id {
      label: "Prescription Source Create Chain ID"
      description: "Prescription Source Create Chain ID"
      type: number
      hidden: yes
      sql: ${rx_source_create_timeframes.chain_id} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_calendar_owner_chain_id {
      label: "Prescription Source Create Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${rx_source_create_timeframes.calendar_owner_chain_id} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_day_of_week {
      label: "Prescription Source Create Day Of Week"
      description: "Prescription Source Create Day Of Week Full Name"
      type: string
      sql: ${rx_source_create_timeframes.day_of_week} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_day_of_month {
      label: "Prescription Source Create Day Of Month"
      description: "Prescription Source Create Day Of Month"
      type: number
      sql: ${rx_source_create_timeframes.day_of_month} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_week_of_year {
      label: "Prescription Source Create Week Of Year"
      description: "Prescription Source Create Week Of Year"
      type: number
      sql: ${rx_source_create_timeframes.week_of_year} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_month_num {
      label: "Prescription Source Create Month Num"
      description: "Prescription Source Create Month Of Year"
      type: number
      sql: ${rx_source_create_timeframes.month_num} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_month {
      label: "Prescription Source Create Month"
      description: "Prescription Source Create Month"
      type: string
      sql: ${rx_source_create_timeframes.month} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_quarter_of_year {
      label: "Prescription Source Create Quarter Of Year"
      description: "Prescription Source Create Quarter Of Year"
      type: string
      sql: ${rx_source_create_timeframes.quarter_of_year} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_quarter {
      label: "Prescription Source Create Quarter"
      description: "Prescription Source Create Quarter"
      type: string
      sql: ${rx_source_create_timeframes.quarter} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_year {
      label: "Prescription Source Create Year"
      description: "Prescription Source Create Year"
      type: number
      sql: ${rx_source_create_timeframes.year} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_day_of_week_index {
      label: "Prescription Source Create day Of Week Index"
      description: "Prescription Source Create Day Of Week Index"
      type: number
      sql: ${rx_source_create_timeframes.day_of_week_index} ;;
      group_label: "Prescription Source Create Date"
    }

    dimension: rx_source_create_week_begin_date {
      label: "Prescription Source Create Week"
      description: "Prescription Source Create Week Begin Date"
      type: date
      sql: ${rx_source_create_timeframes.week_begin_date} ;;
      group_label: "Prescription Source Create Date"
    }
    #[ERXLPS-1055] Remaining date columns added from F_RX. End here...

    dimension: tx_tp_transmit_queue_submission_calendar_date {
      label: "Transmit Queue Submission Date"
      description: "Transmit Queue Submission Date"
      type: date
      hidden: yes
      sql: ${transmit_queue_submission_timeframes.calendar_date} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_chain_id {
      label: "Transmit Queue Submission Chain ID"
      description: "Transmit Queue Submission Chain ID"
      type: number
      hidden: yes
      sql: ${transmit_queue_submission_timeframes.chain_id} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_calendar_owner_chain_id {
      label: "Transmit Queue Submission Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${transmit_queue_submission_timeframes.calendar_owner_chain_id} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_day_of_week {
      label: "Transmit Queue Submission Day Of Week"
      description: "Transmit Queue Submission Day Of Week Full Name"
      type: string
      sql: ${transmit_queue_submission_timeframes.day_of_week} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_day_of_month {
      label: "Transmit Queue Submission Day Of Month"
      description: "Transmit Queue Submission Day Of Month"
      type: number
      sql: ${transmit_queue_submission_timeframes.day_of_month} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_week_of_year {
      label: "Transmit Queue Submission Week Of Year"
      description: "Transmit Queue Submission Week Of Year"
      type: number
      sql: ${transmit_queue_submission_timeframes.week_of_year} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_month_num {
      label: "Transmit Queue Submission Month Num"
      description: "Transmit Queue Submission Month Of Year"
      type: number
      sql: ${transmit_queue_submission_timeframes.month_num} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_month {
      label: "Transmit Queue Submission Month"
      description: "Transmit Queue Submission Month"
      type: string
      sql: ${transmit_queue_submission_timeframes.month} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_quarter_of_year {
      label: "Transmit Queue Submission Quarter Of Year"
      description: "Transmit Queue Submission Quarter Of Year"
      type: string
      sql: ${transmit_queue_submission_timeframes.quarter_of_year} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_quarter {
      label: "Transmit Queue Submission Quarter"
      description: "Transmit Queue Submission Quarter"
      type: string
      sql: ${transmit_queue_submission_timeframes.quarter} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_year {
      label: "Transmit Queue Submission Year"
      description: "Transmit Queue Submission Year"
      type: number
      sql: ${transmit_queue_submission_timeframes.year} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_day_of_week_index {
      label: "Transmit Queue Submission day Of Week Index"
      description: "Transmit Queue Submission Day Of Week Index"
      type: number
      sql: ${transmit_queue_submission_timeframes.day_of_week_index} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_submission_week_begin_date {
      label: "Transmit Queue Submission Week"
      description: "Transmit Queue Submission Week Begin Date"
      type: date
      sql: ${transmit_queue_submission_timeframes.week_begin_date} ;;
      group_label: "Transmit Queue Submission Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_calendar_date {
      label: "Transmit Queue Response Date"
      description: "Transmit Queue Response Date"
      type: date
      hidden: yes
      sql: ${transmit_queue_response_timeframes.calendar_date} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_chain_id {
      label: "Transmit Queue Response Chain ID"
      description: "Transmit Queue Response Chain ID"
      type: number
      hidden: yes
      sql: ${transmit_queue_response_timeframes.chain_id} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_calendar_owner_chain_id {
      label: "Transmit Queue Response Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${transmit_queue_response_timeframes.calendar_owner_chain_id} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_day_of_week {
      label: "Transmit Queue Response Day Of Week"
      description: "Transmit Queue Response Day Of Week Full Name"
      type: string
      sql: ${transmit_queue_response_timeframes.day_of_week} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_day_of_month {
      label: "Transmit Queue Response Day Of Month"
      description: "Transmit Queue Response Day Of Month"
      type: number
      sql: ${transmit_queue_response_timeframes.day_of_month} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_week_of_year {
      label: "Transmit Queue Response Week Of Year"
      description: "Transmit Queue Response Week Of Year"
      type: number
      sql: ${transmit_queue_response_timeframes.week_of_year} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_month_num {
      label: "Transmit Queue Response Month Num"
      description: "Transmit Queue Response Month Of Year"
      type: number
      sql: ${transmit_queue_response_timeframes.month_num} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_month {
      label: "Transmit Queue Response Month"
      description: "Transmit Queue Response Month"
      type: string
      sql: ${transmit_queue_response_timeframes.month} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_quarter_of_year {
      label: "Transmit Queue Response Quarter Of Year"
      description: "Transmit Queue Response Quarter Of Year"
      type: string
      sql: ${transmit_queue_response_timeframes.quarter_of_year} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_quarter {
      label: "Transmit Queue Response Quarter"
      description: "Transmit Queue Response Quarter"
      type: string
      sql: ${transmit_queue_response_timeframes.quarter} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_year {
      label: "Transmit Queue Response Year"
      description: "Transmit Queue Response Year"
      type: number
      sql: ${transmit_queue_response_timeframes.year} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_day_of_week_index {
      label: "Transmit Queue Response day Of Week Index"
      description: "Transmit Queue Response Day Of Week Index"
      type: number
      sql: ${transmit_queue_response_timeframes.day_of_week_index} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_response_week_begin_date {
      label: "Transmit Queue Response Week"
      description: "Transmit Queue Response Week Begin Date"
      type: date
      sql: ${transmit_queue_response_timeframes.week_begin_date} ;;
      group_label: "Transmit Queue Response Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_calendar_date {
      label: "Transmit Queue Original Submit Date"
      description: "Transmit Queue Original Submit Date"
      type: date
      hidden: yes
      sql: ${transmit_queue_original_submit_timeframes.calendar_date} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_chain_id {
      label: "Transmit Queue Original Submit Chain ID"
      description: "Transmit Queue Original Submit Chain ID"
      type: number
      hidden: yes
      sql: ${transmit_queue_original_submit_timeframes.chain_id} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_calendar_owner_chain_id {
      label: "Transmit Queue Original Submit Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${transmit_queue_original_submit_timeframes.calendar_owner_chain_id} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_day_of_week {
      label: "Transmit Queue Original Submit Day Of Week"
      description: "Transmit Queue Original Submit Day Of Week Full Name"
      type: string
      sql: ${transmit_queue_original_submit_timeframes.day_of_week} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_day_of_month {
      label: "Transmit Queue Original Submit Day Of Month"
      description: "Transmit Queue Original Submit Day Of Month"
      type: number
      sql: ${transmit_queue_original_submit_timeframes.day_of_month} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_week_of_year {
      label: "Transmit Queue Original Submit Week Of Year"
      description: "Transmit Queue Original Submit Week Of Year"
      type: number
      sql: ${transmit_queue_original_submit_timeframes.week_of_year} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_month_num {
      label: "Transmit Queue Original Submit Month Num"
      description: "Transmit Queue Original Submit Month Of Year"
      type: number
      sql: ${transmit_queue_original_submit_timeframes.month_num} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_month {
      label: "Transmit Queue Original Submit Month"
      description: "Transmit Queue Original Submit Month"
      type: string
      sql: ${transmit_queue_original_submit_timeframes.month} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_quarter_of_year {
      label: "Transmit Queue Original Submit Quarter Of Year"
      description: "Transmit Queue Original Submit Quarter Of Year"
      type: string
      sql: ${transmit_queue_original_submit_timeframes.quarter_of_year} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_quarter {
      label: "Transmit Queue Original Submit Quarter"
      description: "Transmit Queue Original Submit Quarter"
      type: string
      sql: ${transmit_queue_original_submit_timeframes.quarter} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_year {
      label: "Transmit Queue Original Submit Year"
      description: "Transmit Queue Original Submit Year"
      type: number
      sql: ${transmit_queue_original_submit_timeframes.year} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_day_of_week_index {
      label: "Transmit Queue Original Submit day Of Week Index"
      description: "Transmit Queue Original Submit Day Of Week Index"
      type: number
      sql: ${transmit_queue_original_submit_timeframes.day_of_week_index} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_original_submit_week_begin_date {
      label: "Transmit Queue Original Submit Week"
      description: "Transmit Queue Original Submit Week Begin Date"
      type: date
      sql: ${transmit_queue_original_submit_timeframes.week_begin_date} ;;
      group_label: "Transmit Queue Original Submit Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_calendar_date {
      label: "Transmit Queue Fill Override Date"
      description: "Transmit Queue Fill Override Date"
      type: date
      hidden: yes
      sql: ${transmit_queue_fill_override_timeframes.calendar_date} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_chain_id {
      label: "Transmit Queue Fill Override Chain ID"
      description: "Transmit Queue Fill Override Chain ID"
      type: number
      hidden: yes
      sql: ${transmit_queue_fill_override_timeframes.chain_id} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_calendar_owner_chain_id {
      label: "Transmit Queue Fill Override Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${transmit_queue_fill_override_timeframes.calendar_owner_chain_id} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_day_of_week {
      label: "Transmit Queue Fill Override Day Of Week"
      description: "Transmit Queue Fill Override Day Of Week Full Name"
      type: string
      sql: ${transmit_queue_fill_override_timeframes.day_of_week} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_day_of_month {
      label: "Transmit Queue Fill Override Day Of Month"
      description: "Transmit Queue Fill Override Day Of Month"
      type: number
      sql: ${transmit_queue_fill_override_timeframes.day_of_month} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_week_of_year {
      label: "Transmit Queue Fill Override Week Of Year"
      description: "Transmit Queue Fill Override Week Of Year"
      type: number
      sql: ${transmit_queue_fill_override_timeframes.week_of_year} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_month_num {
      label: "Transmit Queue Fill Override Month Num"
      description: "Transmit Queue Fill Override Month Of Year"
      type: number
      sql: ${transmit_queue_fill_override_timeframes.month_num} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_month {
      label: "Transmit Queue Fill Override Month"
      description: "Transmit Queue Fill Override Month"
      type: string
      sql: ${transmit_queue_fill_override_timeframes.month} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_quarter_of_year {
      label: "Transmit Queue Fill Override Quarter Of Year"
      description: "Transmit Queue Fill Override Quarter Of Year"
      type: string
      sql: ${transmit_queue_fill_override_timeframes.quarter_of_year} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_quarter {
      label: "Transmit Queue Fill Override Quarter"
      description: "Transmit Queue Fill Override Quarter"
      type: string
      sql: ${transmit_queue_fill_override_timeframes.quarter} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_year {
      label: "Transmit Queue Fill Override Year"
      description: "Transmit Queue Fill Override Year"
      type: number
      sql: ${transmit_queue_fill_override_timeframes.year} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_day_of_week_index {
      label: "Transmit Queue Fill Override day Of Week Index"
      description: "Transmit Queue Fill Override Day Of Week Index"
      type: number
      sql: ${transmit_queue_fill_override_timeframes.day_of_week_index} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    dimension: tx_tp_transmit_queue_fill_override_week_begin_date {
      label: "Transmit Queue Fill Override Week"
      description: "Transmit Queue Fill Override Week Begin Date"
      type: date
      sql: ${transmit_queue_fill_override_timeframes.week_begin_date} ;;
      group_label: "Transmit Queue Fill Override Date"
      view_label: "TP Transmit Queue"
    }

    #[ERXLPS-726] Response Detail and Submit Detail finanacial date dimensions. Start here.
    dimension: tx_tp_response_detail_service_calendar_date {
      label: "Response Detail Service Date"
      description: "Response Detail Service Date"
      type: date
      hidden: yes
      sql: ${tx_tp_response_detail_service_timeframe.calendar_date} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_chain_id {
      label: "Response Detail Service Chain ID"
      description: "Response Detail Service Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_response_detail_service_timeframe.chain_id} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_calendar_owner_chain_id {
      label: "Response Detail Service Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_response_detail_service_timeframe.calendar_owner_chain_id} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_day_of_week {
      label: "Response Detail Service Day Of Week"
      description: "Response Detail Service Day Of Week Full Name"
      type: string
      sql: ${tx_tp_response_detail_service_timeframe.day_of_week} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_day_of_month {
      label: "Response Detail Service Day Of Month"
      description: "Response Detail Service Day Of Month"
      type: number
      sql: ${tx_tp_response_detail_service_timeframe.day_of_month} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_week_of_year {
      label: "Response Detail Service Week Of Year"
      description: "Response Detail Service Week Of Year"
      type: number
      sql: ${tx_tp_response_detail_service_timeframe.week_of_year} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_month_num {
      label: "Response Detail Service Month Num"
      description: "Response Detail Service Month Of Year"
      type: number
      sql: ${tx_tp_response_detail_service_timeframe.month_num} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_month {
      label: "Response Detail Service Month"
      description: "Response Detail Service Month"
      type: string
      sql: ${tx_tp_response_detail_service_timeframe.month} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_quarter_of_year {
      label: "Response Detail Service Quarter Of Year"
      description: "Response Detail Service Quarter Of Year"
      type: string
      sql: ${tx_tp_response_detail_service_timeframe.quarter_of_year} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_quarter {
      label: "Response Detail Service Quarter"
      description: "Response Detail Service Quarter"
      type: string
      sql: ${tx_tp_response_detail_service_timeframe.quarter} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_year {
      label: "Response Detail Service Year"
      description: "Response Detail Service Year"
      type: number
      sql: ${tx_tp_response_detail_service_timeframe.year} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_day_of_week_index {
      label: "Response Detail Service day Of Week Index"
      description: "Response Detail Service Day Of Week Index"
      type: number
      sql: ${tx_tp_response_detail_service_timeframe.day_of_week_index} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_response_detail_service_week_begin_date {
      label: "Response Detail Service Week"
      description: "Response Detail Service Week Begin Date"
      type: date
      sql: ${tx_tp_response_detail_service_timeframe.week_begin_date} ;;
      group_label: "Response Detail Service Date"
      view_label: "Response Detail"
    }

    dimension: tx_tp_submit_detail_service_calendar_date {
      label: "Submit Detail Service Date"
      description: "Submit Detail Service Date"
      type: date
      hidden: yes
      sql: ${tx_tp_submit_detail_service_timeframe.calendar_date} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_chain_id {
      label: "Submit Detail Service Chain ID"
      description: "Submit Detail Service Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_submit_detail_service_timeframe.chain_id} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_calendar_owner_chain_id {
      label: "Submit Detail Service Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_submit_detail_service_timeframe.calendar_owner_chain_id} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_day_of_week {
      label: "Submit Detail Service Day Of Week"
      description: "Submit Detail Service Day Of Week Full Name"
      type: string
      sql: ${tx_tp_submit_detail_service_timeframe.day_of_week} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_day_of_month {
      label: "Submit Detail Service Day Of Month"
      description: "Submit Detail Service Day Of Month"
      type: number
      sql: ${tx_tp_submit_detail_service_timeframe.day_of_month} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_week_of_year {
      label: "Submit Detail Service Week Of Year"
      description: "Submit Detail Service Week Of Year"
      type: number
      sql: ${tx_tp_submit_detail_service_timeframe.week_of_year} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_month_num {
      label: "Submit Detail Service Month Num"
      description: "Submit Detail Service Month Of Year"
      type: number
      sql: ${tx_tp_submit_detail_service_timeframe.month_num} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_month {
      label: "Submit Detail Service Month"
      description: "Submit Detail Service Month"
      type: string
      sql: ${tx_tp_submit_detail_service_timeframe.month} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_quarter_of_year {
      label: "Submit Detail Service Quarter Of Year"
      description: "Submit Detail Service Quarter Of Year"
      type: string
      sql: ${tx_tp_submit_detail_service_timeframe.quarter_of_year} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_quarter {
      label: "Submit Detail Service Quarter"
      description: "Submit Detail Service Quarter"
      type: string
      sql: ${tx_tp_submit_detail_service_timeframe.quarter} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_year {
      label: "Submit Detail Service Year"
      description: "Submit Detail Service Year"
      type: number
      sql: ${tx_tp_submit_detail_service_timeframe.year} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_day_of_week_index {
      label: "Submit Detail Service day Of Week Index"
      description: "Submit Detail Service Day Of Week Index"
      type: number
      sql: ${tx_tp_submit_detail_service_timeframe.day_of_week_index} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_service_week_begin_date {
      label: "Submit Detail Service Week"
      description: "Submit Detail Service Week Begin Date"
      type: date
      sql: ${tx_tp_submit_detail_service_timeframe.week_begin_date} ;;
      group_label: "Submit Detail Service Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_calendar_date {
      label: "Submit Detail Patient Birth Date"
      description: "Submit Detail Patient Birth Date"
      type: date
      hidden: yes
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.calendar_date} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_chain_id {
      label: "Submit Detail Patient Birth Chain ID"
      description: "Submit Detail Submission Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.chain_id} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_calendar_owner_chain_id {
      label: "Submit Detail Patient Birth Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.calendar_owner_chain_id} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_day_of_week {
      label: "Submit Detail Patient Birth Day Of Week"
      description: "Submit Detail Submission Day Of Week Full Name"
      type: string
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.day_of_week} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_day_of_month {
      label: "Submit Detail Patient Birth Day Of Month"
      description: "Submit Detail Submission Day Of Month"
      type: number
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.day_of_month} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_week_of_year {
      label: "Submit Detail Patient Birth Week Of Year"
      description: "Submit Detail Submission Week Of Year"
      type: number
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.week_of_year} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_month_num {
      label: "Submit Detail Patient Birth Month Num"
      description: "Submit Detail Submission Month Of Year"
      type: number
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.month_num} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_month {
      label: "Submit Detail Patient Birth Month"
      description: "Submit Detail Submission Month"
      type: string
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.month} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_quarter_of_year {
      label: "Submit Detail Patient Birth Quarter Of Year"
      description: "Submit Detail Submission Quarter Of Year"
      type: string
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.quarter_of_year} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_quarter {
      label: "Submit Detail Patient Birth Quarter"
      description: "Submit Detail Submission Quarter"
      type: string
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.quarter} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_year {
      label: "Submit Detail Patient Birth Year"
      description: "Submit Detail Submission Year"
      type: number
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.year} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_day_of_week_index {
      label: "Submit Detail Patient Birth day Of Week Index"
      description: "Submit Detail Submission Day Of Week Index"
      type: number
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.day_of_week_index} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_patient_birth_week_begin_date {
      label: "Submit Detail Patient Birth Week"
      description: "Submit Detail Submission Week Begin Date"
      type: date
      sql: ${tx_tp_submit_detail_patient_birth_timeframe.week_begin_date} ;;
      group_label: "Submit Detail Patient Birth Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_calendar_date {
      label: "Submit Detail Workers Comp Injury Date"
      description: "Submit Detail Workers Comp Injury Date"
      type: date
      hidden: yes
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.calendar_date} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_chain_id {
      label: "Submit Detail Workers Comp Injury Chain ID"
      description: "Submit Detail Workers Comp Injury Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.chain_id} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_calendar_owner_chain_id {
      label: "Submit Detail Workers Comp Injury Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.calendar_owner_chain_id} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_day_of_week {
      label: "Submit Detail Workers Comp Injury Day Of Week"
      description: "Submit Detail Workers Comp Injury Day Of Week Full Name"
      type: string
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.day_of_week} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_day_of_month {
      label: "Submit Detail Workers Comp Injury Day Of Month"
      description: "Submit Detail Workers Comp Injury Day Of Month"
      type: number
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.day_of_month} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_week_of_year {
      label: "Submit Detail Workers Comp Injury Week Of Year"
      description: "Submit Detail Workers Comp Injury Week Of Year"
      type: number
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.week_of_year} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_month_num {
      label: "Submit Detail Workers Comp Injury Month Num"
      description: "Submit Detail Workers Comp Injury Month Of Year"
      type: number
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.month_num} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_month {
      label: "Submit Detail Workers Comp Injury Month"
      description: "Submit Detail Workers Comp Injury Month"
      type: string
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.month} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_quarter_of_year {
      label: "Submit Detail Workers Comp Injury Quarter Of Year"
      description: "Submit Detail Workers Comp Injury Quarter Of Year"
      type: string
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.quarter_of_year} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_quarter {
      label: "Submit Detail Workers Comp Injury Quarter"
      description: "Submit Detail Workers Comp Injury Quarter"
      type: string
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.quarter} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_year {
      label: "Submit Detail Workers Comp Injury Year"
      description: "Submit Detail Workers Comp Injury Year"
      type: number
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.year} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_day_of_week_index {
      label: "Submit Detail Workers Comp Injury day Of Week Index"
      description: "Submit Detail Workers Comp Injury Day Of Week Index"
      type: number
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.day_of_week_index} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }

    dimension: tx_tp_submit_detail_workers_comp_injury_week_begin_date {
      label: "Submit Detail Workers Comp Injury Week"
      description: "Submit Detail Workers Comp Injury Week Begin Date"
      type: date
      sql: ${tx_tp_submit_detail_workers_comp_injury_timeframe.week_begin_date} ;;
      group_label: "Submit Detail Workers Comp Injury Date"
      view_label: "Submit Detail"
    }
    #[ERXLPS-726]

    dimension: store_tp_link_begin_calendar_date {
      label: "Claim Card Effective Date"
      description: "Claim Card Effective Date"
      type: date
      hidden: yes
      sql: ${store_tp_link_begin_timeframes.calendar_date} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_chain_id {
      label: "Claim Card Effective Chain ID"
      description: "Claim Card Effective Chain ID"
      type: number
      hidden: yes
      sql: ${store_tp_link_begin_timeframes.chain_id} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_calendar_owner_chain_id {
      label: "Claim Card Effective Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${store_tp_link_begin_timeframes.calendar_owner_chain_id} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_day_of_week {
      label: "Claim Card Effective Day Of Week"
      description: "Claim Card Effective Day Of Week Full Name"
      type: string
      sql: ${store_tp_link_begin_timeframes.day_of_week} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_day_of_month {
      label: "Claim Card Effective Day Of Month"
      description: "Claim Card Effective Day Of Month"
      type: number
      sql: ${store_tp_link_begin_timeframes.day_of_month} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_week_of_year {
      label: "Claim Card Effective Week Of Year"
      description: "Claim Card Effective Week Of Year"
      type: number
      sql: ${store_tp_link_begin_timeframes.week_of_year} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_month_num {
      label: "Claim Card Effective Month Num"
      description: "Claim Card Effective Month Of Year"
      type: number
      sql: ${store_tp_link_begin_timeframes.month_num} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_month {
      label: "Claim Card Effective Month"
      description: "Claim Card Effective Month"
      type: string
      sql: ${store_tp_link_begin_timeframes.month} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_quarter_of_year {
      label: "Claim Card Effective Quarter Of Year"
      description: "Claim Card Effective Quarter Of Year"
      type: string
      sql: ${store_tp_link_begin_timeframes.quarter_of_year} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_quarter {
      label: "Claim Card Effective Quarter"
      description: "Claim Card Effective Quarter"
      type: string
      sql: ${store_tp_link_begin_timeframes.quarter} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_year {
      label: "Claim Card Effective Year"
      description: "Claim Card Effective Year"
      type: number
      sql: ${store_tp_link_begin_timeframes.year} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_day_of_week_index {
      label: "Claim Card Effective day Of Week Index"
      description: "Claim Card Effective Day Of Week Index"
      type: number
      sql: ${store_tp_link_begin_timeframes.day_of_week_index} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_begin_week_begin_date {
      label: "Claim Card Effective Week"
      description: "Claim Card Effective Week Begin Date"
      type: date
      sql: ${store_tp_link_begin_timeframes.week_begin_date} ;;
      group_label: "Claim Card Effective Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_calendar_date {
      label: "Claim Card Last Used Date"
      description: "Claim Card Last Used Date"
      type: date
      hidden: yes
      sql: ${store_tp_link_store_last_used_timeframes.calendar_date} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_chain_id {
      label: "Claim Card Last Used Chain ID"
      description: "Claim Card Last Used Chain ID"
      type: number
      hidden: yes
      sql: ${store_tp_link_store_last_used_timeframes.chain_id} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_calendar_owner_chain_id {
      label: "Claim Card Last Used Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${store_tp_link_store_last_used_timeframes.calendar_owner_chain_id} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_day_of_week {
      label: "Claim Card Last Used Day Of Week"
      description: "Claim Card Last Used Day Of Week Full Name"
      type: string
      sql: ${store_tp_link_store_last_used_timeframes.day_of_week} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_day_of_month {
      label: "Claim Card Last Used Day Of Month"
      description: "Claim Card Last Used Day Of Month"
      type: number
      sql: ${store_tp_link_store_last_used_timeframes.day_of_month} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_week_of_year {
      label: "Claim Card Last Used Week Of Year"
      description: "Claim Card Last Used Week Of Year"
      type: number
      sql: ${store_tp_link_store_last_used_timeframes.week_of_year} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_month_num {
      label: "Claim Card Last Used Month Num"
      description: "Claim Card Last Used Month Of Year"
      type: number
      sql: ${store_tp_link_store_last_used_timeframes.month_num} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_month {
      label: "Claim Card Last Used Month"
      description: "Claim Card Last Used Month"
      type: string
      sql: ${store_tp_link_store_last_used_timeframes.month} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_quarter_of_year {
      label: "Claim Card Last Used Quarter Of Year"
      description: "Claim Card Last Used Quarter Of Year"
      type: string
      sql: ${store_tp_link_store_last_used_timeframes.quarter_of_year} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_quarter {
      label: "Claim Card Last Used Quarter"
      description: "Claim Card Last Used Quarter"
      type: string
      sql: ${store_tp_link_store_last_used_timeframes.quarter} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_year {
      label: "Claim Card Last Used Year"
      description: "Claim Card Last Used Year"
      type: number
      sql: ${store_tp_link_store_last_used_timeframes.year} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_day_of_week_index {
      label: "Claim Card Last Used day Of Week Index"
      description: "Claim Card Last Used Day Of Week Index"
      type: number
      sql: ${store_tp_link_store_last_used_timeframes.day_of_week_index} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_tp_link_store_last_used_week_begin_date {
      label: "Claim Card Last Used Week"
      description: "Claim Card Last Used Week Begin Date"
      type: date
      sql: ${store_tp_link_store_last_used_timeframes.week_begin_date} ;;
      group_label: "Claim Card Last Used Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_calendar_date {
      label: "Claim Card Deactivate Date"
      description: "Claim Card Deactivate Date"
      type: date
      hidden: yes
      sql: ${store_card_deactivate_timeframes.calendar_date} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_chain_id {
      label: "Claim Card Deactivate Chain ID"
      description: "Claim Card Deactivate Chain ID"
      type: number
      hidden: yes
      sql: ${store_card_deactivate_timeframes.chain_id} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_calendar_owner_chain_id {
      label: "Claim Card Deactivate Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${store_card_deactivate_timeframes.calendar_owner_chain_id} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_day_of_week {
      label: "Claim Card Deactivate Day Of Week"
      description: "Claim Card Deactivate Day Of Week Full Name"
      type: string
      sql: ${store_card_deactivate_timeframes.day_of_week} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_day_of_month {
      label: "Claim Card Deactivate Day Of Month"
      description: "Claim Card Deactivate Day Of Month"
      type: number
      sql: ${store_card_deactivate_timeframes.day_of_month} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_week_of_year {
      label: "Claim Card Deactivate Week Of Year"
      description: "Claim Card Deactivate Week Of Year"
      type: number
      sql: ${store_card_deactivate_timeframes.week_of_year} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_month_num {
      label: "Claim Card Deactivate Month Num"
      description: "Claim Card Deactivate Month Of Year"
      type: number
      sql: ${store_card_deactivate_timeframes.month_num} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_month {
      label: "Claim Card Deactivate Month"
      description: "Claim Card Deactivate Month"
      type: string
      sql: ${store_card_deactivate_timeframes.month} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_quarter_of_year {
      label: "Claim Card Deactivate Quarter Of Year"
      description: "Claim Card Deactivate Quarter Of Year"
      type: string
      sql: ${store_card_deactivate_timeframes.quarter_of_year} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_quarter {
      label: "Claim Card Deactivate Quarter"
      description: "Claim Card Deactivate Quarter"
      type: string
      sql: ${store_card_deactivate_timeframes.quarter} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_year {
      label: "Claim Card Deactivate Year"
      description: "Claim Card Deactivate Year"
      type: number
      sql: ${store_card_deactivate_timeframes.year} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_day_of_week_index {
      label: "Claim Card Deactivate day Of Week Index"
      description: "Claim Card Deactivate Day Of Week Index"
      type: number
      sql: ${store_card_deactivate_timeframes.day_of_week_index} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_deactivate_week_begin_date {
      label: "Claim Card Deactivate Week"
      description: "Claim Card Deactivate Week Begin Date"
      type: date
      sql: ${store_card_deactivate_timeframes.week_begin_date} ;;
      group_label: "Claim Card Deactivate Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_calendar_date {
      label: "Claim Card End Date"
      description: "Claim Card End Date"
      type: date
      hidden: yes
      sql: ${store_card_end_timeframes.calendar_date} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_chain_id {
      label: "Claim Card End Chain ID"
      description: "Claim Card End Chain ID"
      type: number
      hidden: yes
      sql: ${store_card_end_timeframes.chain_id} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_calendar_owner_chain_id {
      label: "Claim Card End Calendar Owner Chain ID"
      description: "Claim Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${store_card_end_timeframes.calendar_owner_chain_id} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_day_of_week {
      label: "Claim Card End Day Of Week"
      description: "Claim Card End Day Of Week Full Name"
      type: string
      sql: ${store_card_end_timeframes.day_of_week} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_day_of_month {
      label: "Claim Card End Day Of Month"
      description: "Claim Card End Day Of Month"
      type: number
      sql: ${store_card_end_timeframes.day_of_month} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_week_of_year {
      label: "Claim Card End Week Of Year"
      description: "Claim Card End Week Of Year"
      type: number
      sql: ${store_card_end_timeframes.week_of_year} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_month_num {
      label: "Claim Card End Month Num"
      description: "Claim Card End Month Of Year"
      type: number
      sql: ${store_card_end_timeframes.month_num} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_month {
      label: "Claim Card End Month"
      description: "Claim Card End Month"
      type: string
      sql: ${store_card_end_timeframes.month} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_quarter_of_year {
      label: "Claim Card End Quarter Of Year"
      description: "Claim Card End Quarter Of Year"
      type: string
      sql: ${store_card_end_timeframes.quarter_of_year} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_quarter {
      label: "Claim Card End Quarter"
      description: "Claim Card End Quarter"
      type: string
      sql: ${store_card_end_timeframes.quarter} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_year {
      label: "Claim Card End Year"
      description: "Claim Card End Year"
      type: number
      sql: ${store_card_end_timeframes.year} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_day_of_week_index {
      label: "Claim Card End day Of Week Index"
      description: "Claim Card End Day Of Week Index"
      type: number
      sql: ${store_card_end_timeframes.day_of_week_index} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    dimension: store_card_end_week_begin_date {
      label: "Claim Card End Week"
      description: "Claim Card End Week Begin Date"
      type: date
      sql: ${store_card_end_timeframes.week_begin_date} ;;
      group_label: "Claim Card End Date"
      view_label: "Claim Card"
    }

    #[ERXLPS-1020] - tx_tp_denial_date financial time frames
    dimension: tx_tp_denial_calendar_date {
      label: "Claim Denial Date"
      description: "Claim Denial Date"
      type: date
      hidden: yes
      sql: ${tx_tp_denial_timeframe.calendar_date} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_chain_id {
      label: "Claim Denial Chain ID"
      description: "Claim Denial Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_denial_timeframe.chain_id} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_calendar_owner_chain_id {
      label: "Claim Denial Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${tx_tp_denial_timeframe.calendar_owner_chain_id} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_day_of_week {
      label: "Claim Denial Day Of Week"
      description: "Claim Denial Day Of Week Full Name"
      type: string
      sql: ${tx_tp_denial_timeframe.day_of_week} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_day_of_month {
      label: "Claim Denial Day Of Month"
      description: "Claim Denial Day Of Month"
      type: number
      sql: ${tx_tp_denial_timeframe.day_of_month} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_week_of_year {
      label: "Claim Denial Week Of Year"
      description: "Claim Denial Week Of Year"
      type: number
      sql: ${tx_tp_denial_timeframe.week_of_year} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_month_num {
      label: "Claim Denial Month Num"
      description: "Claim Denial Month Of Year"
      type: number
      sql: ${tx_tp_denial_timeframe.month_num} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_month {
      label: "Claim Denial Month"
      description: "Claim Denial Month"
      type: string
      sql: ${tx_tp_denial_timeframe.month} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_quarter_of_year {
      label: "Claim Denial Quarter Of Year"
      description: "Claim Denial Quarter Of Year"
      type: string
      sql: ${tx_tp_denial_timeframe.quarter_of_year} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_quarter {
      label: "Claim Denial Quarter"
      description: "Claim Denial Quarter"
      type: string
      sql: ${tx_tp_denial_timeframe.quarter} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_year {
      label: "Claim Denial Year"
      description: "Claim Denial Year"
      type: number
      sql: ${tx_tp_denial_timeframe.year} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_day_of_week_index {
      label: "Claim Denial day Of Week Index"
      description: "Claim Denial Day Of Week Index"
      type: number
      sql: ${tx_tp_denial_timeframe.day_of_week_index} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    dimension: tx_tp_denial_week_begin_date {
      label: "Claim Denial Week"
      description: "Claim Denial Week Begin Date"
      type: date
      sql: ${tx_tp_denial_timeframe.week_begin_date} ;;
      group_label: "Claim Denial Date"
      view_label: "Claim"
    }

    #[ERXLPS-794] - added timeframe components for these dates

    dimension: last_filled_calendar_date {
      label: "Store Patient Last Filled Date"
      description: "Prescription Last Filled Date"
      type: date
      hidden: yes
      sql: ${patient_last_filled_timeframes.calendar_date} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_chain_id {
      label: "Store Patient Last Filled Chain ID"
      description: "Prescription Last Filled Chain ID"
      type: number
      hidden: yes
      sql: ${patient_last_filled_timeframes.chain_id} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_calendar_owner_chain_id {
      label: "Store Patient Last Filled Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${patient_last_filled_timeframes.calendar_owner_chain_id} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_day_of_week {
      label: "Store Patient Last Filled Day Of Week"
      description: "Prescription Last Filled Day Of Week Full Name"
      type: string
      sql: ${patient_last_filled_timeframes.day_of_week} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_day_of_month {
      label: "Store Patient Last Filled Day Of Month"
      description: "Prescription Last Filled Day Of Month"
      type: number
      sql: ${patient_last_filled_timeframes.day_of_month} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_week_of_year {
      label: "Store Patient Last Filled Week Of Year"
      description: "Prescription Last Filled Week Of Year"
      type: number
      sql: ${patient_last_filled_timeframes.week_of_year} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_month_num {
      label: "Store Patient Last Filled Month Num"
      description: "Prescription Last Filled Month Of Year"
      type: number
      sql: ${patient_last_filled_timeframes.month_num} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_month {
      label: "Store Patient Last Filled Month"
      description: "Prescription Last Filled Month"
      type: string
      sql: ${patient_last_filled_timeframes.month} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_quarter_of_year {
      label: "Store Patient Last Filled Quarter Of Year"
      description: "Prescription Last Filled Quarter Of Year"
      type: string
      sql: ${patient_last_filled_timeframes.quarter_of_year} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_quarter {
      label: "Store Patient Last Filled Quarter"
      description: "Prescription Last Filled Quarter"
      type: string
      sql: ${patient_last_filled_timeframes.quarter} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_year {
      label: "Store Patient Last Filled Year"
      description: "Prescription Last Filled Year"
      type: number
      sql: ${patient_last_filled_timeframes.year} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_day_of_week_index {
      label: "Store Patient Last Filled day Of Week Index"
      description: "Prescription Last Filled Day Of Week Index"
      type: number
      sql: ${patient_last_filled_timeframes.day_of_week_index} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: last_filled_week_begin_date {
      label: "Store Patient Last Filled Week"
      description: "Prescription Last Filled Week Begin Date"
      type: date
      sql: ${patient_last_filled_timeframes.week_begin_date} ;;
      group_label: "Store Patient Last Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_calendar_date {
      label: "Store Patient First Filled Date"
      description: "Prescription First Filled Date"
      type: date
      hidden: yes
      sql: ${patient_first_fill_timeframes.calendar_date} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_chain_id {
      label: "Store Patient First Filled Chain ID"
      description: "Prescription First Filled Chain ID"
      type: number
      hidden: yes
      sql: ${patient_first_fill_timeframes.chain_id} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_calendar_owner_chain_id {
      label: "Store Patient First Filled Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${patient_first_fill_timeframes.calendar_owner_chain_id} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_day_of_week {
      label: "Store Patient First Filled Day Of Week"
      description: "Prescription First Filled Day Of Week Full Name"
      type: string
      sql: ${patient_first_fill_timeframes.day_of_week} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_day_of_month {
      label: "Store Patient First Filled Day Of Month"
      description: "Prescription First Filled Day Of Month"
      type: number
      sql: ${patient_first_fill_timeframes.day_of_month} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_week_of_year {
      label: "Store Patient First Filled Week Of Year"
      description: "Prescription First Filled Week Of Year"
      type: number
      sql: ${patient_first_fill_timeframes.week_of_year} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_month_num {
      label: "Store Patient First Filled Month Num"
      description: "Prescription First Filled Month Of Year"
      type: number
      sql: ${patient_first_fill_timeframes.month_num} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_month {
      label: "Store Patient First Filled Month"
      description: "Prescription First Filled Month"
      type: string
      sql: ${patient_first_fill_timeframes.month} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_quarter_of_year {
      label: "Store Patient First Filled Quarter Of Year"
      description: "Prescription First Filled Quarter Of Year"
      type: string
      sql: ${patient_first_fill_timeframes.quarter_of_year} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_quarter {
      label: "Store Patient First Filled Quarter"
      description: "Prescription First Filled Quarter"
      type: string
      sql: ${patient_first_fill_timeframes.quarter} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_year {
      label: "Store Patient First Filled Year"
      description: "Prescription First Filled Year"
      type: number
      sql: ${patient_first_fill_timeframes.year} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_day_of_week_index {
      label: "Store Patient First Filled day Of Week Index"
      description: "Prescription First Filled Day Of Week Index"
      type: number
      sql: ${patient_first_fill_timeframes.day_of_week_index} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: first_fill_week_begin_date {
      label: "Store Patient First Filled Week"
      description: "Prescription First Filled Week Begin Date"
      type: date
      sql: ${patient_first_fill_timeframes.week_begin_date} ;;
      group_label: "Store Patient First Filled Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_calendar_date {
      label: "Store Patient Pharmacy Add Date"
      description: "Patient added to pharmacy Date"
      type: date
      hidden: yes
      sql: ${patient_source_create_timeframes.calendar_date} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_chain_id {
      label: "Store Patient Pharmacy Add Chain ID"
      description: "Patient added to pharmacy Chain ID"
      type: number
      hidden: yes
      sql: ${patient_source_create_timeframes.chain_id} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_calendar_owner_chain_id {
      label: "Store Patient Pharmacy Add Calendar Owner Chain ID"
      description: "Calendar is of this Chain ID"
      type: number
      hidden: yes
      sql: ${patient_source_create_timeframes.calendar_owner_chain_id} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_day_of_week {
      label: "Store Patient Pharmacy Add Day Of Week"
      description: "Patient added to pharmacy Day Of Week Full Name"
      type: string
      sql: ${patient_source_create_timeframes.day_of_week} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_day_of_month {
      label: "Store Patient Pharmacy Add Day Of Month"
      description: "Patient added to pharmacy Day Of Month"
      type: number
      sql: ${patient_source_create_timeframes.day_of_month} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_week_of_year {
      label: "Store Patient Pharmacy Add Week Of Year"
      description: "Patient added to pharmacy Week Of Year"
      type: number
      sql: ${patient_source_create_timeframes.week_of_year} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_month_num {
      label: "Store Patient Pharmacy Add Month Num"
      description: "Patient added to pharmacy Month Of Year"
      type: number
      sql: ${patient_source_create_timeframes.month_num} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_month {
      label: "Store Patient Pharmacy Add Month"
      description: "Patient added to pharmacy Month"
      type: string
      sql: ${patient_source_create_timeframes.month} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_quarter_of_year {
      label: "Store Patient Pharmacy Add Quarter Of Year"
      description: "Patient added to pharmacy Quarter Of Year"
      type: string
      sql: ${patient_source_create_timeframes.quarter_of_year} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_quarter {
      label: "Store Patient Pharmacy Add Quarter"
      description: "Patient added to pharmacy Quarter"
      type: string
      sql: ${patient_source_create_timeframes.quarter} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_year {
      label: "Store Patient Pharmacy Add Year"
      description: "Patient added to pharmacy Year"
      type: number
      sql: ${patient_source_create_timeframes.year} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_day_of_week_index {
      label: "Store Patient Pharmacy Add day Of Week Index"
      description: "Patient added to pharmacy Day Of Week Index"
      type: number
      sql: ${patient_source_create_timeframes.day_of_week_index} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    dimension: patient_source_create_week_begin_date {
      label: "Store Patient Pharmacy Add Week"
      description: "Patient added to pharmacy Week Begin Date"
      type: date
      sql: ${patient_source_create_timeframes.week_begin_date} ;;
      group_label: "Store Patient Pharmacy Add Date"
      view_label: "Patient - Store"
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    dimension: rx_tx_fill_quantity {
      label: "Prescription Fill Quantity"
      description: "Quantity (number of units) of the drug dispensed. (This field should only be used for grouping or filtering. Example: if you want to see Transaction Disp by Qty 30, 60, etc... )"
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.SALE_FILL_QUANTITY END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
    }

    #[ERXLPS-1060] - THis dimension is not used any where,
    #dimension: rx_tx_price {
    #  label: "Sales"
    #  description: "Price of prescription for Active transactions. (This field should only be used for grouping or filtering. Example: if you want to see the price of Prescriptions Sales $25, $35, etc ... )"
    #  type: number
    #  hidden: yes
    #  sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.rx_tx_price END ;;
    #  value_format: "$#,##0.00;($#,##0.00)"
    #}

    dimension: rx_tx_uc_price {
      label: "Prescription U & C Price"
      description: "Usual & Customary pricing of the Prescription Transaction. (This field should only be used for grouping or filtering. Example: if you want to see U&C pricing of $50, $100,etc... )"
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.SALE_UC_PRICE END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXDWPS-5191] - Looker - Albertsons Dispensed Quantity dimensions / measures not using same Partial Logic as Financial Category
    dimension: partial_fill_with_completion_flag {
      label: "Partial Fill With Active Completion Fill (Yes/No)"
      description: "Y/N Flag Indicates if an active partial fill has successful active completion fill. This is applicable only for active partial fill transactions, for other transactions it shows Not Applicable"
      type: string
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                 AND (   (${sales.rx_tx_partial_fill_status_reference} = 'P' and ${sales.rx_tx_partial_fill_bill_type_reference} = 'C')
                      OR (${sales.rx_tx_partial_fill_status_reference} = 'C' and ${sales.rx_tx_partial_fill_bill_type_reference} = 'P')
                     )
                 AND ${TABLE}.SALE_TX_STATUS = 'Y'
                THEN CASE WHEN ${eps_rx_tx_active_completion_fill.rx_tx_id} IS NOT NULL
                          THEN 'YES'
                          WHEN ${eps_rx_tx_active_completion_fill.rx_tx_id} IS NULL
                          THEN 'NO'
                      END
                ELSE 'NOT APPLICABLE'
             END ;;
      suggestions: ["YES", "NO", "NOT APPLICABLE"]
    }

    #[ERXLPS-994] - Removed COALESCE to utilize this dimension in flag columns.
    dimension: rx_tx_uc_price_reference {
      hidden: yes
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                THEN ${TABLE}.SALE_UC_PRICE
         END ;;
    }

    dimension_group: report {
      type: time
      label: "Report Period"
      timeframes: [date]
      description: "Report Period Date. Example output '2017-01-13'" #[ERXLPS-2054]
      sql: ${report_calendar_global.report_date} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_day_of_week {
      label: "Report Period Day Of Week"
      description: "Report Period Day Of Week Full Name. Example output 'Monday'" #[ERXLPS-2054]
      type: string
      sql: ${report_period_timeframes.day_of_week} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_day_of_month {
      label: "Report Period Day Of Month"
      description: "Report Period Day Of Month. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.day_of_month} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_week_begin_date {
      label: "Report Period Week Begin Date" #[ERXLPS-2092]
      description: "Report Period Week Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${report_period_timeframes.week_begin_date} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_week_of_year {
      label: "Report Period Week Of Year"
      description: "Report Period Week Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.week_of_year} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_month_num {
      label: "Report Period Month Num"
      description: "Report Period Month Of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.month_num} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_month {
      label: "Report Period Month"
      description: "Report Period Month. Example output '2017-01'" #[ERXLPS-2054]
      type: string
      sql: ${report_period_timeframes.month} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_year {
      label: "Report Period Year"
      description: "Report Period Year. Example output '2017'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.year} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_quarter_of_year {
      label: "Report Period Quarter Of Year"
      description: "Report Period Quarter Of Year. Example output 'Q1'" #[ERXLPS-2054]
      type: string
      sql: ${report_period_timeframes.quarter_of_year} ;;
      group_label: "Report Period Date"
    }

    dimension: report_period_quarter {
      label: "Report Period Quarter"
      description: "Report Period Quarter. Example output '2017-Q1'" #[ERXLPS-2054]
      type: string
      sql: ${report_period_timeframes.quarter} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-1975]
    dimension: report_period_day_of_week_index {
      label: "Report Period Day Of Week Index"
      description: "Report Period Day Of Week Index. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.day_of_week_index} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_week_end_date {
      label: "Report Period Week End Date" #[ERXLPS-2092]
      description: "Report Period Week End Date. Example output '2017-01-19'" #[ERXLPS-2054]
      type: date
      sql: ${report_period_timeframes.week_end_date} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_week_of_quarter {
      label: "Report Period Week Of Quarter"
      description: "Report Period Week of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.week_of_quarter} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_month_begin_date {
      label: "Report Period Month Begin Date"
      description: "Report Period Month Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${report_period_timeframes.month_begin_date} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_month_end_date {
      label: "Report Period Month End Date"
      description: "Report Period Month End Date. Example output '2017-01-31'" #[ERXLPS-2054]
      type: date
      sql: ${report_period_timeframes.month_end_date} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_weeks_in_month {
      label: "Report Period Weeks In Month"
      description: "Report Period Weeks In Month. Example output '4'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.weeks_in_month} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_quarter_begin_date {
      label: "Report Period Quarter Begin Date"
      description: "Report Period Quarter Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${report_period_timeframes.quarter_begin_date} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_periodquarter_end_date {
      label: "Report Period Quarter End Date"
      description: "Report Period Quarter End Date. Example output '2017-03-31'" #[ERXLPS-2054]
      type: date
      sql: ${report_period_timeframes.quarter_end_date} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_weeks_in_quarter {
      label: "Report Period Weeks In Quarter"
      description: "Report Period Weeks In Quarter. Example output '13'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.weeks_in_quarter} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_year_begin_date {
      label: "Report Period Year Begin Date"
      description: "Report Period Year Begin Date. Example output '2017-01-13'" #[ERXLPS-2054]
      type: date
      sql: ${report_period_timeframes.year_begin_date} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_year_end_date {
      label: "Report Period Year End Date"
      description: "Report Period Year End Date. Example output '2017-12-31'" #[ERXLPS-2054]
      type: date
      sql: ${report_period_timeframes.year_end_date} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_weeks_in_year {
      label: "Report Period Weeks In Year"
      description: "Report Period Weeks In Year. Example output '52'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.weeks_in_year} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_leap_year_flag {
      label: "Report Period Leap Year Flag"
      description: "Report Period Leap Year Flag. Example output 'N'" #[ERXLPS-2054]
      type: string
      sql: ${report_period_timeframes.leap_year_flag} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_day_of_quarter {
      label: "Report Period Day Of Quarter"
      description: "Report Period Day of Quarter. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.day_of_quarter} ;;
      group_label: "Report Period Date"
    }

    #[ERXLPS-2092]
    dimension: report_period_day_of_year {
      label: "Report Period Day Of Year"
      description: "Report Period Day of Year. Example output '1'" #[ERXLPS-2054]
      type: number
      sql: ${report_period_timeframes.day_of_year} ;;
      group_label: "Report Period Date"
    }

    dimension: acquisition_cost {
      label: "Acquisition Cost"
      description: "Represents the total acquisition cost of filled drug used on the prescription transaction record"
      type: number
      hidden: yes
      sql: NVL(CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                    THEN ${TABLE}.SALE_ACQUISITION_COST
                END,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXDWPS-7024] Add Unit ACQ as a Dimension to Sales Explore. Updated value_format to match with EPS precision. Added logic to show -ve values for credits.
    dimension: acquisition_cost_per_unit {
      label: "Tx Acquisition Cost Per Unit"
      description: "Represents the per unit acquisition cost of filled drug used on the prescription transaction record"
      type: number
      sql: CASE WHEN ${financial_category} IN ('CASH - FILLED', 'PARTIAL - FILLED', 'T/P - FILLED')
                THEN COALESCE(${acquisition_cost}/NULLIF(${TABLE}.SALE_FILL_QUANTITY,0) ,0)
                WHEN ${financial_category} IN ('CASH - CREDIT', 'PARTIAL - CREDIT', 'T/P - CREDIT')
                THEN COALESCE(${acquisition_cost}/NULLIF(${TABLE}.SALE_FILL_QUANTITY,0) ,0)*-1
          END ;;
      value_format: "$#,##0.0000000;($#,##0.0000000)"
    }

    dimension: acquisition_cost_after_sold {
      label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost(after Sold) of filled drug used on the prescription transaction record"
      type: number
      hidden: yes
      sql: NVL(CASE WHEN ${after_adjudicated_flg} = 'Y' AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1 THEN ${TABLE}.SALE_ACQUISITION_COST END,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    dimension: overridden_price_amount {
      label: "Prescription Overridden Price Amount"
      description: "Original Prescription price amount before the price override was performed"
      type: number
      hidden: yes
      sql: NVL(CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                    THEN ${TABLE}.SALE_OVERRIDDEN_PRICE_AMOUNT
                END,0)  ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    dimension: net_sales {
      label: "Net Sales"
      description: "Net Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                 AND ${financial_category} IN ('CASH - CREDIT','CASH - FILLED','PARTIAL - FILLED', 'PARTIAL - CREDIT')
                 AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                THEN (${TABLE}.SALE_PRICE - nvl(${TABLE}.SALE_DISCOUNT_AMOUNT,0))
                WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                 AND ${financial_category} IN ('T/P - CREDIT','T/P - FILLED')
                THEN ((${sales_tx_tp.net_due} + ${final_copay}) - ${sales_tx_tp.final_tax})
            END
                 ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXLPS-2337]
    #[ERXDWPS-1639] - Updated net_sales_filter to use tx_net_sales dimension instead of net_sales. Net sales filter should consider tx net sales value to filter the records.
    filter: net_sales_filter {
      label: "Net Sales \"Filter Only\""
      description: "Net Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: number
      sql: {% condition net_sales_filter %} ${tx_net_sales} {% endcondition %} ;;
    }

    #[ERXDWPS-1639] - New dimension added for transaction level net sales.
    dimension: tx_net_sales {
      label: "Net Sales at TX Level"
      description: "Net Sales of prescription Transaction. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: number
      hidden: yes
      sql: CASE WHEN    (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                         AND ${financial_category} IN ('CASH - CREDIT','CASH - FILLED','PARTIAL - FILLED', 'PARTIAL - CREDIT')
                         AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                     THEN (${TABLE}.SALE_PRICE - nvl(${TABLE}.SALE_DISCOUNT_AMOUNT,0))
                     WHEN    (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                         AND ${financial_category} IN ('T/P - CREDIT','T/P - FILLED')
                     THEN ${sales_tx_tp.tx_net_sales}
                 END
                   ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    dimension: net_sales_after_sold {
      label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax)"
      type: number
      hidden: yes
      sql: CASE WHEN    ${financial_category} IN ('CASH - CREDIT','CASH - FILLED','PARTIAL - FILLED', 'PARTIAL - CREDIT')
                             AND ${after_sold_flg} = 'Y'
                             AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                         THEN (${TABLE}.SALE_PRICE - ${TABLE}.SALE_DISCOUNT_AMOUNT)
                         WHEN ${financial_category} IN ('T/P - CREDIT','T/P - FILLED')
                         THEN CASE WHEN ${after_adjudicated_flg} = 'Y'
                                   THEN ${sales_tx_tp.net_due} - ${sales_tx_tp.final_tax}
                                   ELSE 0
                               END
                            + CASE WHEN ${after_sold_flg} = 'Y'
                                   THEN ${final_copay}
                                   ELSE 0
                               END
                    END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXLPS-2056] - Corrected the logic for returned claims where price is wiped out from TX_TP table.
    dimension: price {
      label: "Price"
      description: "Total Price of prescription"
      type: number
      #hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
             THEN CASE WHEN {% condition sales_rxtx_payor_summary_detail_analysis %} 'SUMMARY' {% endcondition %} AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1 THEN ${TABLE}.SALE_PRICE
                       WHEN {% condition sales_rxtx_payor_summary_detail_analysis %} 'DETAIL' {% endcondition %}
                       THEN CASE WHEN ${financial_category} IN ('CASH - CREDIT','CASH - FILLED') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                                 THEN ${TABLE}.SALE_PRICE
                                 WHEN ${financial_category} IN ('T/P - CREDIT','T/P - FILLED') AND ${returned_date} IS NOT NULL AND ${sales_tx_tp.final_price} = 0
                                 THEN ${sales_tx_tp.net_due} + ${final_copay}
                                 WHEN ${financial_category} IN ('T/P - CREDIT','T/P - FILLED')
                                 THEN ${sales_tx_tp.final_price}
                             END
                   END
              ELSE 0
        END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    dimension: price_after_sold {
      label: "Price After Sold"
      description: "Total Price of prescription after Sold"
      type: number
      hidden: yes
      sql: CASE WHEN {% condition sales_rxtx_payor_summary_detail_analysis %} 'SUMMARY' {% endcondition %} AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1 THEN ${TABLE}.SALE_PRICE
                WHEN {% condition sales_rxtx_payor_summary_detail_analysis %} 'DETAIL' {% endcondition %}
             THEN CASE WHEN ${financial_category} IN ('CASH - CREDIT','CASH - FILLED') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                       THEN ${TABLE}.SALE_PRICE
                       WHEN ${financial_category} IN ('T/P - CREDIT','T/P - FILLED')
                       THEN ${sales_tx_tp.final_price}
                   END
         END  ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    dimension: gross_margin {
      label: "Gross Margin"
      description: "Gross Margin of prescription. Calculation Used: Price of the Prescription - Acquisition Cost"
      type: number
      hidden: yes
      #[ERXLPS-2512] - Removed SUMMARY/DETAIL check. Same logic for SUMMARY/DETAIL and display gross margin only for Primary payer.
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
             THEN (${TABLE}.SALE_PRICE - ${TABLE}.SALE_ACQUISITION_COST)
             ELSE 0
        END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXLPS-1433]
    filter: gross_margin_filter {
      label: "Gross Margin $ \"Filter Only\""
      description: "Gross Margin of prescription. Calculation Used: Price of the Prescription - Acquisition Cost"
      type: number
      sql: {% condition gross_margin_filter %} ${gross_margin} {% endcondition %} ;;
    }

    dimension: gross_margin_after_sold {
      label: "Gross Margin After Sold"
      description: "Gross Margin of prescription after sold. Calculation Used: Price of the Prescription After Sold - Acquisition Cost After Sold"
      type: number
      hidden: yes
      sql: CASE WHEN ${sold_flg} = 'Y' THEN ${gross_margin} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    dimension: final_copay {
      label: "Final Copay"
      group_label: "Claim"
      description: "Final transaction third party patient copay. If the copay is overridden, this is the new amount as stated by the user. The third party copay is then populated"
      type: number
      hidden: yes
      sql: CASE WHEN {% condition sales_rxtx_payor_summary_detail_analysis %} 'SUMMARY' {% endcondition %}
            OR (     {% condition sales_rxtx_payor_summary_detail_analysis %} 'DETAIL' {% endcondition %}
         AND ${financial_category} IN ('CASH - CREDIT','CASH - FILLED')
         )
         THEN ${sales_tx_tp.last_counter_final_copay}
         ELSE ${sales_tx_tp.final_copay} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    dimension: count_adjusted_reference {
      label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply (i.e. when Days Supply >= 84, the script count is increased by 3 for each script)"
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                   THEN ${TABLE}.SALE_SCRIPT_COUNT
                        + COALESCE((CASE WHEN abs(${TABLE}.SALE_DAYS_SUPPLY) >= 84
                                         THEN ${TABLE}.SALE_SCRIPT_COUNT
                                         END * 2),0)
                   END   ;;
      value_format: "#,##0;(#,##0)"
    }

    dimension: count_reference {
      label: "Scripts"
      description: "Total script volume without any adjustment"
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                    THEN ${TABLE}.SALE_SCRIPT_COUNT
              END   ;;
      value_format: "#,##0;(#,##0)"
    }

    dimension: count_reference_after_sold {
      label: "Scripts After Sold"
      description: "Total script(After Sold) volume without any adjustment"
      type: number
      hidden: yes
      #[ERXLPS-1499] - Corrected logic to exclude CASH Scripts with NULL SOLD Date.
      sql: CASE WHEN ${financial_category} IN ('CASH - CREDIT','CASH - FILLED','PARTIAL - FILLED', 'PARTIAL - CREDIT') AND ${after_sold_flg} = 'Y' AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
             THEN ${TABLE}.SALE_SCRIPT_COUNT
             WHEN ${financial_category} IN ('T/P - CREDIT','T/P - FILLED') AND (${after_adjudicated_flg} = 'Y' or ${after_sold_flg} = 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
             THEN ${TABLE}.SALE_SCRIPT_COUNT
        END ;;
      value_format: "#,##0;(#,##0)"
    }

#[ERX-8161] START | - Looker changes: Expose F_RX fields from F_SALE table(already exposed on Sales explore)
    dimension: file_buy_flag {
      label: "Prescription File Buy"
      description: "Y/N Flag Indicating if a prescription/transaction came via File Buy"
      type: yesno
      sql: (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') and ${TABLE}.SALE_RX_FILE_BUY_FLAG = 'Y' ;;
      suggestions: ["Yes","No"]
    }

    #[ERXLPS-994] Removed NVL transformation from the below 3 flag columns. Added financial_category check for rx-Tx_uc_price_reference as price and net_sales alerady have that check.
    dimension: uc_price_equals_price_flag {
      label: "U&C Price equals Price (Yes/No)"
      description: "Yes/No Flag indicating if the U&C Price is equal to the Price of the transaction"
      type: string
      sql: CASE WHEN ${TABLE}.SALE_UC_PRICE = ${price} THEN 'Yes'
        WHEN ${TABLE}.SALE_UC_PRICE != ${price} THEN 'No' END  ;;
      suggestions: ["Yes","No"]
    }

    #[ERXLPS-1929] - New dimension added to compare U&C Price with Net Sales. Removed the existing uc_price_equals_net_sales_flag dimension.
    dimension: uc_price_compare_net_sales_flag {
      label: "U&C Price vs. Net Sales Comparison"
      description: "Flag indicating if U&C Price equals, is greater than, or less than Net Sales of the transaction"
      type: string
      sql: CASE WHEN ${TABLE}.SALE_UC_PRICE = ${net_sales} THEN 'U&C Price equals Net Sales'
               WHEN ${TABLE}.SALE_UC_PRICE > ${net_sales} THEN 'U&C Price greater than Net Sales'
               WHEN ${TABLE}.SALE_UC_PRICE < ${net_sales} THEN 'U&C Price less than Net Sales'
          END  ;;
      suggestions: ["U&C Price equals Net Sales","U&C Price greater than Net Sales", "U&C Price less than Net Sales"]
    }

    dimension: transmit_queue_submit_equals_received_price_flag {
      label: "Transmit Queue Submit equals Received Price (Yes/No)"
      view_label: "TP Transmit Queue"
      description: "Yes/No Flag indicating if Transmit Queue submit price equals to received price"
      type: string
      sql: CASE WHEN ${eps_tx_tp_transmit_queue.tx_tp_transmit_queue_submit_price_reference} = ${eps_tx_tp_transmit_queue.tx_tp_transmit_queue_received_price_reference} THEN 'Yes'
        WHEN ${eps_tx_tp_transmit_queue.tx_tp_transmit_queue_submit_price_reference} <> ${eps_tx_tp_transmit_queue.tx_tp_transmit_queue_received_price_reference} THEN 'No' END;;
      suggestions: ["Yes","No"]
    }

    #[ERXLPS-934] - Store_plan_plan_type_reference dimension created in eps_plan to reference in cash_bill_flag dimension. This is required as currently SF doesn't support sub-queires in where clause. Once SF fixes SF#8384 bug, Store_plan_plan_type_reference can be replaced with store_plan_plan_type.
    dimension: cash_bill_flag {
      label: "Cash Bill (Yes/No)"
      description: "Yes/No Flag indicating if a prescription transaction is CASH FILLED/CASH PLAN"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_TP_BILL = 'Y' or ${eps_plan.store_plan_plan_type_reference} = '8' ;;
          label: "Yes"
        }

        when: {
          sql: true ;;
          label: "No"
        }
      }
    }

    #[ERXLPS-1452] Comparable Flag
    dimension: pharmacy_comparable_flag {
      label: "Pharmacy Comparable Flag"
      view_label: "Pharmacy - Store Alignment" #[ERXLPS-6307] Renamed view label.
      description: "Yes/No flag indicating whether a Pharmacy can be compared to year over year metrics, and enterprise financial bench marks. (Calculation used: Comp Date < Report Date AND Non Comp Date > Report Date)"
      type: string
      sql: CASE WHEN ${report_type} = 'TY'
               AND NVL(${store_alignment.pharmacy_comparable_date}, TO_CHAR('2099-01-01')) <= ${report_calendar_global.calendar_date}
               AND NVL(${store_alignment.pharmacy_non_comparable_date}, TO_CHAR('2099-01-01')) > ${report_calendar_global.calendar_date}
             THEN 'Y'
             WHEN ${report_type} = 'LY'
               AND NVL(DATEADD(YEAR,-1,${store_alignment.pharmacy_comparable_date}), TO_CHAR('2099-01-01')) <= ${report_calendar_global.calendar_date}
               AND NVL(DATEADD(YEAR,-1,${store_alignment.pharmacy_non_comparable_date}), TO_CHAR('2099-01-01')) > ${report_calendar_global.calendar_date}
             THEN 'Y'
             ELSE 'N'
        END ;;
    }

    #[ERXLPS-2017]
    dimension: script_type {
      label: "Script Type"
      description: "Indicates if the script is adjusted script (Days Supply >= 84) or unadjusted script (Days Supply < 84)"
      type: string
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND abs(${TABLE}.SALE_DAYS_SUPPLY) >= 84 THEN 'Adjusted Script' ELSE 'Unadjusted Script'  END ;;
      suggestions: ["Adjusted Script","Unadjusted Script"]
    }

    measure: sum_acquisition_cost {
      label: "Acquisition Cost"
      group_label: "Acquisition Cost"
      hidden: yes
      description: "Represents the total acquisition cost of filled drug used on the prescription transaction record"
      type: sum
      sql: ${acquisition_cost} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_acquisition_cost {
      label: "Avg Acquisition Cost"
      group_label: "Acquisition Cost"
      description: "Average acquisition cost of filled drug. Calculation Used: Acquisition Cost/Total no. of scripts"
      type: number
      sql: COALESCE(${sum_acquisition_cost_ty}/NULLIF(${count},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-6290] - LY, TY/LY Variance $ and % measures added for avg acquisition cost.
    measure: avg_acquisition_cost_ly {
      label: "LY Avg Acquisition Cost"
      group_label: "Acquisition Cost"
      description: "Average last year acquisition cost of filled drug. Calculation Used: Acquisition Cost/Total no. of scripts for Last Year based on the period selected"
      type: number
      sql: COALESCE(${sum_acquisition_cost_ly}/NULLIF(${count_ly},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_acquisition_cost_variance {
      label: "TY/LY Avg Acquisition Cost Variance $"
      group_label: "Acquisition Cost"
      description: "Dollar Increase/Decrease of Average Acquisition Cost of filled drug. Calculation Used: (Avg Acquisition Cost - LY Avg Acquisition Cost)."
      type: number
      sql: ${avg_acquisition_cost} - ${avg_acquisition_cost_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                   {% else %}
                   <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_acquisition_cost_variance_pct {
      label: "TY/LY Avg Acquisition Cost Variance %"
      group_label: "Acquisition Cost"
      description: "Percentage Increase/Decrease of Average Acquisition Cost of filled drug. Calculation Used: (Avg Acquisition Cost - LY Avg Acquisition Cost)/LY Avg Acquisition Cost."
      type: number
      sql: CAST((${avg_acquisition_cost} - ${avg_acquisition_cost_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_acquisition_cost_ly}),0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
    }

    measure: sum_acquisition_cost_ty {
      label: "Acquisition Cost"
      group_label: "Acquisition Cost"
      type: sum
      description: "Represents the total acquisition cost, for this year, of the filled drug used on the prescription transaction record"
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly {
      label: "LY Acquisition Cost"
      group_label: "Acquisition Cost"
      type: sum
      description: "Represents the total acquisition cost, for last year, of the filled drug used on the prescription transaction record"
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_wk {
      label: "Acquisition Cost - Complete Week"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the complete week, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_wk {
      label: "LY Acquisition Cost - Complete Week"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the complete week, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_wtd {
      label: "Acquisition Cost - WTD"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the week to date, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_wtd {
      label: "LY Acquisition Cost - WTD"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the week to date, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_mnth {
      label: "Acquisition Cost - Complete Month"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the complete month, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_mnth {
      label: "LY Acquisition Cost - Complete Month"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the complete month, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_mtd {
      label: "Acquisition Cost - MTD"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the month to date, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_mtd {
      label: "LY Acquisition Cost - MTD"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the month to date, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_qtr {
      label: "Acquisition Cost - Complete Quarter"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the complete quarter, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_qtr {
      label: "LY Acquisition Cost - Complete Quarter"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the complete quarter, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_qtd {
      label: "Acquisition Cost - QTD"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the quarter to date, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_qtd {
      label: "LY Acquisition Cost - QTD"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the quarter to date, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_ytd {
      label: "Acquisition Cost - YTD"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the year to date, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_ytd {
      label: "LY Acquisition Cost - YTD"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the year to date, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_rolling_13_week {
      label: "Acquisition Cost - ROLLING 13 WEEK"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for a rolling 13 weeks, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_rolling_13_week {
      label: "LY Acquisition Cost - ROLLING 13 WEEK"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for a rolling 13 weeks, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ty_ttm {
      label: "Acquisition Cost - TTM"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the Trailing Tweleve Months, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_ly_ttm {
      label: "LY Acquisition Cost - TTM"
      group_label: "Acquisition Cost"
      description: "Represents the total acquisition cost for the Trailing Tweleve Months, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price {
      label: "Price"
      group_label: "Price"
      description: "Total price of prescription"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly {
      label: "LY Price"
      group_label: "Price"
      description: "Total price of prescription for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_variance {
      label: "TY/LY Price Variance %"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total price of prescription compared to the last year"
      type: number
      sql: CAST((${sum_price} - ${sum_price_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_price_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_wk {
      label: "Price - Complete Week"
      group_label: "Price"
      description: "Total price of prescription for complete Week"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_wk {
      label: "LY Price - Complete Week"
      group_label: "Price"
      description: "Total price of prescription for Last Year's complete week based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_wk_variance {
      label: "TY/LY Price Variance % - Complete Week"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in complete week without any adjustment compared to the last year"
      type: number
      sql: CAST((${sum_price_ty_wk} - ${sum_price_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_wtd {
      label: "Price - WTD"
      group_label: "Price"
      description: "Total price of prescription for WTD"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_wtd {
      label: "LY Price - WTD"
      group_label: "Price"
      description: "Total price of prescription for Last Year's WTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_wtd_variance {
      label: "TY/LY Price Variance % - WTD"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in WTD without any adjustment compared to the last year"
      type: number
      sql: CAST((${sum_price_ty_wtd} - ${sum_price_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_mnth {
      label: "Price - Complete Month"
      group_label: "Price"
      description: "Total price of prescription for complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_mnth {
      label: "LY Price - Complete Month"
      group_label: "Price"
      description: "Total price of prescription for Last Year's complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_mnth_variance {
      label: "TY/LY Price Variance % - Complete Month"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_price_ty_mnth} - ${sum_price_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_mtd {
      label: "Price - MTD"
      group_label: "Price"
      description: "Total price of prescription for MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_mtd {
      label: "LY Price - MTD"
      group_label: "Price"
      description: "Total price of prescription for Last Year's MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_mtd_variance {
      label: "TY/LY Price Variance % - MTD"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_price_ty_mtd} - ${sum_price_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_qtr {
      label: "Price - Complete Quarter"
      group_label: "Price"
      description: "Total price of prescription for complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_qtr {
      label: "LY Price - Complete Quarter"
      group_label: "Price"
      description: "Total price of prescription for Last Year's complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_qtr_variance {
      label: "TY/LY Price Variance % - Complete Quarter"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_price_ty_qtr} - ${sum_price_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_qtd {
      label: "Price - QTD"
      group_label: "Price"
      description: "Total price of prescription for QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_qtd {
      label: "LY Price - QTD"
      group_label: "Price"
      description: "Total price of prescription for Last Year's QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_qtd_variance {
      label: "TY/LY Price Variance % - QTD"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_price_ty_qtd} - ${sum_price_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_ytd {
      label: "Price - YTD"
      group_label: "Price"
      description: "Total price of prescription for YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_ytd {
      label: "LY Price - YTD"
      group_label: "Price"
      description: "Total price of prescription for Last Year's YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ytd_variance {
      label: "TY/LY Price Variance % - YTD"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_price_ty_ytd} - ${sum_price_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_rolling_13_week {
      label: "Price - ROLLING 13 WEEK"
      group_label: "Price"
      description: "Total price of prescription for ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_rolling_13_week {
      label: "LY Price - ROLLING 13 WEEK"
      group_label: "Price"
      description: "Total price of prescription for Last Year's ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_rolling_13_week_variance {
      label: "TY/LY Price Variance % - ROLLING 13 WEEK"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_price_ty_rolling_13_week} - ${sum_price_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ty_ttm {
      label: "Price - TTM"
      group_label: "Price"
      description: "Total price of prescription for TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ly_ttm {
      label: "LY Price - TTM"
      group_label: "Price"
      description: "Total price of prescription for Last Year's TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_ttm_variance {
      label: "TY/LY Price Variance % - TTM"
      group_label: "Price"
      description: "Percentage Increase/Decrease of total script volume in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_price_ty_ttm} - ${sum_price_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_price_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055]
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    measure: sum_price_brand {
      label: "Brand Price *"
      group_label: "Other Price"
      description: "Total Brand Price of prescription. For EPS Stores, by default brand price is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
             THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'B' THEN ${price} END
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} <> 'Y'
             THEN ${price}
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} <> 'Y'
             THEN ${price}
        END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055]
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    measure: sum_price_generic {
      label: "Generic Price *"
      group_label: "Other Price"
      description: "Total Generic Price of prescription. For EPS Stores, by default generic price is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
             THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'G' THEN ${price} END
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} = 'Y'
             THEN ${price}
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} = 'Y'
             THEN ${price}
             END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_compound {
      label: "Compound Price"
      group_label: "Other Price"
      description: "Total Compound Price of prescription"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_DRUG_DISPENSED = 'C' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_compound_ly {
      label: "LY Compound Price"
      group_label: "Other Price"
      description: "Total Compound Price of prescription, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_DRUG_DISPENSED = 'C' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_tp {
      label: "T/P Price"
      group_label: "Other Price"
      description: "Total T/P Price of prescription"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_cash {
      label: "Cash Price"
      group_label: "Other Price"
      description: "Total Cash Price of prescription"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_cash_ly {
      label: "LY Cash Price"
      group_label: "Other Price"
      description: "Total Cash Price of prescription, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_after_sold {
      label: "Price After Sold"
      group_label: "Price After Sold"
      description: "Total Price of prescription after Sold"
      type: sum
      hidden: yes #[ERXLPS-1454] - hiding RNAC and Price After Sold measures in Sales explore.
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and (${after_adjudicated_flg} = 'Y' or ${after_sold_flg} = 'Y') THEN ${price_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_price_after_sold_ly {
      label: "LY Price After Sold"
      group_label: "Price After Sold"
      description: "Total Price of prescription after Sold, for last year"
      type: sum
      hidden: yes #[ERXLPS-1454] - hiding RNAC and Price After Sold measures in Sales explore.
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and (${after_adjudicated_flg} = 'Y' or ${after_sold_flg} = 'Y') THEN ${price_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_cash_price_after_sold {
      label: "Cash Price After Sold"
      group_label: "Price After Sold"
      description: "Total Cash Price of prescription after Sold"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and  ${after_sold_flg} = 'Y' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${price_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_cash_price_after_sold_ly {
      label: "LY Cash Price After Sold"
      group_label: "Price After Sold"
      description: "Total Cash Price of prescription after Sold for Last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and  ${after_sold_flg} = 'Y' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${price_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_cash_price_after_sold_variance {
      label: "TY/LY Cash Price After Sold Variance %"
      group_label: "Price After Sold"
      description: "Percentage Increase/Decrease of total cash price of prescription after Sold compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_cash_price_after_sold} - ${sum_cash_price_after_sold_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_cash_price_after_sold_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_tp_price_after_sold {
      label: "T/P Price After Sold"
      group_label: "Price After Sold"
      description: "Total T/P Price of prescription after Sold"
      type: sum
      hidden: yes #[ERXLPS-1454] - hiding RNAC and Price After Sold measures in Sales explore.
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${after_adjudicated_flg} = 'Y'  AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${price_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_tp_price_after_sold_ly {
      label: "LY T/P Price After Sold"
      group_label: "Price After Sold"
      description: "Total T/P Price of prescription after Sold for Last year"
      type: sum
      hidden: yes #[ERXLPS-1454] - hiding RNAC and Price After Sold measures in Sales explore.
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${after_adjudicated_flg} = 'Y'  AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${price_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_price {
      label: "Avg Price (per script)"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price}/NULLIF(ABS(${count}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly {
      label: "LY Avg Price (per script)"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly}/NULLIF(ABS(${count_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_variance {
      label: "TY/LY Avg Price (per script) Variance %"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts compared to the last year"
      type: number
      sql: CAST((${avg_price} - ${avg_price_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_price_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_wk {
      label: "Avg Price  (per script) - Complete Week"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for complete Week"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_wk}/NULLIF(ABS(${count_ty_wk}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_wk {
      label: "LY Avg Price  (per script) - Complete Week"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's complete week based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_wk}/NULLIF(ABS(${count_ly_wk}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_wk_variance {
      label: "TY/LY Avg Price (per script) Variance % - Complete Week"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts compared to the last year's complete week"
      type: number
      sql: CAST((${avg_price_ty_wk} - ${avg_price_ly_wk}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_wk},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_wtd {
      label: "Avg Price (per script) - WTD"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_wtd}/NULLIF(ABS(${count_ty_wtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_wtd {
      label: "LY Avg Price (per script) - WTD"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's WTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_wtd}/NULLIF(ABS(${count_ly_wtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_wtd_variance {
      label: "TY/LY Avg Price (per script) Variance % - WTD"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts in WTD without any adjustment compared to the last year"
      type: number
      sql: CAST((${avg_price_ty_wtd} - ${avg_price_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_wtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_mnth {
      label: "Avg Price (per script) - Complete Month"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for complete month based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_mnth}/NULLIF(ABS(${count_ty_mnth}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_mnth {
      label: "LY Avg Price (per script) - Complete Month"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's complete month based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_mnth}/NULLIF(ABS(${count_ly_mnth}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_mnth_variance {
      label: "TY/LY Avg Price (per script) Variance % - Complete Month"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_price_ty_mnth} - ${avg_price_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_mnth},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_mtd {
      label: "Avg Price (per script) - MTD"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for MTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_mtd}/NULLIF(ABS(${count_ty_mtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_mtd {
      label: "LY Avg Price (per script) - MTD"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's MTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_mtd}/NULLIF(ABS(${count_ly_mtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_mtd_variance {
      label: "TY/LY Avg Price (per script) Variance % - MTD"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_price_ty_mtd} - ${avg_price_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_mtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_qtr {
      label: "Avg Price (per script) - Complete Quarter"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for complete quarter based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_qtr}/NULLIF(ABS(${count_ty_qtr}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_qtr {
      label: "LY Avg Price (per script) - Complete Quarter"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's complete quarter based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_qtr}/NULLIF(ABS(${count_ly_qtr}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_qtr_variance {
      label: "TY/LY Avg Price (per script) Variance % - Complete Quarter"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_price_ty_qtr} - ${avg_price_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_qtr},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_qtd {
      label: "Avg Price (per script) - QTD"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for QTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_qtd}/NULLIF(ABS(${count_ty_qtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_qtd {
      label: "LY Avg Price (per script) - QTD"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's QTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_qtd}/NULLIF(ABS(${count_ly_qtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_qtd_variance {
      label: "TY/LY Avg Price (per script) Variance % - QTD"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_price_ty_qtd} - ${avg_price_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_qtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_ytd {
      label: "Avg Price (per script) - YTD"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for YTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_ytd}/NULLIF(ABS(${count_ty_ytd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_ytd {
      label: "LY Avg Price (per script) - YTD"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's YTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_ytd}/NULLIF(ABS(${count_ly_ytd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ytd_variance {
      label: "TY/LY Avg Price (per script) Variance % - YTD"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_price_ty_ytd} - ${avg_price_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_ytd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_rolling_13_week {
      label: "Avg Price (per script) - ROLLING 13 WEEK"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for ROLLING 13 WEEK based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_rolling_13_week}/NULLIF(ABS(${count_ty_rolling_13_week}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_rolling_13_week {
      label: "LY Avg Price (per script) - ROLLING 13 WEEK"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's ROLLING 13 WEEK based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_rolling_13_week}/NULLIF(ABS(${count_ly_rolling_13_week}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_rolling_13_week_variance {
      label: "TY/LY Avg Price (per script) Variance % - ROLLING 13 WEEK"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_price_ty_rolling_13_week} - ${avg_price_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ty_ttm {
      label: "Avg Price (per script) - TTM"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for TTM based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ty_ttm}/NULLIF(ABS(${count_ty_ttm}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ly_ttm {
      label: "LY Avg Price (per script) - TTM"
      group_label: "Average Price (per script)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts for Last Year's TTM based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_price_ly_ttm}/NULLIF(ABS(${count_ly_ttm}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_price_ttm_variance {
      label: "TY/LY Avg Price Variance % - TTM"
      group_label: "Average Price (per script)"
      description: "Percentage Increase/Decrease of Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of scripts in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_price_ty_ttm} - ${avg_price_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${avg_price_ly_ttm},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_gross_margin {
      label: "Gross Margin"
      group_label: "Gross Margin"
      description: "Gross Margin of prescription. Calculation Used: Price of the Prescription - Acquisition Cost"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${gross_margin} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_gross_margin_ly {
      label: "LY Gross Margin"
      group_label: "Gross Margin"
      description: "Gross Margin of prescription, for last year. Calculation Used: Price of the Prescription - Acquisition Cost"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${gross_margin} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6249] - Gross Margin variance measures added.
    measure: sum_gross_margin_variance_dollar {
      label: "TY/LY Gross Margin Variance $"
      group_label: "Gross Margin"
      description: "Dollar Increase/Decrease of total Gross Margin of prescription. Calculation Used: (Gross Margin - LY Gross Margin)."
      type: number
      sql: ${sum_gross_margin} - ${sum_gross_margin_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_gross_margin_variance_pct {
      label: "TY/LY Gross Margin Variance %"
      group_label: "Gross Margin"
      description: "Percentage Increase/Decrease of total Gross Margin of prescription. Calculation Used: (Gross Margin - LY Gross Margin)/LY Gross Margin."
      type: number
      sql: CAST((${sum_gross_margin} - ${sum_gross_margin_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_gross_margin_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_gross_margin_after_sold {
      label: "Gross Margin After Sold"
      group_label: "Gross Margin"
      description: "Gross Margin of prescription after sold. Calculation Used: Price of the Prescription - Acquisition Cost"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${gross_margin_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_gross_margin_after_sold_ly {
      label: "LY Gross Margin After Sold"
      group_label: "Gross Margin"
      description: "Gross Margin of prescription after sold, for last year. Calculation Used: Price of the Prescription - Acquisition Cost"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${gross_margin_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_gross_margin {
      label: "Avg Gross Margin"
      group_label: "Gross Margin"
      description: "Average Gross Margin of prescription. Calculation Used: Gross Margin/Scripts"
      type: number
      sql: ${sum_gross_margin}/NULLIF(${count},0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }
    #ERXDWPS-5131 - Code change Start
    measure: avg_gross_margin_ly {
      label: "LY Avg Gross Margin"
      group_label: "Gross Margin"
      description: "Average Gross Margin of prescription, for Last Year based on the period selected. Calculation Used: Calculation Used: LY Gross Margin/LY Scripts"
      type: number
      sql: ${sum_gross_margin_ly}/NULLIF(${count_ly},0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_gross_margin_variance {
      label: "TY/LY Avg Gross Margin Variance $"
      group_label: "Gross Margin"
      description: "Dollar Increase/Decrease of Average Gross Margin of prescription compared to the last year. Calculation Used: Avg Gross Margin – LY Avg Gross Margin"
      type: number
      sql: ${avg_gross_margin} - ${avg_gross_margin_ly}  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_gross_margin_variance_pct {
      label: "TY/LY Avg Gross Margin Variance %"
      group_label: "Gross Margin"
      description: "Percentage Increase/Decrease of Average Gross Margin of prescription compared to the last year. Calculation Used: (Avg Gross Margin – LY Avg Gross Margin)/ LY Avg Gross Margin"
      type: number
      sql: CAST((${avg_gross_margin} - ${avg_gross_margin_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_gross_margin_ly}),0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }
    #ERXDWPS-5131 - Code change End

    measure: sum_gross_margin_pct {
      label: "Gross Margin %"
      group_label: "Gross Margin"
      description: "Gross Margin % of prescription. Calculation Used: (Price of the Prescription - Acquisition Cost)/Price of the Prescription"
      type: number
      sql: ${sum_gross_margin}/NULLIF(${sum_price},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_gross_margin_pct_ly {
      label: "LY Gross Margin %"
      group_label: "Gross Margin"
      description: "Gross Margin % of prescription, for last year. Calculation Used: (Price of the Prescription - Acquisition Cost)/Price of the Prescription"
      type: number
      sql: ${sum_gross_margin_ly}/NULLIF(${sum_price_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_discount {
      label: "Discount"
      group_label: "Discount"
      description: "Total Discount of prescription"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                   THEN ${TABLE}.SALE_DISCOUNT_AMOUNT
               END   ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_discount_ly {
      label: "LY Discount"
      group_label: "Discount"
      description: "Total Discount of prescription, for last year"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY' AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                       THEN  ${TABLE}.SALE_DISCOUNT_AMOUNT
               END   ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_tax {
      label: "Tax"
      group_label: "Tax"
      description: "Total Tax of prescription. For Cash transaction: tax is directly reported using the information present in transaction table. For TP transaction tax is reported using the information final tax information present in the  claim table"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY'
                     THEN CASE WHEN ${financial_category} IN ('CASH - CREDIT','CASH - FILLED')
                               THEN ${TABLE}.SALE_TAX_AMOUNT
                               WHEN ${financial_category} IN ('T/P - CREDIT','T/P - FILLED')
                               THEN ${sales_tx_tp.final_tax}
                           END
                 END  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_tax_ly {
      label: "LY Tax"
      group_label: "Tax"
      description: "Total Tax of prescription. For Cash transaction: tax is directly reported using the information present in transaction table. For TP transaction tax is reported using the information final tax information present in the  claim table, for last year"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY'
                     THEN CASE WHEN ${financial_category} IN ('CASH - CREDIT','CASH - FILLED')
                               THEN ${TABLE}.SALE_TAX_AMOUNT
                               WHEN ${financial_category} IN ('T/P - CREDIT','T/P - FILLED')
                               THEN ${sales_tx_tp.final_tax}
                           END
                 END  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales {
      label: "Net Sales"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly {
      label: "LY Net Sales"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1876] - Added Net Sales Variance $ measure
    measure: sum_net_sales_variance_dollar {
      label: "TY/LY Net Sales Variance $"
      group_label: "Net Sales"
      description: "Dollar Increase/Decrease of total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax compared to the last year"
      type: number
      sql: ${sum_net_sales} - ${sum_net_sales_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_variance {
      label: "TY/LY Net Sales Variance %"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax compared to the last year"
      type: number
      sql: CAST((${sum_net_sales} - ${sum_net_sales_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_sales_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_wk {
      label: "Net Sales - Complete Week"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for complete Week"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_wk {
      label: "LY Net Sales - Complete Week"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's complete week based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_wk_variance {
      label: "TY/LY Net Sales Variance % - Complete Week"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in complete week without any adjustment compared to the last year"
      type: number
      sql: CAST((${sum_net_sales_ty_wk} - ${sum_net_sales_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_wtd {
      label: "Net Sales - WTD"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for WTD"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_wtd {
      label: "LY Net Sales - WTD"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's WTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_wtd_variance {
      label: "TY/LY Net Sales Variance % - WTD"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in WTD without any adjustment compared to the last year"
      type: number
      sql: CAST((${sum_net_sales_ty_wtd} - ${sum_net_sales_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_mnth {
      label: "Net Sales - Complete Month"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_mnth {
      label: "LY Net Sales - Complete Month"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_mnth_variance {
      label: "TY/LY Net Sales Variance % - Complete Month"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_mnth} - ${sum_net_sales_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_mtd {
      label: "Net Sales - MTD"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_mtd {
      label: "LY Net Sales - MTD"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_mtd_variance {
      label: "TY/LY Net Sales Variance % - MTD"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_mtd} - ${sum_net_sales_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_qtr {
      label: "Net Sales - Complete Quarter"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_qtr {
      label: "LY Net Sales - Complete Quarter"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_qtr_variance {
      label: "TY/LY Net Sales Variance % - Complete Quarter"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_qtr} - ${sum_net_sales_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_qtd {
      label: "Net Sales - QTD"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_qtd {
      label: "LY Net Sales - QTD"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_qtd_variance {
      label: "TY/LY Net Sales Variance % - QTD"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_qtd} - ${sum_net_sales_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_ytd {
      label: "Net Sales - YTD"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_ytd {
      label: "LY Net Sales - YTD"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ytd_variance {
      label: "TY/LY Net Sales Variance % - YTD"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_ytd} - ${sum_net_sales_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_rolling_13_week {
      label: "Net Sales - ROLLING 13 WEEK"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_rolling_13_week {
      label: "LY Net Sales - ROLLING 13 WEEK"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_rolling_13_week_variance {
      label: "TY/LY Net Sales Variance % - ROLLING 13 WEEK"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_rolling_13_week} - ${sum_net_sales_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ty_ttm {
      label: "Net Sales - TTM"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ly_ttm {
      label: "LY Net Sales - TTM"
      group_label: "Net Sales"
      description: "Total Net Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax for Last Year's TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_ttm_variance {
      label: "TY/LY Net Sales Variance % - TTM"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of total script volume in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_ttm} - ${sum_net_sales_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - net brand sales reference dimension. Updated label, description and logic for corresponding measures.
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    dimension: net_sales_brand_reference {
      label: "Net Brand Sales"
      description: "Net Brand Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax). For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      hidden: yes
      sql: CASE WHEN ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
                 THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'B' THEN ${net_sales} END
                 WHEN ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} <> 'Y'
                 THEN ${net_sales}
                 WHEN ${source_system_id} = 11 AND ${store_drug_multi_source_reference} <> 'Y'
                 THEN ${net_sales}
            END ;;
    }

    measure: sum_net_sales_brand {
      label: "Net Brand Sales *"
      group_label: "Net Brand Sales"
      description: "Net Brand Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax). For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_sales_brand_reference} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_brand_ly {
      label: "LY Net Brand Sales *"
      group_label: "Net Brand Sales"
      description: "Net Brand Sales of prescription, for last year. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax). For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users also has an option to choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${net_sales_brand_reference} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

# [ERX-3509] - Added these net sales brand measures which will be used in corresponding budget brand sales variance measures computation [Start]
    measure: sum_net_sales_brand_variance {
      label: "TY/LY Net Brand Sales Variance % *"
      group_label: "Net Brand Sales"
      description: "Percentage Increase/Decrease of total Net Brand Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax compared to the last year. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${sum_net_sales_brand} - ${sum_net_sales_brand_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_sales_brand_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

# [ERXLPS-1269] additional measures are added
    measure: sum_net_sales_brand_variance_dollar {
      label: "TY/LY Net Brand Sales Variance $ *"
      group_label: "Net Brand Sales"
      description: "Dollar Increase/Decrease of total Net Brand Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax compared to the last year. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: (${sum_net_sales_brand} - ${sum_net_sales_brand_ly})  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - net brand sales reference dimension. Updated label, description and logic for corresponding measures.
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    dimension: net_sales_generic_reference {
      label: "Net Generic Sales"
      description: "Net Generic Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax). For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      hidden: yes
      sql: CASE WHEN ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
                   THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'G' THEN ${net_sales} END
                   WHEN ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} = 'Y'
                   THEN ${net_sales}
                   WHEN ${source_system_id} = 11 AND ${store_drug_multi_source_reference} = 'Y'
                   THEN ${net_sales}
              END ;;
    }

    measure: sum_net_sales_generic {
      label: "Net Generic Sales *"
      group_label: "Net Generic Sales"
      description: "Net Generic Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax). For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_sales_generic_reference} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_generic_ly {
      label: "LY Net Generic Sales *"
      group_label: "Net Generic Sales"
      description: "Net Generic Sales of prescription, for last year. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax). For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${net_sales_generic_reference} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

# [ERX-3509] - Added these net sales generic measures which will be used in corresponding budget generic sales variance measures computation [start]
    measure: sum_net_sales_generic_variance {
      label: "TY/LY Net Generic Sales Variance % *"
      group_label: "Net Generic Sales"
      description: "Percentage Increase/Decrease of total Net Generic Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax compared to the last year. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${sum_net_sales_generic} - ${sum_net_sales_generic_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_sales_generic_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

# [ERXLPS-1269] additional measures are added
    measure: sum_net_sales_generic_variance_dollar {
      label: "TY/LY Net Generic Sales Variance $ *"
      group_label: "Net Generic Sales"
      description: "Dollar Increase/Decrease of total Net Generic Sales of prescription. Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax compared to the last year. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: (${sum_net_sales_generic} - ${sum_net_sales_generic_ly})  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_compound {
      label: "Net Compound Sales"
      group_label: "Net Compound Sales"
      description: "Net Compound Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_DRUG_DISPENSED = 'C' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_compound_ly {
      label: "LY Net Compound Sales"
      group_label: "Net Compound Sales"
      description: "Net Compound Sales of prescription, for last year. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_DRUG_DISPENSED = 'C' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_tp {
      label: "Net T/P Sales"
      group_label: "Net T/P Sales"
      description: "Net T/P Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_tp_ly {
      label: "LY Net T/P Sales"
      group_label: "Net T/P Sales"
      description: "Net T/P Sales of prescription, for last year. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_cash {
      label: "Net Cash Sales"
      group_label: "Net Cash Sales"
      description: "Net Cash Sales of prescription. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_cash_ly {
      label: "LY Net Cash Sales"
      group_label: "Net Cash Sales"
      description: "Net Cash Sales of prescription, for last year. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold {
      label: "Net Sales After Sold"
      group_label: "Net Sales After Sold"
      description: "Total Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly {
      label: "LY Net Sales After Sold"
      group_label: "Net Sales After Sold"
      description: "Total Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_variance {
      label: "TY/LY Net Sales After Sold Variance %"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease of total Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) compared to the last year"
      type: number
      sql: CAST((${sum_net_sales_after_sold} - ${sum_net_sales_after_sold_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_sales_after_sold_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-982] - New measure added for TY/LY Net Sales After Sold Variance $
    measure: sum_net_sales_after_sold_variance_dollar {
      label: "TY/LY Net Sales After Sold Variance $"
      group_label: "Net Sales After Sold"
      description: "Dollar Increase/Decrease of total Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) compared to the last year"
      type: number
      sql: ${sum_net_sales_after_sold} - ${sum_net_sales_after_sold_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_wk {
      label: "Net Sales After Sold - Complete Week"
      group_label: "Net Sales After Sold"
      description: "Total Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for complete Week"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_wk {
      label: "LY Net Sales After Sold - Complete Week"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's complete week based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_wk_variance {
      label: "TY/LY Net Sales After Sold Variance % - Complete Week"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease of Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) compared to the last year's complete week"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_wk} - ${sum_net_sales_after_sold_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_wtd {
      label: "Net Sales After Sold - WTD"
      group_label: "Net Sales After Sold"
      description: "Total Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for WTD"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_wtd {
      label: "LY Net Sales After Sold - WTD"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's WTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_wtd_variance {
      label: "TY/LY Net Sales After Sold Variance % - WTD"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) in WTD compared to the last year"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_wtd} - ${sum_net_sales_after_sold_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_mnth {
      label: "Net Sales After Sold - Complete Month"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_mnth {
      label: "LY Net Sales After Sold - Complete Month"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_mnth_variance {
      label: "TY/LY Net Sales After Sold Variance % - Complete Month"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) in complete month compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_mnth} - ${sum_net_sales_after_sold_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_mtd {
      label: "Net Sales After Sold - MTD"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_mtd {
      label: "LY Net Sales After Sold - MTD"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_mtd_variance {
      label: "TY/LY Net Sales After Sold Variance % - MTD"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) in MTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_mtd} - ${sum_net_sales_after_sold_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_qtr {
      label: "Net Sales After Sold - Complete Quarter"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_qtr {
      label: "LY Net Sales After Sold - Complete Quarter"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_qtr_variance {
      label: "TY/LY Net Sales After Sold Variance % - Complete Quarter"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) in complete quarter compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_qtr} - ${sum_net_sales_after_sold_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_qtd {
      label: "Net Sales After Sold - QTD"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_qtd {
      label: "LY Net Sales After Sold - QTD"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_qtd_variance {
      label: "TY/LY Net Sales After Sold Variance % - QTD"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) in QTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_qtd} - ${sum_net_sales_after_sold_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_ytd {
      label: "Net Sales After Sold - YTD"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_ytd {
      label: "LY Net Sales After Sold - YTD"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ytd_variance {
      label: "TY/LY Net Sales After Sold Variance % - YTD"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) in YTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_ytd} - ${sum_net_sales_after_sold_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_rolling_13_week {
      label: "Net Sales After Sold - ROLLING 13 WEEK"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_rolling_13_week {
      label: "LY Net Sales After Sold - ROLLING 13 WEEK"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_rolling_13_week_variance {
      label: "TY/LY Net Sales After Sold Variance % - ROLLING 13 WEEK"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease of tNet Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) in ROLLING 13 WEEK compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_rolling_13_week} - ${sum_net_sales_after_sold_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ty_ttm {
      label: "Net Sales After Sold - TTM"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ly_ttm {
      label: "LY Net Sales After Sold - TTM"
      group_label: "Net Sales After Sold"
      description: "Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) for Last Year's TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${net_sales_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_after_sold_ttm_variance {
      label: "TY/LY Net Sales After Sold Variance % - TTM"
      group_label: "Net Sales After Sold"
      description: "Percentage Increase/Decrease of Net Sales of prescription after sold. (Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net T/P Due + Final Copay After Sold - Tax) in TTM compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_ttm} - ${sum_net_sales_after_sold_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_net_sales {
      label: "Avg Net Sales (per script)"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales}/NULLIF(ABS(${count}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly {
      label: "LY Avg Net Sales (per script)"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly}/NULLIF(ABS(${count_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_variance {
      label: "TY/LY Avg Net Sales (per script) Variance %"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts compared to the last year"
      type: number
      sql: CAST((${avg_net_sales} - ${avg_net_sales_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_net_sales_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1023] - New measure "TY/LY Avg Net Sales (per script) Variance $" added
    measure: avg_net_sales_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescriptions compared to the last year"
      type: number
      sql: ${avg_net_sales} - ${avg_net_sales_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    measure: avg_net_sales_ty_wk {
      label: "Avg Net Sales  (per script) - Complete Week"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for complete Week"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_wk}/NULLIF(ABS(${count_ty_wk}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_wk {
      label: "LY Avg Net Sales  (per script) - Complete Week"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's complete week based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_wk}/NULLIF(ABS(${count_ly_wk}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_wk_variance {
      label: "TY/LY Avg Net Sales (per script) Variance % - Complete Week"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts compared to the last year's complete week"
      type: number
      sql: CAST((${avg_net_sales_ty_wk} - ${avg_net_sales_ly_wk}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_wk},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_wk_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $ - Complete Week"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription compared to the last year's complete week"
      type: number
      sql: ${avg_net_sales_ty_wk} - ${avg_net_sales_ly_wk} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ty_wtd {
      label: "Avg Net Sales (per script) - WTD"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_wtd}/NULLIF(ABS(${count_ty_wtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_wtd {
      label: "LY Avg Net Sales (per script) - WTD"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's WTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_wtd}/NULLIF(ABS(${count_ly_wtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_wtd_variance {
      label: "TY/LY Avg Net Sales (per script) Variance % - WTD"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts in WTD without any adjustment compared to the last year"
      type: number
      sql: CAST((${avg_net_sales_ty_wtd} - ${avg_net_sales_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_wtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

# [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_wtd_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $ - WTD"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription in WTD without any adjustment compared to the last year"
      type: number
      sql:  ${avg_net_sales_ty_wtd} - ${avg_net_sales_ly_wtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ty_mnth {
      label: "Avg Net Sales (per script) - Complete Month"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for complete month based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_mnth}/NULLIF(ABS(${count_ty_mnth}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_mnth {
      label: "LY Avg Net Sales (per script) - Complete Month"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's complete month based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_mnth}/NULLIF(ABS(${count_ly_mnth}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_mnth_variance {
      label: "TY/LY Avg Net Sales (per script) Variance % - Complete Month"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_ty_mnth} - ${avg_net_sales_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_mnth},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

# [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_mnth_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $ - Complete Month"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql:  ${avg_net_sales_ty_mnth} - ${avg_net_sales_ly_mnth} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ty_mtd {
      label: "Avg Net Sales (per script) - MTD"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for MTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_mtd}/NULLIF(ABS(${count_ty_mtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_mtd {
      label: "LY Avg Net Sales (per script) - MTD"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's MTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_mtd}/NULLIF(ABS(${count_ly_mtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_mtd_variance {
      label: "TY/LY Avg Net Sales (per script) Variance % - MTD"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_ty_mtd} - ${avg_net_sales_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_mtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

# [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_mtd_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $ - MTD"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_ty_mtd} - ${avg_net_sales_ly_mtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }


    measure: avg_net_sales_ty_qtr {
      label: "Avg Net Sales (per script) - Complete Quarter"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for complete quarter based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_qtr}/NULLIF(ABS(${count_ty_qtr}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_qtr {
      label: "LY Avg Net Sales (per script) - Complete Quarter"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's complete quarter based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_qtr}/NULLIF(ABS(${count_ly_qtr}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_qtr_variance {
      label: "TY/LY Avg Net Sales (per script) Variance % - Complete Quarter"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_ty_qtr} - ${avg_net_sales_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_qtr},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

# [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_qtr_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $ - Complete Quarter"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_ty_qtr} - ${avg_net_sales_ly_qtr} ;;
      value_format:  "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ty_qtd {
      label: "Avg Net Sales (per script) - QTD"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for QTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_qtd}/NULLIF(ABS(${count_ty_qtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_qtd {
      label: "LY Avg Net Sales (per script) - QTD"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's QTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_qtd}/NULLIF(ABS(${count_ly_qtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_qtd_variance {
      label: "TY/LY Avg Net Sales (per script) Variance % - QTD"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_ty_qtd} - ${avg_net_sales_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_qtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

# [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_qtd_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $ - QTD"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql:  ${avg_net_sales_ty_qtd} - ${avg_net_sales_ly_qtd} ;;
      value_format:  "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }


    measure: avg_net_sales_ty_ytd {
      label: "Avg Net Sales (per script) - YTD"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for YTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_ytd}/NULLIF(ABS(${count_ty_ytd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_ytd {
      label: "LY Avg Net Sales (per script) - YTD"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's YTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_ytd}/NULLIF(ABS(${count_ly_ytd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ytd_variance {
      label: "TY/LY Avg Net Sales (per script) Variance % - YTD"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_ty_ytd} - ${avg_net_sales_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_ytd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_ytd_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $ - YTD"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_ty_ytd} - ${avg_net_sales_ly_ytd} ;;
      value_format:  "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ty_rolling_13_week {
      label: "Avg Net Sales (per script) - ROLLING 13 WEEK"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for ROLLING 13 WEEK based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_rolling_13_week}/NULLIF(ABS(${count_ty_rolling_13_week}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_rolling_13_week {
      label: "LY Avg Net Sales (per script) - ROLLING 13 WEEK"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's ROLLING 13 WEEK based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_rolling_13_week}/NULLIF(ABS(${count_ly_rolling_13_week}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_rolling_13_week_variance {
      label: "TY/LY Avg Net Sales (per script) Variance % - ROLLING 13 WEEK"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_ty_rolling_13_week} - ${avg_net_sales_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

# [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_rolling_13_week_variance_dollar {
      label: "TY/LY Avg Net Sales (per script) Variance $ - ROLLING 13 WEEK"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_ty_rolling_13_week} - ${avg_net_sales_ly_rolling_13_week} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ty_ttm {
      label: "Avg Net Sales (per script) - TTM"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for TTM based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_ttm}/NULLIF(ABS(${count_ty_ttm}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ly_ttm {
      label: "LY Avg Net Sales (per script) - TTM"
      group_label: "Average Net Sales (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts for Last Year's TTM based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_ttm}/NULLIF(ABS(${count_ly_ttm}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_ttm_variance {
      label: "TY/LY Avg Net Sales (Per Script) Variance % - TTM"
      group_label: "Average Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription/Total no. of scripts in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_ty_ttm} - ${avg_net_sales_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_ly_ttm},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

# [ERXLPS-1036] added ty/ly avg net sales per script variance $ measures for varioustimeframe components
    measure: avg_net_sales_ttm_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Script) Variance $ - TTM"
      group_label: "Average Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Total Net Sales of the Prescription in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_ty_ttm} - ${avg_net_sales_ly_ttm} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

# [ERX-3509] - Added these average net sales brand measures which will be used in corresponding budget brand average sales variance measures computation
    measure: avg_net_sales_brand {
      label: "Avg Net Brand Sales (per script) *"
      group_label: "Average Net Brand Sales (per script)"
      description: "Average Net Brand Sales of prescription. Calculation Used: Total Net Brand Sales of the Prescription/Total no. of brand scripts. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_brand}/NULLIF(ABS(${count_brand}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_brand_ly {
      label: "LY Avg Net Brand Sales (per script) *"
      group_label: "Average Net Brand Sales (per script)"
      description: "Average Net Brand Sales of prescription. Calculation Used: Total Net Brand Sales of the Prescription/Total no. of brand scripts for Last Year based on the period selected. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_brand_ly}/NULLIF(ABS(${count_brand_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_brand_variance {
      label: "TY/LY Avg Net Brand Sales (per script) Variance % *"
      group_label: "Average Net Brand Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Brand Sales of prescription. Calculation Used: Total Net Brand Sales of the Prescription/Total no. of brand scripts compared to the last year. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${avg_net_sales_brand} - ${avg_net_sales_brand_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_net_sales_brand_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_brand_variance_dollar {
      label: "TY/LY Avg Net Brand Sales (per script) Variance $ *"
      group_label: "Average Net Brand Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Brand Sales of prescription. Calculation Used: Total Net Brand Sales of the Prescriptions compared to the last year. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${avg_net_sales_brand} - ${avg_net_sales_brand_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

# [ERX-3509] - Added these average net sales generic measures which will be used in corresponding budget generic average sales variance measures computation
    measure: avg_net_sales_generic {
      label: "Avg Net Generic Sales (per script) *"
      group_label: "Average Net Generic Sales (per script)"
      description: "Average Net Generic Sales of prescription. Calculation Used: Average Net Generic Sales of the Prescription/Total no. of generic scripts. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_generic}/NULLIF(ABS(${count_generic}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_generic_ly {
      label: "LY Avg Net Generic Sales (per script) *"
      group_label: "Average Net Generic Sales (per script)"
      description: "Average Net Generic Sales of prescription. Calculation Used: Average Net Generic Sales of the Prescription/Total no. of generic scripts for Last Year based on the period selected. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_generic_ly}/NULLIF(ABS(${count_generic_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_generic_variance {
      label: "TY/LY Avg Net Generic Sales (per script) Variance % *"
      group_label: "Average Net Generic Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Generic Sales of prescription. Calculation Used: Average Net Generic Sales of the Prescription/Total no. of generic scripts compared to the last year. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${avg_net_sales_generic} - ${avg_net_sales_generic_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_net_sales_generic_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_generic_variance_dollar {
      label: "TY/LY Avg Net Generic Sales (per script) Variance $ *"
      group_label: "Average Net Generic Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Generic Sales of prescription. Calculation Used: Average Net Generic Sales of the Prescriptions compared to the last year. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${avg_net_sales_generic} - ${avg_net_sales_generic_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    measure: avg_net_sales_after_sold {
      label: "Avg Net Sales After Sold (per script)"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold}/NULLIF(ABS(${count_after_sold}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly {
      label: "LY Avg Net Sales After Sold (per script)"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly}/NULLIF(ABS(${count_after_sold_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance %"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts compared to the last year"
      type: number
      sql: CAST((${avg_net_sales_after_sold} - ${avg_net_sales_after_sold_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_net_sales_after_sold_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1023] - New measure "TY/LY Avg Net Sales After Sold (per script) Variance $" added.
    measure: avg_net_sales_after_sold_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold compared to the last year"
      type: number
      sql: ${avg_net_sales_after_sold} - ${avg_net_sales_after_sold_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_wk {
      label: "Avg Net Sales After Sold (per script) - Complete Week"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for complete Week"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_wk}/NULLIF(ABS(${count_after_sold_ty_wk}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_wk {
      label: "LY Avg Net Sales After Sold (per script) - Complete Week"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's complete week based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_wk}/NULLIF(ABS(${count_after_sold_ly_wk}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_wk_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - Complete Week"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts compared to the last year's complete week"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_wk} - ${avg_net_sales_after_sold_ly_wk}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_wk},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_wk_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - Complete Week"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold compared to the last year's complete week"
      type: number
      sql: ${avg_net_sales_after_sold_ty_wk} - ${avg_net_sales_after_sold_ly_wk}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_wtd {
      label: "Avg Net Sales After Sold (per script) - WTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_wtd}/NULLIF(ABS(${count_after_sold_ty_wtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_wtd {
      label: "LY Avg Net Sales After Sold (per script) - WTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's WTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_wtd}/NULLIF(ABS(${count_after_sold_ly_wtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_wtd_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - WTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts in WTD without any adjustment compared to the last year"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_wtd} - ${avg_net_sales_after_sold_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_wtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_wtd_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - WTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold in WTD without any adjustment compared to the last year"
      type: number
      sql: ${avg_net_sales_after_sold_ty_wtd} - ${avg_net_sales_after_sold_ly_wtd}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_mnth {
      label: "Avg Net Sales After Sold (per script) - Complete Month"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for complete month based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_mnth}/NULLIF(ABS(${count_after_sold_ty_mnth}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_mnth {
      label: "LY Avg Net Sales After Sold (per script) - Complete Month"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's complete month based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_mnth}/NULLIF(ABS(${count_after_sold_ly_mnth}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_mnth_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - Complete Month"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_mnth} - ${avg_net_sales_after_sold_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_mnth},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_mnth_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - Complete Month"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_after_sold_ty_mnth} - ${avg_net_sales_after_sold_ly_mnth}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_mtd {
      label: "Avg Net Sales After Sold (per script) - MTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for MTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_mtd}/NULLIF(ABS(${count_after_sold_ty_mtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_mtd {
      label: "LY Avg Net Sales After Sold (per script) - MTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's MTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_mtd}/NULLIF(ABS(${count_after_sold_ly_mtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_mtd_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - MTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_mtd} - ${avg_net_sales_after_sold_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_mtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_mtd_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - MTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_after_sold_ty_mtd} - ${avg_net_sales_after_sold_ly_mtd}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_qtr {
      label: "Avg Net Sales After Sold (per script) - Complete Quarter"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for complete quarter based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_qtr}/NULLIF(ABS(${count_after_sold_ty_qtr}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_qtr {
      label: "LY Avg Net Sales After Sold (per script) - Complete Quarter"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's complete quarter based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_qtr}/NULLIF(ABS(${count_after_sold_ly_qtr}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_qtr_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - Complete Quarter"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_qtr} - ${avg_net_sales_after_sold_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_qtr},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_qtr_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - Complete Quarter"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_after_sold_ty_qtr} - ${avg_net_sales_after_sold_ly_qtr}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_qtd {
      label: "Avg Net Sales After Sold (per script) - QTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for QTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_qtd}/NULLIF(ABS(${count_after_sold_ty_qtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_qtd {
      label: "LY Avg Net Sales After Sold (per script) - QTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's QTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_qtd}/NULLIF(ABS(${count_after_sold_ly_qtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_qtd_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - QTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_qtd} - ${avg_net_sales_after_sold_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_qtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_qtd_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - QTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_after_sold_ty_qtd} - ${avg_net_sales_after_sold_ly_qtd}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_ytd {
      label: "Avg Net Sales After Sold (per script) - YTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for YTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_ytd}/NULLIF(ABS(${count_after_sold_ty_ytd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_ytd {
      label: "LY Avg Net Sales After Sold (per script) - YTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's YTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_ytd}/NULLIF(ABS(${count_after_sold_ly_ytd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ytd_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - YTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_ytd} - ${avg_net_sales_after_sold_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_ytd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_ytd_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - YTD"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_after_sold_ty_ytd} - ${avg_net_sales_after_sold_ly_ytd}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_rolling_13_week {
      label: "Avg Net Sales After Sold (per script) - ROLLING 13 WEEK"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for ROLLING 13 WEEK based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_rolling_13_week}/NULLIF(ABS(${count_after_sold_ty_rolling_13_week}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_rolling_13_week {
      label: "LY Avg Net Sales After Sold (per script) - ROLLING 13 WEEK"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's ROLLING 13 WEEK based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_rolling_13_week}/NULLIF(ABS(${count_after_sold_ly_rolling_13_week}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_rolling_13_week_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - ROLLING 13 WEEK"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_rolling_13_week} - ${avg_net_sales_after_sold_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_rolling_13_week_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - ROLLING 13 WEEK"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_after_sold_ty_rolling_13_week} - ${avg_net_sales_after_sold_ly_rolling_13_week}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ty_ttm {
      label: "Avg Net Sales After Sold (per script) - TTM"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for TTM based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ty_ttm}/NULLIF(ABS(${count_after_sold_ty_ttm}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ly_ttm {
      label: "LY Avg Net Sales After Sold (per script) - TTM"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts for Last Year's TTM based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_after_sold_ly_ttm}/NULLIF(ABS(${count_after_sold_ly_ttm}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_after_sold_ttm_variance {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance % - TTM"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold/Total no. of scripts in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_ttm} - ${avg_net_sales_after_sold_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_after_sold_ly_ttm},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    # [ERXLPS-1037] - added TY/LY variance dollar measure
    measure: avg_net_sales_after_sold_ttm_variance_dollar {
      label: "TY/LY Avg Net Sales After Sold (per script) Variance $ - TTM"
      group_label: "Average Net Sales After Sold (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription. Calculation Used: Net Sales of the Prescription After Sold in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${avg_net_sales_after_sold_ty_ttm} - ${avg_net_sales_after_sold_ly_ttm}  ;;
      value_format: "$#,##0.00;$#,##0.00"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXDWPS-5132]
    measure: net_sales_per_unit {
      label: "Net Sales (per unit of fill qty)"
      description: "Net Sales of prescription per unit of fill quantity. This does not account for transactions with partial fills. Calculation Used: Net Sales/Prescription Fill Quantity"
      group_label: "Net Sales"
      type:  number
      sql: COALESCE(${sum_net_sales}/NULLIF(ABS(${sum_sales_rx_tx_fill_quantity}),0) ,0) ;;
      value_format: "$#,##0.0000;($#,##0.0000)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: net_sales_per_unit_ly {
      label: "LY Net Sales (per unit of fill qty)"
      description: "Net Sales of prescription per unit of fill quantity, for the last year. This does not account for transactions with partial fills. Calculation Used: LY Net Sales/LY Prescription Fill Quantity"
      group_label: "Net Sales"
      type:  number
      sql: COALESCE(${sum_net_sales_ly}/NULLIF(ABS(${sum_sales_rx_tx_fill_quantity_ly}),0) ,0) ;;
      value_format: "$#,##0.0000;($#,##0.0000)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                     {% else %}
                       <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    #[ERXDWPS-5427] - New TY/LY measures added for Net Sales (per unit of fill qty).
    measure: net_sales_per_unit_variance {
      label: "TY/LY Net Sales (per unit of fill qty) Variance"
      group_label: "Net Sales"
      description: "Increase/Decrease of Net Sales of prescription per unit of fill quantity, compared to the last year. Calculation Used: ( Net Sales (per unit of fill qty) - LY Net Sales (per unit of fill qty) )."
      type: number
      sql: ${net_sales_per_unit} - ${net_sales_per_unit_ly} ;;
      value_format: "$#,##0.0000;($#,##0.0000)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: net_sales_per_unit_variance_pct {
      label: "TY/LY Net Sales (per unit of fill qty) Variance %"
      group_label: "Net Sales"
      description: "Percentage Increase/Decrease of Net Sales of prescription per unit of fill quantity, compared to the last year. Variance % is calculated based on the actual values (before truncated to 4 decimals) of the measures mentioned in Calculation. Calculation Used: ( Net Sales (per unit of fill qty) - LY Net Sales (per unit of fill qty) )/LY Net Sales (per unit of fill qty)."
      type: number
      sql: (${net_sales_per_unit} - ${net_sales_per_unit_ly})/NULLIF(ABS(${net_sales_per_unit_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1433]
    dimension: net_gross_margin {
      label: "Net Margin $"
      hidden:  yes #used in templated filter
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost"
      type: number
      sql: ${net_sales} -  ${acquisition_cost} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1433]
    filter: net_gross_margin_filter {
      label: "Net Margin $ \"Filter Only\""
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost"
      type: number
      sql: {% condition net_gross_margin_filter %} ${net_gross_margin} {% endcondition %} ;;
    }

    measure: sum_net_gross_margin {
      label: "Net Margin $"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_gross_margin} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6417]
    measure: sum_cash_net_gross_margin {
      label: "Cash Net Margin $"
      group_label: "Net Margin $"
      description: "Cash Net Margin of prescription, based on Net Cash Sales. Calculation Used: Net Cash Sales - Acquisition Cost."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${net_gross_margin} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6417]
    measure: sum_tp_net_gross_margin {
      label: "T/P Net Margin $"
      group_label: "Net Margin $"
      description: "T/P Net Margin of prescription, based on Net T/P Sales. Calculation Used: Net T/P Sales - Acquisition Cost."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${net_gross_margin} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly {
      label: "LY Net Margin $"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6417]
    measure: sum_cash_net_gross_margin_ly {
      label: "LY Cash Net Margin $"
      group_label: "Net Margin $"
      description: "Cash Net Margin of prescription, based on Net Cash Sales for Last Year. Calculation Used: LY Net Cash Sales - LY Acquisition Cost."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${net_gross_margin} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6417]
    measure: sum_tp_net_gross_margin_ly {
      label: "LY T/P Net Margin $"
      group_label: "Net Margin $"
      description: "T/P Net Margin of prescription, based on Net T/P Sales for Last Year. Calculation Used: LY Net T/P Sales - LY Acquisition Cost."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${net_gross_margin} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1198]
    measure: sum_net_gross_margin_variance_dollar {
      label: "TY/LY Net Margin $ Variance"
      group_label: "Net Margin $"
      description: "Dollar Increase/Decrease of Total Net Margin of prescription. Calculation Used: Total Net Margin of Prescription compared to the last year"
      type: number
      sql: ${sum_net_gross_margin} - ${sum_net_gross_margin_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_variance {
      label: "TY/LY Net Margin $ Variance %"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease of Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost compared to the last year"
      type: number
      sql: CAST((${sum_net_gross_margin} - ${sum_net_gross_margin_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_gross_margin_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6417]
    measure: sum_cash_net_gross_margin_variance_dollar {
      label: "TY/LY Cash Net Margin $ Variance"
      group_label: "Net Margin $"
      description: "Dollar Increase/Decrease of Total Cash Net Margin of prescription, based on Net Cash Sales. Calculation Used: Cash Net Margin $ - LY Cash Net Margin $."
      type: number
      sql: ${sum_cash_net_gross_margin} - ${sum_cash_net_gross_margin_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6417]
    measure: sum_cash_net_gross_margin_variance {
      label: "TY/LY Cash Net Margin $ Variance %"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease of Cash Net Margin of prescription, based on Net Cash Sales. Calculation Used: Calculation Used: (Cash Net Margin $ - LY Cash Net Margin $)/ LY Cash Net Margin $."
      type: number
      sql: CAST((${sum_cash_net_gross_margin} - ${sum_cash_net_gross_margin_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_cash_net_gross_margin_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6417]
    measure: sum_tp_net_gross_margin_variance_dollar {
      label: "TY/LY T/P Net Margin $ Variance"
      group_label: "Net Margin $"
      description: "Dollar Increase/Decrease of Total Net T/P Margin of prescription, based on Net T/P Sales. Calculation Used: T/P Net Margin $ - LY T/P Net Margin $."
      type: number
      sql: ${sum_tp_net_gross_margin} - ${sum_tp_net_gross_margin_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6417]
    measure: sum_tp_net_gross_margin_variance {
      label: "TY/LY T/P Net Margin $ Variance %"
      group_label: "Net Margin $"
      description: " Percentage Increase/Decrease of Net T/P Margin of prescription, based on Net T/P Sales. Calculation Used: (T/P Net Margin $ - LY T/P Net Margin $) / LY TP Net Margin $."
      type: number
      sql: CAST((${sum_tp_net_gross_margin} - ${sum_tp_net_gross_margin_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_tp_net_gross_margin_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_wk {
      label: "Net Margin $ - Complete Week"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for complete Week"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_wk {
      label: "LY Net Margin $ - Complete Week"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's complete week based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_wk_variance {
      label: "TY/LY Net Margin $ Variance % - Complete Week"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in complete week compared to the last year"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_wk} - ${sum_net_gross_margin_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_wtd {
      label: "Net Margin $ - WTD"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for WTD"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_wtd {
      label: "LY Net Margin $ - WTD"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's WTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_wtd_variance {
      label: "TY/LY Net Margin $ Variance % - WTD"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in WTD compared to the last year"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_wtd} - ${sum_net_gross_margin_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_mnth {
      label: "Net Margin $ - Complete Month"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_mnth {
      label: "LY Net Margin $ - Complete Month"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_mnth_variance {
      label: "TY/LY Net Margin $ Variance % - Complete Month"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in complete month compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_mnth} - ${sum_net_gross_margin_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_mtd {
      label: "Net Margin $ - MTD"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_mtd {
      label: "LY Net Margin $- MTD"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_mtd_variance {
      label: "TY/LY Net Margin $ Variance % - MTD"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in MTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_mtd} - ${sum_net_gross_margin_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_qtr {
      label: "Net Margin $ - Complete Quarter"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_qtr {
      label: "LY Net Margin $ - Complete Quarter"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_qtr_variance {
      label: "TY/LY Net Margin $ Variance % - Complete Quarter"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in complete quarter compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_qtr} - ${sum_net_gross_margin_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_qtd {
      label: "Net Margin $ - QTD"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_qtd {
      label: "LY Net Margin $ - QTD"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_qtd_variance {
      label: "TY/LY Net Margin $ Variance % - QTD"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in QTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_qtd} - ${sum_net_gross_margin_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_ytd {
      label: "Net Margin $ - YTD"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_ytd {
      label: "LY Net Margin $ - YTD"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ytd_variance {
      label: "TY/LY Net Margin $ Variance % - YTD"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in YTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_ytd} - ${sum_net_gross_margin_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_rolling_13_week {
      label: "Net Margin $ - ROLLING 13 WEEK"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_rolling_13_week {
      label: "LY Net Margin $ - ROLLING 13 WEEK"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_rolling_13_week_variance {
      label: "TY/LY Net Margin $ Variance % - ROLLING 13 WEEK"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease of Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in ROLLING 13 WEEK compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_rolling_13_week} - ${sum_net_gross_margin_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ty_ttm {
      label: "Net Margin $ - TTM"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ly_ttm {
      label: "LY Net Margin $ - TTM"
      group_label: "Net Margin $"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost for Last Year's TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_ttm_variance {
      label: "TY/LY Net Margin $ Variance % - TTM"
      group_label: "Net Margin $"
      description: "Percentage Increase/Decrease of Net Margin of prescription, based on Net Sales. Calculation Used: Net Sales of the Prescription - Acquisition Cost in TTM compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_ttm} - ${sum_net_gross_margin_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6290] - Avg Net Margin measures added.
    measure: avg_net_gross_margin {
      label: "Avg Net Margin $"
      group_label: "Average Net Margin"
      description: "Average Net Margin of prescription, based on Net Sales. Calculation Used: Net Margin/Total no. of scripts."
      type: number
      sql: COALESCE(${sum_net_gross_margin}/NULLIF(${count},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
      html: {% if value < 0 %}
             <font color="red">{{ rendered_value }}
             {% else %}
             <font color="grey">{{ rendered_value }}
             {% endif %}
             ;;
    }

    measure: avg_net_gross_margin_ly {
      label: "LY Avg Net Margin $"
      group_label: "Average Net Margin"
      description: "Net Margin of prescription, based on Net Sales. Calculation Used: Net Margin/Total no. of scripts for Last Year based on the period selected"
      type: number
      sql: COALESCE(${sum_net_gross_margin_ly}/NULLIF(${count_ly},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
      html: {% if value < 0 %}
           <font color="red">{{ rendered_value }}
           {% else %}
           <font color="grey">{{ rendered_value }}
           {% endif %}
           ;;
    }

    measure: avg_net_gross_margin_variance_dollar {
      label: "TY/LY Avg Net Margin $ Variance $"
      group_label: "Average Net Margin"
      description: "Dollar Increase/Decrease of Total Net Margin of prescription. Calculation Used: (Avg Net Margin - LY Avg Net Margin)."
      type: number
      sql: ${avg_net_gross_margin} - ${avg_net_gross_margin_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
      html: {% if value < 0 %}
           <font color="red">{{ rendered_value }}
           {% else %}
           <font color="grey">{{ rendered_value }}
           {% endif %}
           ;;
    }

    measure: avg_net_gross_margin_variance {
      label: "TY/LY Avg Net Margin $ Variance %"
      group_label: "Average Net Margin"
      description: "Percentage Increase/Decrease of Net Margin of prescription. Calculation Used: (Avg Net Margin - LY Avg Net Margin)/LY Avg Net Margin."
      type: number
      sql: CAST((${avg_net_gross_margin} - ${avg_net_gross_margin_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_net_gross_margin_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
      html: {% if value < 0 %}
           <font color="red">{{ rendered_value }}
           {% else %}
           <font color="grey">{{ rendered_value }}
           {% endif %}
           ;;
    }

    measure: sum_net_gross_margin_after_sold {
      label: "RNAC $"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly {
      label: "LY RNAC $"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_variance {
      label: "TY/LY RNAC $ Variance %"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost compared to the last year"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold} - ${sum_net_gross_margin_after_sold_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_gross_margin_after_sold_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_wk {
      label: "RNAC $ - Complete Week"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for complete Week"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_wk {
      label: "LY RNAC $ - Complete Week"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's complete week based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_wk_variance {
      label: "TY/LY RNAC $ Variance % - Complete Week"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in complete week compared to the last year"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_wk} - ${sum_net_gross_margin_after_sold_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_wtd {
      label: "RNAC $ - WTD"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for WTD"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_wtd {
      label: "LY RNAC $ - WTD"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's WTD based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ( ${net_sales_after_sold} - ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_wtd_variance {
      label: "TY/LY RNAC $ Variance % - WTD"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in WTD compared to the last year"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_wtd} - ${sum_net_gross_margin_after_sold_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_mnth {
      label: "RNAC $ - Complete Month"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for complete month based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_mnth {
      label: "LY RNAC $ - Complete Month"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's complete month based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_mnth_variance {
      label: "TY/LY RNAC $ Variance % - Complete Month"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in complete month compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_mnth} - ${sum_net_gross_margin_after_sold_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_mtd {
      label: "RNAC $ - MTD"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for MTD based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_mtd {
      label: "LY RNAC $ - MTD"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's MTD based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_mtd_variance {
      label: "TY/LY RNAC $ Variance % - MTD"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in MTD compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_mtd} - ${sum_net_gross_margin_after_sold_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_qtr {
      label: "RNAC $ - Complete Quarter"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for complete quarter based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_qtr {
      label: "LY RNAC $ - Complete Quarter"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's complete quarter based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_qtr_variance {
      label: "TY/LY RNAC $ Variance % - Complete Quarter"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in complete quarter compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_qtr} - ${sum_net_gross_margin_after_sold_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_qtd {
      label: "RNAC $ - QTD"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for QTD based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_qtd {
      label: "LY RNAC $ - QTD"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's QTD based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_qtd_variance {
      label: "TY/LY RNAC $ Variance % - QTD"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in QTD compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_qtd} - ${sum_net_gross_margin_after_sold_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_ytd {
      label: "RNAC $ - YTD"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for YTD based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_ytd {
      label: "LY RNAC $ - YTD"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's YTD based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ytd_variance {
      label: "TY/LY RNAC $ Variance % - YTD"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in YTD compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_ytd} - ${sum_net_gross_margin_after_sold_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_rolling_13_week {
      label: "RNAC $ - ROLLING 13 WEEK"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for ROLLING 13 WEEK based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_rolling_13_week {
      label: "LY RNAC $ - ROLLING 13 WEEK"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's ROLLING 13 WEEK based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_rolling_13_week_variance {
      label: "TY/LY RNAC $ Variance % - ROLLING 13 WEEK"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease of Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in ROLLING 13 WEEK compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_rolling_13_week} - ${sum_net_gross_margin_after_sold_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ty_ttm {
      label: "RNAC $ - TTM"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for TTM based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ly_ttm {
      label: "LY RNAC $ - TTM"
      group_label: "RNAC $"
      description: "Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales After Sold - Acquisition Cost After Sold for Last Year's TTM based on the period selected"
      type: sum
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${acquisition_cost_after_sold} ) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_ttm_variance {
      label: "TY/LY RNAC $ Variance % - TTM"
      group_label: "RNAC $"
      description: "Percentage Increase/Decrease of Net Margin of prescription, based on Net Sales After Sold. Calculation Used: Net Sales of the Prescription - Acquisition Cost in TTM compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_ttm} - ${sum_net_gross_margin_after_sold_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6290] - modified measure name from avg_net_gross_margin to avg_net_gross_margin_after_sold.
    measure: avg_net_gross_margin_after_sold {
      label: "Avg Net Margin After Sold"
      group_label: "Other Measures"
      hidden: yes
      description: "Net Margin of prescription, based on Net Sales after sold. Calculation Used: (Net Sales After Sold - Acquisition Cost After Sold)/Total no. of scripts"
      type: number
      sql: ${sum_net_gross_margin_after_sold}/NULLIF(${count},0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_net_gross_margin_pct {
      label: "Net Margin %"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription )"
      type: number
      sql: CAST((${sum_net_sales} -  ${sum_acquisition_cost_ty}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly {
      label: "LY Net Margin %"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly} -  ${sum_acquisition_cost_ly}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_cash_net_gross_margin_pct {
      label: "Cash Net Margin %"
      group_label: "Net Margin %"
      description: "Percentage of the Cash Net Margin $ in comparison to the Net Margin $. Calculation Used: Cash Net Margin $/Net Margin $."
      type: number
      sql: CAST((${sum_cash_net_gross_margin}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_cash_net_gross_margin_pct_ly {
      label: "LY Cash Net Margin %"
      group_label: "Net Margin %"
      description: "Percentage of the Cash Net Margin $ in comparison to the Net Margin $, for Last Year. Calculation Used: LY Cash Net Margin $/LY Net Margin."
      type: number
      sql: CAST((${sum_cash_net_gross_margin_ly}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_tp_net_gross_margin_pct {
      label: "T/P Net Margin %"
      group_label: "Net Margin %"
      description: "Percentage of the T/P Net Margin $ in comparison to the Net Margin $. Calculation Used: T/P Net Margin $/Net Margin $."
      type: number
      sql: CAST((${sum_tp_net_gross_margin}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_tp_net_gross_margin_pct_ly {
      label: "LY T/P Net Margin %"
      group_label: "Net Margin %"
      description: "Percentage of the T/P Net Margin $ in comparison to the Net Margin $, for Last Year. Calculation Used: LY T/P Net Margin $/LY Net Margin."
      type: number
      sql: CAST((${sum_tp_net_gross_margin_ly}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1198]
    measure: sum_net_gross_margin_pct_variance_number {
      label: "TY/LY Net Margin % Variance"
      group_label: "Net Margin %"
      description: "Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used:( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) compared to the last year"
      type: number
      sql: ${sum_net_gross_margin_pct} - ${sum_net_gross_margin_pct_ly};;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_variance {
      label: "TY/LY Net Margin % Variance %"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used:( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) compared to the last year"
      type: number
      sql: CAST((${sum_net_gross_margin_pct} - ${sum_net_gross_margin_pct_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_gross_margin_pct_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_wk {
      label: "Net Margin % - Complete Week"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for complete Week based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_wk} -  ${sum_acquisition_cost_ty_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_wk {
      label: "LY Net Margin % - Complete Week"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's complete week based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_wk} -  ${sum_acquisition_cost_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_wk_variance {
      label: "TY/LY Net Margin % Variance % - Complete Week"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) compared to the last year's complete week"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_wk} - ${sum_net_gross_margin_pct_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_wtd {
      label: "Net Margin % - WTD"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription )"
      type: number
      sql: CAST((${sum_net_sales_ty_wtd} -  ${sum_acquisition_cost_ty_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_wtd {
      label: "LY Net Margin % - WTD"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's WTD based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_wtd} -  ${sum_acquisition_cost_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_wtd_variance {
      label: "TY/LY Net Margin % Variance % - WTD"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in WTD compared to the last year"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_wtd} - ${sum_net_gross_margin_pct_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_mnth {
      label: "Net Margin % - Complete Month"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for complete month based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_mnth} -  ${sum_acquisition_cost_ty_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_mnth {
      label: "LY Net Margin % - Complete Month"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's complete month based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_mnth} -  ${sum_acquisition_cost_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_mnth_variance {
      label: "TY/LY Net Margin % Variance % - Complete Month"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in complete month compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_mnth} - ${sum_net_gross_margin_pct_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_mtd {
      label: "Net Margin % - MTD"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for MTD based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_mtd} -  ${sum_acquisition_cost_ty_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_mtd {
      label: "LY Net Margin % - MTD"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's MTD based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_mtd} -  ${sum_acquisition_cost_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_mtd_variance {
      label: "TY/LY Net Margin % Variance % - MTD"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in MTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_mtd} - ${sum_net_gross_margin_pct_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_qtr {
      label: "Net Margin % - Complete Quarter"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for complete quarter based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_qtr} -  ${sum_acquisition_cost_ty_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_qtr {
      label: "LY Net Margin % - Complete Quarter"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's complete quarter based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_qtr} -  ${sum_acquisition_cost_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_qtr_variance {
      label: "TY/LY Net Margin % Variance % - Complete Quarter"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in complete quarter compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_qtr} - ${sum_net_gross_margin_pct_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_qtd {
      label: "Net Margin % - QTD"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for QTD based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_qtd} -  ${sum_acquisition_cost_ty_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_qtd {
      label: "LY Net Margin % - QTD"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's QTD based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_qtd} -  ${sum_acquisition_cost_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_qtd_variance {
      label: "TY/LY Net Margin % Variance % - QTD"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in QTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_qtd} - ${sum_net_gross_margin_pct_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_ytd {
      label: "Net Margin % - YTD"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for YTD based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_ytd} -  ${sum_acquisition_cost_ty_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_ytd {
      label: "LY Net Margin % - YTD"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's YTD based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_ytd} -  ${sum_acquisition_cost_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ytd_variance {
      label: "TY/LY Net Margin % Variance % - YTD"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in YTD compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_ytd} - ${sum_net_gross_margin_pct_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_rolling_13_week {
      label: "Net Margin % - ROLLING 13 WEEK"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for ROLLING 13 WEEK based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_rolling_13_week} -  ${sum_acquisition_cost_ty_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_rolling_13_week {
      label: "LY Net Margin % - ROLLING 13 WEEK"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's ROLLING 13 WEEK based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_rolling_13_week} -  ${sum_acquisition_cost_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_rolling_13_week_variance {
      label: "TY/LY Net Margin % Variance % - ROLLING 13 WEEK"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in ROLLING 13 WEEK compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_rolling_13_week} - ${sum_net_gross_margin_pct_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ty_ttm {
      label: "Net Margin % - TTM"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for TTM based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ty_ttm} -  ${sum_acquisition_cost_ty_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ly_ttm {
      label: "LY Net Margin % - TTM"
      group_label: "Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's TTM based on the period selected"
      type: number
      sql: CAST((${sum_net_sales_ly_ttm} -  ${sum_acquisition_cost_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_pct_ttm_variance {
      label: "TY/LY Net Margin % Variance % - TTM"
      group_label: "Net Margin %"
      description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in TTM compared to the last year based on the period selected"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_ttm} - ${sum_net_gross_margin_pct_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty {
      label: "Acquisition Cost After Sold"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly {
      label: "LY Acquisition Cost After Sold"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_wk {
      label: "Acquisition Cost After Sold - Complete Week"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the complete week, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_wk {
      label: "LY Acquisition Cost After Sold - Complete Week"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the complete week, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_wtd {
      label: "Acquisition Cost After Sold - WTD"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the week to date, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_wtd {
      label: "LY Acquisition Cost After Sold - WTD"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the week to date, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_mnth {
      label: "Acquisition Cost After Sold - Complete Month"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the complete month, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_mnth {
      label: "LY Acquisition Cost After Sold - Complete Month"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the complete month, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_mtd {
      label: "Acquisition Cost After Sold - MTD"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the month to date, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_mtd {
      label: "LY Acquisition Cost After Sold - MTD"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the month to date, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_qtr {
      label: "Acquisition Cost After Sold - Complete Quarter"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the complete quarter, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_qtr {
      label: "LY Acquisition Cost After Sold - Complete Quarter"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the complete quarter, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_qtd {
      label: "Acquisition Cost After Sold - QTD"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the quarter to date, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_qtd {
      label: "LY Acquisition Cost After Sold - QTD"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the quarter to date, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_ytd {
      label: "Acquisition Cost After Sold - YTD"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the year to date, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_ytd {
      label: "LY Acquisition Cost After Sold - YTD"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the year to date, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_rolling_13_week {
      label: "Acquisition Cost After Sold - ROLLING 13 WEEK"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for a rolling 13 weeks, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_rolling_13_week {
      label: "LY Acquisition Cost After Sold - ROLLING 13 WEEK"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for a rolling 13 weeks, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ty_ttm {
      label: "Acquisition Cost After Sold - TTM"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the Trailing Twelve Months, for this year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_acquisition_cost_after_sold_ly_ttm {
      label: "LY Acquisition Cost After Sold - TTM"
      group_label: "Acquisition Cost After Sold"
      description: "Represents the total acquisition cost after sold for the Trailing Twelve Months, for last year, of the filled drug used on the prescription transaction record"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${acquisition_cost_after_sold} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct {
      label: "RNAC %"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription )"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold} -  ${sum_acquisition_cost_after_sold_ty}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly {
      label: "LY RNAC %"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly} -  ${sum_acquisition_cost_after_sold_ly}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_variance {
      label: "TY/LY RNAC % Variance %"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) compared to the last year"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct} - ${sum_net_gross_margin_after_sold_pct_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_gross_margin_after_sold_pct_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_wk {
      label: "RNAC % - Complete Week"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for complete Week based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_wk} -  ${sum_acquisition_cost_after_sold_ty_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_wk {
      label: "LY RNAC % - Complete Week"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's complete week based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_wk} -  ${sum_acquisition_cost_after_sold_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_wk_variance {
      label: "TY/LY RNAC % Variance % - Complete Week"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) compared to the last year's complete week "
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_wk} - ${sum_net_gross_margin_after_sold_pct_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_wtd {
      label: "RNAC % - WTD"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for WTD based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_wtd} -  ${sum_acquisition_cost_after_sold_ty_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_wtd {
      label: "LY RNAC % - WTD"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's WTD based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_wtd} -  ${sum_acquisition_cost_after_sold_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_wtd_variance {
      label: "TY/LY RNAC % Variance % - WTD"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in WTD compared to the last year"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_wtd} - ${sum_net_gross_margin_after_sold_pct_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_mnth {
      label: "RNAC % - Complete Month"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for complete month based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_mnth} -  ${sum_acquisition_cost_after_sold_ty_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_mnth {
      label: "LY RNAC % - Complete Month"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's complete month based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_mnth} -  ${sum_acquisition_cost_after_sold_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_mnth_variance {
      label: "TY/LY RNAC % Variance % - Complete Month"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in complete month compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_mnth} - ${sum_net_gross_margin_after_sold_pct_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_mtd {
      label: "RNAC % - MTD"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for MTD based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_mtd} -  ${sum_acquisition_cost_after_sold_ty_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_mtd {
      label: "LY RNAC % - MTD"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's MTD based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_mtd} -  ${sum_acquisition_cost_after_sold_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_mtd_variance {
      label: "TY/LY RNAC % Variance % - MTD"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in MTD compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_mtd} - ${sum_net_gross_margin_after_sold_pct_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_qtr {
      label: "RNAC % - Complete Quarter"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for complete quarter based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_qtr} -  ${sum_acquisition_cost_after_sold_ty_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_qtr {
      label: "LY RNAC % - Complete Quarter"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's complete quarter based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_qtr} -  ${sum_acquisition_cost_after_sold_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_qtr_variance {
      label: "TY/LY RNAC % Variance % - Complete Quarter"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in complete quarter compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_qtr} - ${sum_net_gross_margin_after_sold_pct_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_qtd {
      label: "RNAC % - QTD"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for QTD based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_qtd} -  ${sum_acquisition_cost_after_sold_ty_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_qtd {
      label: "LY RNAC % - QTD"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's QTD based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_qtd} -  ${sum_acquisition_cost_after_sold_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_qtd_variance {
      label: "TY/LY RNAC % Variance % - QTD"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in QTD compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_qtd} - ${sum_net_gross_margin_after_sold_pct_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_ytd {
      label: "RNAC % - YTD"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for YTD based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_ytd} -  ${sum_acquisition_cost_after_sold_ty_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_ytd {
      label: "LY RNAC % - YTD"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's YTD based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_ytd} -  ${sum_acquisition_cost_after_sold_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ytd_variance {
      label: "TY/LY RNAC % Variance % - YTD"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in YTD compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_ytd} - ${sum_net_gross_margin_after_sold_pct_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_rolling_13_week {
      label: "RNAC % - ROLLING 13 WEEK"
      group_label: "RNAC %"
      description: "Net % MArgin of prescription, based on Net Sales after sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription )  for ROLLING 13 WEEK based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_rolling_13_week} -  ${sum_acquisition_cost_after_sold_ty_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_rolling_13_week {
      label: "LY RNAC % - ROLLING 13 WEEK"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's ROLLING 13 WEEK based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_rolling_13_week} -  ${sum_acquisition_cost_after_sold_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_rolling_13_week_variance {
      label: "TY/LY RNAC % Variance % - ROLLING 13 WEEK"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in ROLLING 13 WEEK compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_rolling_13_week} - ${sum_net_gross_margin_after_sold_pct_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ty_ttm {
      label: "RNAC % - TTM"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for TTM based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ty_ttm} -  ${sum_acquisition_cost_after_sold_ty_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ly_ttm {
      label: "LY RNAC % - TTM"
      group_label: "RNAC %"
      description: "Net % Margin of prescription, based on Net Sales After Sold. Calculation Used: ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) for Last Year's TTM based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_sales_after_sold_ly_ttm} -  ${sum_acquisition_cost_after_sold_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_after_sold_pct_ttm_variance {
      label: "TY/LY RNAC % Variance % - TTM"
      group_label: "RNAC %"
      description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales After Sold. Calculation Used:  ( (Net Sales of the Prescription - Acquisition Cost)/Net Sales of the Prescription ) in TTM compared to the last year based on the period selected"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_ttm} - ${sum_net_gross_margin_after_sold_pct_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_write_off {
      label: "Write Off Amount"
      group_label: "Claim"
      description: "Difference between the submitted amount and the received balance plus the patient copay"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY'
                     THEN ${sales_tx_tp.write_off}
                 END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_write_off_ly {
      label: "LY Write Off Amount"
      group_label: "Claim"
      description: "Difference between the submitted amount and the received balance plus the patient copay, for last year"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY'
                     THEN ${sales_tx_tp.write_off}
                 END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_due {
      label: "Balance Due from TP"
      group_label: "Claim"
      description: "Amount owed by a third party"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY'
                     THEN ${sales_tx_tp.net_due}
                 END  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_due_ly {
      label: "LY Balance Due from TP"
      group_label: "Claim"
      description: "Amount owed by a third party, for last year"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY'
                     THEN ${sales_tx_tp.net_due}
                 END  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_final_copay {
      label: "Final Copay"
      group_label: "Claim"
      description: "Final transaction third party patient copay. If the copay is overridden, this is the new amount as stated by the user. The third party copay is then populated"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${final_copay} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_final_copay_ly {
      label: "LY Final Copay"
      group_label: "Claim"
      description: "Final transaction third party patient copay, for the last year. If the copay is overridden, this is the new amount as stated by the user. The third party copay is then populated"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY' THEN ${final_copay} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_final_copay_after_sold {
      label: "Final Copay After Sold"
      group_label: "Claim"
      description: "Final transaction third party patient copay. If the copay is overridden, this is the new amount as stated by the user. The third party copay is then populated"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${after_sold_flg} = 'Y' THEN ${final_copay} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_final_copay_after_sold_ly {
      label: "LY Final Copay After Sold"
      group_label: "Claim"
      description: "Final transaction third party patient copay, for last year. If the copay is overridden, this is the new amount as stated by the user. The third party copay is then populated"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${after_sold_flg} = 'Y' THEN ${final_copay} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-876] - Modified label name from Copay Overridden Amount to Copay Override Amount
    measure: copay_override_amount {
      label: "Copay Override Amount"
      group_label: "Claim"
      description: "Copay Override Amount. Calculation Used: Final Copay - Overridden Copay Amount of TP"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') THEN ${sales_tx_tp.copay_override_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-876] - Modified label name from LY Copay Overridden Amount to LY Copay Override Amount
    measure: copay_override_amount_ly {
      label: "LY Copay Override Amount"
      group_label: "Claim"
      description: "Copay Override Amount, for last year. Calculation Used: Final Copay - Overridden Copay Amount of TP"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') THEN ${sales_tx_tp.copay_override_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-876] - New measure Copay Override Amount Variance and Copay Override Amount Variance % added
    measure: copay_override_amount_variance {
      label: "TY/LY Copay Override Amount Variance"
      group_label: "Claim"
      description: "The difference of copay override amount, compared to the last year"
      type: number
      sql: (${copay_override_amount} - ${copay_override_amount_ly}) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: copay_override_amount_variance_pcnt {
      label: "TY/LY Copay Override Amount Variance %"
      group_label: "Claim"
      description: "Percentage Increase/Decrease of copay override amount, compared to the last year"
      type: number
      sql: CAST((${copay_override_amount} - ${copay_override_amount_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${copay_override_amount_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-876] - Copay Overridden Script measures
    measure: count_copay_overridden_scripts{
      label: "Copay Overridden Scripts"
      group_label: "Claim"
      description: "Total script (Copay Overridden) volume without any adjustment"
      type: sum
      sql:  CASE WHEN ${report_calendar_global.type} = 'TY' AND ${sales_tx_tp.copay_override_flag} = 'Yes' THEN ${count_reference} END;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_copay_overridden_scripts_ly{
      label: "LY Copay Overridden Scripts"
      group_label: "Claim"
      description: "Total script (Copay Overridden) volume without any adjustment, for last year"
      type: sum
      sql:  CASE WHEN ${report_calendar_global.type} = 'LY' AND ${sales_tx_tp.copay_override_flag} = 'Yes' THEN ${count_reference} END;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_copay_overridden_scripts_variance {
      label: "TY/LY Copay Overridden Scripts Variance"
      group_label: "Claim"
      description: "The difference of total Copay Overridden Script volume, without any adjustment, compared to the last year"
      type: number
      sql: (${count_copay_overridden_scripts} - ${count_copay_overridden_scripts_ly}) ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_copay_overridden_scripts_variance_pcnt {
      label: "TY/LY Copay Overridden Scripts Variance %"
      group_label: "Claim"
      description: "Percentage Increase/Decrease of total Copay Overridden Script volume, without any adjustment, compared to the last year"
      type: number
      sql: CAST((${count_copay_overridden_scripts} - ${count_copay_overridden_scripts_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_copay_overridden_scripts_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-876] - copay_overridden_amount measures
    measure: copay_overridden_amount {
      label: "Copay Overridden Amount (PRIOR to Override)"
      group_label: "Claim"
      description: "Total original copay amount, which is populated if the user overrides the copay with a new amount"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${sales_tx_tp.copay_override_flag} = 'Yes' THEN ${sales_tx_tp.copay_overridden_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: copay_overridden_amount_ly {
      label: "LY Copay Overridden Amount (PRIOR to Override)"
      group_label: "Claim"
      description: "Total original copay amount, which is populated if the user overrides the copay with a new amount, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${sales_tx_tp.copay_override_flag} = 'Yes' THEN ${sales_tx_tp.copay_overridden_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: copay_overridden_amount_variance {
      label: "TY/LY Copay Overridden Amount Variance"
      group_label: "Claim"
      description: "The difference of copay overridden amount, compared to the last year"
      type: number
      sql: (${copay_overridden_amount} - ${copay_overridden_amount_ly}) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: copay_overridden_amount_variance_pcnt {
      label: "TY/LY Copay Overridden Amount Variance %"
      group_label: "Claim"
      description: "Percentage Increase/Decrease of copay overridden amount, compared to the last year"
      type: number
      sql: CAST((${copay_overridden_amount} - ${copay_overridden_amount_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${copay_override_amount_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    ## [ERXLPS-1028] Copay Overridden Scripts % of ALL scripts Measures , to keep consitent with other override measures
    measure: count_overridden_scripts_pcnt {
      label: "Copay Overridden Scripts %"
      group_label: "Claim"
      description: "The Copay Overridden Scripts percentage of ALL scripts"
      type: number
      sql: COALESCE(CAST((${count_copay_overridden_scripts}) AS DECIMAL(17,4))/NULLIF(${count},0), 0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_overridden_scripts_pcnt_ly {
      label: "LY Copay Overridden Scripts %"
      group_label: "Claim"
      description: "The Copay Overridden Scripts percentage of ALL scripts, for last year"
      type: number
      sql: COALESCE(CAST((${count_copay_overridden_scripts_ly}) AS DECIMAL(17,4))/NULLIF(${count_ly},0), 0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1028] - New Custom Copay Override Amount Measures that work with the "Custom Copay Override Filter (Carrier Code)"
    measure: custom_copay_override_amount {
      label: "Custom Copay Override Amount *"
      group_label: "Claim"
      description: "The amount of the override. Calculation Used: Final Copay - Overridden Copay Amount of TP (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND (CASE WHEN {% parameter custom_copay_override_filter %} = '' THEN 1 = 1 ELSE {% condition custom_copay_override_filter %} ${eps_plan.store_plan_carrier_code} {% endcondition %} END) THEN ${sales_tx_tp.copay_override_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_copay_override_amount_ly {
      label: "LY Custom Copay Override Amount *"
      group_label: "Claim"
      description: "The amount of the override, for last year. Calculation Used: Final Copay - Overridden Copay Amount of TP (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND (CASE WHEN {% parameter custom_copay_override_filter %} = '' THEN 1 = 1 ELSE {% condition custom_copay_override_filter %} ${eps_plan.store_plan_carrier_code} {% endcondition %} END) THEN ${sales_tx_tp.copay_override_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_copay_override_amount_variance {
      label: "TY/LY Custom Copay Override Amount Variance $ *"
      group_label: "Claim"
      description: "The difference of the amount of the override, compared to the last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: number
      sql: (${custom_copay_override_amount} - ${custom_copay_override_amount_ly}) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_copay_override_amount_variance_pcnt {
      label: "TY/LY Custom Copay Override Amount Variance % *"
      group_label: "Claim"
      description: "Percentage Increase/Decrease of the amount of the override, compared to the last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: number
      sql: CAST((${custom_copay_override_amount} - ${custom_copay_override_amount_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${custom_copay_override_amount_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1028] - New Custom Copay Overridden Scripts Measures that work with the "Custom Copay Override Filter (Carrier Code)"
    measure: custom_count_copay_overridden_scripts{
      label: "Custom Copay Overridden Scripts *"
      group_label: "Claim"
      description: "Total script (Copay Overridden) volume without any adjustment (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: sum
      sql:  CASE WHEN ${report_calendar_global.type} = 'TY' AND ${sales_tx_tp.copay_override_flag} = 'Yes' AND (CASE WHEN {% parameter custom_copay_override_filter %} = '' THEN 1 = 1 ELSE {% condition custom_copay_override_filter %} ${eps_plan.store_plan_carrier_code} {% endcondition %} END) THEN ${count_reference} END;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_count_copay_overridden_scripts_ly{
      label: "LY Custom Copay Overridden Scripts *"
      group_label: "Claim"
      description: "Total script (Copay Overridden) volume without any adjustment, for last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: sum
      sql:  CASE WHEN ${report_calendar_global.type} = 'LY' AND ${sales_tx_tp.copay_override_flag} = 'Yes' AND (CASE WHEN {% parameter custom_copay_override_filter %} = '' THEN 1 = 1 ELSE {% condition custom_copay_override_filter %} ${eps_plan.store_plan_carrier_code} {% endcondition %} END) THEN ${count_reference} END;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_count_copay_overridden_scripts_variance {
      label: "TY/LY Custom Copay Overridden Scripts Variance *"
      group_label: "Claim"
      description: "The difference of total Copay Overridden Script volume, without any adjustment, compared to the last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: number
      sql: (${custom_count_copay_overridden_scripts} - ${custom_count_copay_overridden_scripts_ly}) ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_count_copay_overridden_scripts_variance_pcnt {
      label: "TY/LY Custom Copay Overridden Scripts Variance % *"
      group_label: "Claim"
      description: "Percentage Increase/Decrease of total Copay Overridden Script volume, without any adjustment, compared to the last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: number
      sql: CAST((${custom_count_copay_overridden_scripts} - ${custom_count_copay_overridden_scripts_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${custom_count_copay_overridden_scripts_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1028] - New Custom Copay Overridden Amount Measures that work with the "Custom Copay Override Filter (Carrier Code)"
    measure: custom_copay_overridden_amount {
      label: "Custom Copay Overridden Amount (PRIOR to Override) *"
      group_label: "Claim"
      description: "The original copay amount before the copay override was performed (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${sales_tx_tp.copay_override_flag} = 'Yes' AND (CASE WHEN {% parameter custom_copay_override_filter %} = '' THEN 1 = 1 ELSE {% condition custom_copay_override_filter %} ${eps_plan.store_plan_carrier_code} {% endcondition %} END) THEN ${sales_tx_tp.copay_overridden_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_copay_overridden_amount_ly {
      label: "LY Custom Copay Overridden Amount (PRIOR to Override) *"
      group_label: "Claim"
      description: "The original copay amount before the copay override was performed, for last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${sales_tx_tp.copay_override_flag} = 'Yes' AND (CASE WHEN {% parameter custom_copay_override_filter %} = '' THEN 1 = 1 ELSE {% condition custom_copay_override_filter %} ${eps_plan.store_plan_carrier_code} {% endcondition %} END) THEN ${sales_tx_tp.copay_overridden_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_copay_overridden_amount_variance {
      label: "TY/LY Custom Copay Overridden Amount Variance $ *"
      group_label: "Claim"
      description: "The difference of the original copay amount before the copay override was performed, compared to the last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: number
      sql: (${custom_copay_overridden_amount} - ${custom_copay_overridden_amount_ly}) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_copay_overridden_amount_variance_pcnt {
      label: "TY/LY Custom Copay Overridden Amount Variance % *"
      group_label: "Claim"
      description: "Percentage Increase/Decrease of the original copay amount before the copay override was performed, compared to the last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: number
      sql: CAST((${custom_copay_overridden_amount} - ${custom_copay_overridden_amount_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${custom_copay_overridden_amount_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    ## [ERXLPS-1028] New Custom Copay Overridden Scripts % of ALL scripts Measures that work with the "Custom Copay Override Filter (Carrier Code)"
    measure: custom_count_overridden_scripts_pcnt {
      label: "Custom Copay Overridden Scripts % *"
      group_label: "Claim"
      description: "The Copay Overridden Scripts percentage of ALL scripts (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: number
      sql: COALESCE(CAST((${custom_count_copay_overridden_scripts}) AS DECIMAL(17,4))/NULLIF(${count},0), 0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: custom_count_overridden_scripts_pcnt_ly {
      label: "LY Custom Copay Overridden Scripts % *"
      group_label: "Claim"
      description: "The Copay Overridden Scripts percentage of ALL scripts, for last year (Carrier Code input from the Custom Copay filter determines what transactions are considered)"
      type: number
      sql: COALESCE(CAST((${custom_count_copay_overridden_scripts_ly}) AS DECIMAL(17,4))/NULLIF(${count_ly},0), 0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#################################################################################

    measure: count_after_sold {
      label: "Scripts After Sold"
      group_label: "Scripts"
      description: "Total script(after sold) volume without any adjustment"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly {
      label: "LY Scripts After Sold"
      group_label: "Scripts"
      description: "Total script(after sold) volume without any adjustment for Last Year based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count {
      label: "Scripts"
      group_label: "Scripts"
      description: "Total script volume without any adjustment"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly {
      label: "LY Scripts"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_variance {
      label: "TY/LY Scripts Variance %"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume without any adjustment compared to the last year"
      type: number
      sql: CAST((${count} - ${count_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-982] - New dimension added for TY/LY Scripts Variance
    measure: count_variance_number {
      label: "TY/LY Scripts Variance"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume without any adjustment compared to the last year"
      type: number
      sql: ${count} - ${count_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ty_wk {
      label: "Scripts - Complete Week"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for complete week"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_wk {
      label: "Scripts after sold - Complete Week"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for complete week"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_wk {
      label: "LY Scripts - Complete Week"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's complete week based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_wk {
      label: "LY Scripts after sold - Complete Week"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's complete week based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_wk_variance {
      label: "TY/LY Scripts Variance % - Complete Week"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in complete week without any adjustment compared to the last year"
      type: number
      sql: CAST((${count_ty_wk} - ${count_ly_wk}) AS DECIMAL(17,4))/NULLIF(${count_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_wk_variance_number {
      label: "TY/LY Scripts Variance - Complete Week"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in complete week without any adjustment compared to the last year"
      type: number
      sql: ${count_ty_wk} - ${count_ly_wk} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }
    measure: count_ty_wtd {
      label: "Scripts - WTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for WTD"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_wtd {
      label: "Scripts After Sold - WTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for WTD"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_wtd {
      label: "LY Scripts - WTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's WTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_wtd {
      label: "LY Scripts After Sold - WTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's WTD based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_wtd_variance {
      label: "TY/LY Scripts Variance % - WTD"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in WTD without any adjustment compared to the last year"
      type: number
      sql: CAST((${count_ty_wtd} - ${count_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${count_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_wtd_variance_number {
      label: "TY/LY Scripts Variance - WTD"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in WTD without any adjustment compared to the last year"
      type: number
      sql: ${count_ty_wtd} - ${count_ly_wtd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ty_mnth {
      label: "Scripts - Complete Month"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_mnth {
      label: "Scripts After Sold - Complete Month"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for complete month based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_mnth {
      label: "LY Scripts - Complete Month"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_mnth {
      label: "LY Scripts After Sold - Complete Month"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's complete month based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_mnth_variance {
      label: "TY/LY Scripts Variance % - Complete Month"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${count_ty_mnth} - ${count_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${count_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_mnth_variance_number {
      label: "TY/LY Scripts Variance - Complete Month"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in complete month without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${count_ty_mnth} - ${count_ly_mnth} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ty_mtd {
      label: "Scripts - MTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_mtd {
      label: "Scripts After Sold - MTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for MTD based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_mtd {
      label: "LY Scripts - MTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_mtd {
      label: "LY Scripts After Sold - MTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's MTD based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_mtd_variance {
      label: "TY/LY Scripts Variance % - MTD"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${count_ty_mtd} - ${count_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${count_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_mtd_variance_number {
      label: "TY/LY Scripts Variance - MTD"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in MTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${count_ty_mtd} - ${count_ly_mtd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ty_qtr {
      label: "Scripts - Complete Quarter"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_qtr {
      label: "Scripts After Sold - Complete Quarter"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for complete quarter based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_qtr {
      label: "LY Scripts - Complete Quarter"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_qtr {
      label: "LY Scripts After Sold - Complete Quarter"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's complete quarter based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_qtr_variance {
      label: "TY/LY Scripts Variance % - Complete Quarter"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${count_ty_qtr} - ${count_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${count_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_qtr_variance_number {
      label: "TY/LY Scripts Variance - Complete Quarter"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in complete quarter without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${count_ty_qtr} - ${count_ly_qtr} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ty_qtd {
      label: "Scripts - QTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_qtd {
      label: "Scripts After Sold - QTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for QTD based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_qtd {
      label: "LY Scripts - QTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_qtd {
      label: "LY Scripts After Sold - QTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's QTD based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_qtd_variance {
      label: "TY/LY Scripts Variance % - QTD"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${count_ty_qtd} - ${count_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${count_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_qtd_variance_number {
      label: "TY/LY Scripts Variance - QTD"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in QTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${count_ty_qtd} - ${count_ly_qtd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ty_ytd {
      label: "Scripts - YTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_ytd {
      label: "Scripts After Sold- YTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for YTD based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_ytd {
      label: "LY Scripts - YTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_ytd {
      label: "LY Scripts After Sold - YTD"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's YTD based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ytd_variance {
      label: "TY/LY Scripts Variance % - YTD"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${count_ty_ytd} - ${count_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${count_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_ytd_variance_number {
      label: "TY/LY Scripts Variance - YTD"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in YTD without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${count_ty_ytd} - ${count_ly_ytd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ty_rolling_13_week {
      label: "Scripts - ROLLING 13 WEEK"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_rolling_13_week {
      label: "Scripts After Sold- ROLLING 13 WEEK"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for ROLLING 13 WEEK based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_rolling_13_week {
      label: "LY Scripts - ROLLING 13 WEEK"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_rolling_13_week {
      label: "LY Scripts After Sold - ROLLING 13 WEEK"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's ROLLING 13 WEEK based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rolling_13_week_variance {
      label: "TY/LY Scripts Variance % - ROLLING 13 WEEK"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${count_ty_rolling_13_week} - ${count_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${count_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_rolling_13_week_variance_number {
      label: "TY/LY Scripts Variance - ROLLING 13 WEEK"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in ROLLING 13 WEEK without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${count_ty_rolling_13_week} - ${count_ly_rolling_13_week} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ty_ttm {
      label: "Scripts - TTM"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ty_ttm {
      label: "Scripts After Sold - TTM"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for TTM based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ly_ttm {
      label: "LY Scripts - TTM"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_after_sold_ly_ttm {
      label: "LY Scripts - TTM"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for Last Year's TTM based on the period selected"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${count_reference_after_sold} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_ttm_variance {
      label: "TY/LY Scripts Variance % - TTM"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of total script volume in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: CAST((${count_ty_ttm} - ${count_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${count_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1036] added TY/LY variance number measure
    measure: count_ttm_variance_number {
      label: "TY/LY Scripts Variance - TTM"
      group_label: "Scripts"
      description: "Number Increase/Decrease of total script volume in TTM without any adjustment compared to the last year based on the period selected"
      type: number
      sql: ${count_ty_ttm} - ${count_ly_ttm} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_avg_ty {
      label: "Avg Scripts (per Day)"
      group_label: "Average Scripts (per Day/Week/Month)"
      description: "Average script volume without any adjustment based on the no. of days in the reporting period"
      type: number
      sql: ${count}/NULLIF(${report_calendar_global.ty_number_of_days},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_after_sold_avg_ty {
      label: "Avg Scripts After Sold (per Day)"
      group_label: "Average Scripts (per Day/Week/Month)"
      description: "Average script volume without any adjustment based on the no. of days in the reporting period"
      type: number
      hidden: yes
      sql: ${count_after_sold}/NULLIF(${report_calendar_global.ty_number_of_days},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_avg_ly {
      label: "LY Avg Scripts (per Day)"
      group_label: "Average Scripts (per Day/Week/Month)"
      description: "Average last year script volume without any adjustment based on the no. of days in the reporting period"
      type: number
      sql: ${count_ly}/NULLIF(${report_calendar_global.ly_number_of_days},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_after_sold_avg_ly {
      label: "LY Avg Scripts After Sold (per Day)"
      group_label: "Average Scripts (per Day/Week/Month)"
      description: "Average last year script volume without any adjustment based on the no. of days in the reporting period"
      type: number
      hidden: yes
      sql: ${count_after_sold_ly}/NULLIF(${report_calendar_global.ly_number_of_days},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_adjusted {
      label: "Adjusted Scripts"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly {
      label: "LY Adjusted Scripts"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_variance {
      label: "TY/LY Adjusted Scripts Variance %"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year"
      type: number
      sql: CAST((${count_adjusted} - ${count_adjusted_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_adjusted_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_variance_number {
      label: "TY/LY Adjusted Scripts Variance"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year"
      type: number
      sql: ${count_adjusted} - ${count_adjusted_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ty_wk {
      label: "Adjusted Scripts - Complete Week"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for complete week"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_wk {
      label: "LY Adjusted Scripts - Complete Week"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's complete week based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_wk_variance {
      label: "TY/LY Adjusted Scripts Variance % - Complete Week"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year Complete Week"
      type: number
      sql: CAST((${count_adjusted_ty_wk} - ${count_adjusted_ly_wk}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_wk_variance_number {
      label: "TY/LY Adjusted Scripts Variance - Complete Week"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year Complete Week"
      type: number
      sql: ${count_adjusted_ty_wk} - ${count_adjusted_ly_wk} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ty_wtd {
      label: "Adjusted Scripts - WTD"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_wtd {
      label: "LY Adjusted Scripts - WTD"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's WTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_wtd_variance {
      label: "TY/LY Adjusted Scripts Variance % - WTD"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year WTD"
      type: number
      sql: CAST((${count_adjusted_ty_wtd} - ${count_adjusted_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_wtd_variance_number {
      label: "TY/LY Adjusted Scripts Variance - WTD"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year WTD"
      type: number
      sql: ${count_adjusted_ty_wtd} - ${count_adjusted_ly_wtd}  ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ty_mnth {
      label: "Adjusted Scripts - Complete Month"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_mnth {
      label: "LY Adjusted Scripts - Complete Month"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's complete month based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_mnth_variance {
      label: "TY/LY Adjusted Scripts Variance % - Complete Month"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year Complete Month"
      type: number
      sql: CAST((${count_adjusted_ty_mnth} - ${count_adjusted_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_mnth_variance_number {
      label: "TY/LY Adjusted Scripts Variance - Complete Month"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year Complete Month"
      type: number
      sql: ${count_adjusted_ty_mnth} - ${count_adjusted_ly_mnth}  ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ty_mtd {
      label: "Adjusted Scripts - MTD"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_mtd {
      label: "LY Adjusted Scripts - MTD"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's MTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_mtd_variance {
      label: "TY/LY Adjusted Scripts Variance % - MTD"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year MTD"
      type: number
      sql: CAST((${count_adjusted_ty_mtd} - ${count_adjusted_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_mtd_variance_number {
      label: "TY/LY Adjusted Scripts Variance - MTD"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year MTD"
      type: number
      sql: ${count_adjusted_ty_mtd} - ${count_adjusted_ly_mtd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ty_qtr {
      label: "Adjusted Scripts - Complete Quarter"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_qtr {
      label: "LY Adjusted Scripts - Complete Quarter"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's complete quarter based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_qtr_variance {
      label: "TY/LY Adjusted Scripts Variance % - Complete Quarter"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year Complete Quarter"
      type: number
      sql: CAST((${count_adjusted_ty_qtr} - ${count_adjusted_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_qtr_variance_number {
      label: "TY/LY Adjusted Scripts Variance - Complete Quarter"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year Complete Quarter"
      type: number
      sql: ${count_adjusted_ty_qtr} - ${count_adjusted_ly_qtr} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }


    measure: count_adjusted_ty_qtd {
      label: "Adjusted Scripts - QTD"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_qtd {
      label: "LY Adjusted Scripts - QTD"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's QTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_qtd_variance {
      label: "TY/LY Adjusted Scripts Variance % - QTD"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year QTD"
      type: number
      sql: CAST((${count_adjusted_ty_qtd} - ${count_adjusted_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_qtd_variance_number {
      label: "TY/LY Adjusted Scripts Variance - QTD"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year QTD"
      type: number
      sql: ${count_adjusted_ty_qtd} - ${count_adjusted_ly_qtd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ty_ytd {
      label: "Adjusted Scripts - YTD"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_ytd {
      label: "LY Adjusted Scripts - YTD"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's YTD based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ytd_variance {
      label: "TY/LY Adjusted Scripts Variance % - YTD"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year YTD"
      type: number
      sql: CAST((${count_adjusted_ty_ytd} - ${count_adjusted_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_ytd_variance_number {
      label: "TY/LY Adjusted Scripts Variance - YTD"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year YTD"
      type: number
      sql: ${count_adjusted_ty_ytd} - ${count_adjusted_ly_ytd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ty_rolling_13_week {
      label: "Adjusted Scripts - ROLLING 13 WEEK"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_rolling_13_week {
      label: "LY Adjusted Scripts - ROLLING 13 WEEK"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's ROLLING 13 WEEK based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_rolling_13_week_variance {
      label: "TY/LY Adjusted Scripts Variance % - ROLLING 13 WEEK"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year ROLLING 13 WEEK"
      type: number
      sql: CAST((${count_adjusted_ty_rolling_13_week} - ${count_adjusted_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_rolling_13_week_variance_number {
      label: "TY/LY Adjusted Scripts Variance - ROLLING 13 WEEK"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year ROLLING 13 WEEK"
      type: number
      sql: ${count_adjusted_ty_rolling_13_week} - ${count_adjusted_ly_rolling_13_week} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ty_ttm {
      label: "Adjusted Scripts - TTM"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ly_ttm {
      label: "LY Adjusted Scripts - TTM"
      group_label: "Adjusted Scripts"
      description: "Total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script for Last Year's TTM based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y'  THEN ${count_adjusted_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_adjusted_ttm_variance {
      label: "TY/LY Adjusted Scripts Variance % - TTM"
      group_label: "Adjusted Scripts"
      description: "Percentage Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year TTM"
      type: number
      sql: CAST((${count_adjusted_ty_ttm} - ${count_adjusted_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${count_adjusted_ly_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-987] TY/LY variance number measures
    measure: count_adjusted_ttm_variance_number {
      label: "TY/LY Adjusted Scripts Variance - TTM"
      group_label: "Adjusted Scripts"
      description: "Number Increase/Decrease of total script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script compared to the last year TTM"
      type: number
      sql: ${count_adjusted_ty_ttm} - ${count_adjusted_ly_ttm} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }


    measure: count_adjusted_avg_ty {
      label: "Avg Adjusted Scripts"
      group_label: "Average Adjusted Scripts"
      description: "Average script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script"
      type: number
      sql: ${count_adjusted}/NULLIF(${report_calendar_global.ty_number_of_days},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_adjusted_avg_ly {
      label: "LY Avg Adjusted Scripts"
      group_label: "Average Adjusted Scripts"
      description: "Average last year script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script"
      type: number
      sql: ${count_adjusted_ly}/NULLIF(${report_calendar_global.ly_number_of_days},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_new {
      label: "New Scripts"
      group_label: "Other Scripts"
      description: "Total New script volume without any adjustment"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_FILL_STATUS = 'N' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_new_ly {
      label: "LY New Scripts"
      group_label: "Other Scripts"
      description: "Total New script volume without any adjustment, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_FILL_STATUS = 'N' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_new_pct {
      label: "New Scripts %"
      group_label: "Other Scripts"
      description: "Percentage of the New Scripts in comparison to the Total Unadjusted Scripts"
      type: number
      sql: CAST((${count_new}) AS DECIMAL (17,4))/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6418]
    measure: count_new_pct_ly {
      label: "LY New Scripts %"
      group_label: "Other Scripts"
      description: "Percentage of the New Scripts in comparison to the Total Unadjusted Scripts for the last year"
      type: number
      sql: CAST((${count_new_ly}) AS DECIMAL (17,4))/NULLIF(${count_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6330]
    measure: count_new_variance {
      label: "TY/LY New Scripts Variance"
      group_label: "Other Scripts"
      description: "Increase/Decrease of Total New script volume without any adjustment, compared to the last year. Calculation Used: (New Scripts - LY New Scripts)."
      type: number
      sql: ${count_new} - ${count_new_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_new_variance_pct {
      label: "TY/LY New Scripts Variance %"
      group_label: "Other Scripts"
      description: "Percentage Increase/Decrease of total New script volume without any adjustment, compared to the last year. Calculation Used: (New Scripts - LY New Scripts)/LY New Scripts."
      type: number
      sql: CAST((${count_new} - ${count_new_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_new_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_refill {
      label: "Refill Scripts"
      group_label: "Other Scripts"
      description: "Total Refill script volume without any adjustment"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY'  AND ${TABLE}.SALE_FILL_STATUS = 'R' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_refill_ly {
      label: "LY Refill Scripts"
      group_label: "Other Scripts"
      description: "Total Refill script volume without any adjustment, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY'  AND ${TABLE}.SALE_FILL_STATUS = 'R' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_refill_pct_ly {
      label: "LY Refill Scripts %"
      group_label: "Other Scripts"
      description: "Percentage of the Refill Scripts in comparison to the Total Unadjusted Scripts for last year"
      type: number
      sql: cast((${count_refill_ly}) as decimal(17,4))/NULLIF(${count_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_refill_pct {
      label: "Refill Scripts %"
      group_label: "Other Scripts"
      description: "Percentage of the Refill Scripts in comparison to the Total Unadjusted Scripts"
      type: number
      sql: cast((${count_refill}) as decimal(17,4))/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_refill_variance {
      label: "TY/LY Refill Scripts Variance"
      group_label: "Other Scripts"
      description: "Increase/Decrease of Total Refill script volume without any adjustment, compared to the last year. Calculation Used: (Refill Scripts - LY Refill Scripts)."
      type: number
      sql: ${count_refill} - ${count_refill_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_refill_variance_pct {
      label: "TY/LY Refill Scripts Variance %"
      group_label: "Other Scripts"
      description: "Percentage Increase/Decrease of total Refill script volume without any adjustment, compared to the last year. Calculation Used: (Refill Scripts - LY Refill Scripts)/LY Refill Scripts."
      type: number
      sql: CAST((${count_refill} - ${count_refill_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_refill_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_cash {
      label: "Cash Scripts"
      group_label: "Other Scripts"
      description: "Total Cash script volume without any adjustment"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY'  AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_cash_ly {
      label: "LY Cash Scripts"
      group_label: "Other Scripts"
      description: "Total Cash script volume without any adjustment, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_cash_pct {
      label: "Cash Scripts %"
      group_label: "Other Scripts"
      description: "Percentage of the Cash Scripts in comparison to the Total Unadjusted Scripts"
      type: number
      sql: CAST((${count_cash}) AS DECIMAL (17,4))/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_tp {
      label: "T/P Scripts"
      group_label: "Other Scripts"
      description: "Total T/P script volume without any adjustment"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY'  AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_tp_ly {
      label: "LY T/P Scripts"
      group_label: "Other Scripts"
      description: "Total T/P script volume without any adjustment, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_tp_pct {
      label: "T/P Scripts %"
      group_label: "Other Scripts"
      description: "Percentage of the T/P Scripts in comparison to the Total Unadjusted Scripts"
      type: number
      sql: CAST((${count_tp}) AS DECIMAL (17,4))/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - brand reference dimension. Updated label, description and logic for corresponding measures.
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    dimension: count_brand_reference {
      label: "Brand Scripts"
      description: "Brand script without any adjustment. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      hidden: yes
      sql: CASE WHEN ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
               THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'B' THEN ${count_reference} END
               WHEN ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} <> 'Y'
               THEN ${count_reference}
               WHEN ${source_system_id} = 11 AND ${store_drug_multi_source_reference} <> 'Y'
               THEN ${count_reference}
          END ;;
    }

    #[ERXLPS-2055] - Updated logic to calculate script count based on EPS or EPR and B/G/C or MULTI-SOURCE
    measure: count_brand {
      label: "Brand Scripts *"
      group_label: "Other Scripts"
      description: "Total Brand script volume without any adjustment. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${count_brand_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - Updated logic to calculate script count based on EPS or EPR and B/G/C or MULTI-SOURCE
    measure: count_brand_ly {
      label: "LY Brand Scripts *"
      group_label: "Other Scripts"
      description: "Total Brand script volume without any adjustment, for last year. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${count_brand_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

# [ERXLPS-1269] additional measures are added
    measure: count_brand_variance {
      label: "TY/LY Brand Scripts Variance % *"
      group_label: "Other Scripts"
      description: "Percentage Increase/Decrease of total brand script volume without any adjustment compared to the last year. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_brand} - ${count_brand_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_brand_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_brand_variance_number {
      label: "TY/LY Brand Scripts Variance *"
      group_label: "Other Scripts"
      description: "Number Increase/Decrease of total brand script volume without any adjustment compared to the last year. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: (${count_brand} - ${count_brand_ly})  ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_brand_pct {
      label: "Brand Scripts % *"
      group_label: "Other Scripts"
      description: "Percentage of the Brand Scripts in comparison to the Total Unadjusted Scripts. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_brand}) AS DECIMAL (17,4))/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - New measures created.
    measure: count_brand_pct_ly {
      label: "LY Brand Scripts % *"
      group_label: "Other Scripts"
      description: "Percentage of the Brand Scripts in comparison to the Total Unadjusted Scripts, for last year. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_brand_ly}) AS DECIMAL (17,4))/NULLIF(${count_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_brand_pct_variance {
      label: "TY/LY Brand Scripts % Variance *"
      group_label: "Other Scripts"
      description: "Number difference based on the Increase/Decrease of the Brand Scripts percent, compared to the last year (this is not a percent of last year, calculation used is Brand Scripts % - Ly Brand Scripts %). For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${count_brand_pct}-${count_brand_pct_ly} ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_brand_pct_variance_pct {
      label: "TY/LY Brand Scripts % Variance % *"
      group_label: "Other Scripts"
      description: "Percentage Increase/Decrease of the Brand Scripts percent, compared to last year. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_brand_pct} - ${count_brand_pct_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_brand_pct_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - generic script reference dimension. Updated label, description and logic for corresponding measures.
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    dimension: count_generic_reference {
      label: "Generic Scripts"
      description: "Generic script without any adjustment. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      hidden: yes
      sql: CASE WHEN ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
                 THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'G' THEN ${count_reference} END
                 WHEN ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} = 'Y'
                 THEN ${count_reference}
                 WHEN ${source_system_id} = 11 AND ${store_drug_multi_source_reference} = 'Y'
                 THEN ${count_reference}
            END ;;
    }

    #[ERXLPS-2055] - Updated logic to calculate script count based on EPS or EPR and B/G/C or MULTI-SOURCE
    measure: count_generic {
      label: "Generic Scripts *"
      group_label: "Other Scripts"
      description: "Total Generic script volume without any adjustment. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${count_generic_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_generic_ly {
      label: "LY Generic Scripts *"
      group_label: "Other Scripts"
      description: "Total Generic script volume without any adjustment, for last year. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${count_generic_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

# [ERXLPS-1187] - Add LY Generic Scripts %, and TY/LY Variance measures
    measure: count_generic_variance {
      label: "TY/LY Generic Scripts Variance *"
      group_label: "Other Scripts"
      description: "Number Increase/Decrease of the total Generic Scripts without any adjustment, compared to the last year. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${count_generic}-${count_generic_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_generic_variance_pct {
      label: "TY/LY Generic Scripts Variance % *"
      group_label: "Other Scripts"
      description: "Percentage Increase/Decrease of the total Generic Scripts without any adjustment, compared to last year. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_generic} - ${count_generic_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_generic_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_generic_pct {
      label: "Generic Scripts % *"
      group_label: "Other Scripts"
      description: "Percentage of the Generic Scripts in comparison to the Total Unadjusted Scripts. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_generic}) AS DECIMAL(17,4))/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_generic_pct_ly {
      label: "LY Generic Scripts % *"
      group_label: "Other Scripts"
      description: "Percentage of the Generic Scripts in comparison to the Total Unadjusted Scripts, for last year. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_generic_ly}) AS DECIMAL(17,4))/NULLIF(${count_ly},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_generic_pct_variance {
      label: "TY/LY Generic Scripts % Variance *"
      group_label: "Other Scripts"
      description: "Number difference based on the Increase/Decrease of the Generic Scripts percent, compared to the last year (this is not a percent of last year, calculation used is Generic Scripts % - Ly Generic Scripts %). For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${count_generic_pct}-${count_generic_pct_ly} ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_generic_pct_variance_pct {
      label: "TY/LY Generic Scripts % Variance % *"
      group_label: "Other Scripts"
      description: "Percentage Increase/Decrease of the Generic Scripts percent, compared to last year. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_generic_pct} - ${count_generic_pct_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_generic_pct_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

# [ERX-3509] - Added these generic scripts measures which will be used in corresponding budget generic script variance measures computation [end]

    measure: count_compound {
      label: "Compound Scripts"
      group_label: "Other Scripts"
      description: "Total Compound script volume without any adjustment"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_DRUG_DISPENSED = 'C' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_compound_ly {
      label: "LY Compound Scripts"
      group_label: "Other Scripts"
      description: "Total Compound script volume without any adjustment, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY'  AND ${TABLE}.SALE_DRUG_DISPENSED = 'C' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_compound_pct {
      label: "Compound Scripts %"
      group_label: "Other Scripts"
      description: "Percentage of the Compound Scripts in comparison to the Total Unadjusted Scripts"
      type: number
      sql: CAST((${count_compound}) AS DECIMAL (17,4))/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1231] - New measures added for Non-partial Script count
    measure: count_non_parital {
      label: "Scripts (No Partials)"
      group_label: "Other Scripts"
      description: "Total script volume without partial fill status as PARTIAL"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT','CASH - FILLED','T/P - CREDIT','T/P - FILLED') THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_non_parital_ly {
      label: "LY Scripts (No Partials)"
      group_label: "Other Scripts"
      description: "Total script volume without partial fill status as PARTIAL for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${financial_category} IN ('CASH - CREDIT','CASH - FILLED','T/P - CREDIT','T/P - FILLED') THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_non_parital_variance_number {
      label: "TY/LY Scripts (No Partials) Variance"
      group_label: "Other Scripts"
      description: "Number Increase/Decrease of total script volume without partial fill status as PARTIAL compared to the last year"
      type: number
      sql: ${count_non_parital} - ${count_non_parital_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_non_parital_variance {
      label: "TY/LY Scripts (No Partials) Variance %"
      group_label: "Other Scripts"
      description: "Percentage Increase/Decrease of total script volume without partial fill status as PARTIAL compared to the last year"
      type: number
      sql: CAST((${count_non_parital} - ${count_non_parital_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_non_parital_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: return_to_stock_count {
      label: "Return to Stock Count*"
      group_label: "Return to Stock"
      description: "The number of scripts returned to stock. Return to Stock date is used to calculate the number of scripts returned to stock. This measure should be used with DATE TO USE as FILLED. Increase REPORT Period duration to broader range (Ex: 1 year or 2 year) to include all the possible transactions."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY'AND ${financial_category} IN ('CASH - CREDIT','T/P - CREDIT','PARTIAL - CREDIT') AND ${return_to_stock_yesno} = 'Yes' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: return_to_stock_count_ly {
      label: "LY Return to Stock Count*"
      group_label: "Return to Stock"
      description: "The number of scripts returned to stock, for the last year. Return to Stock date is used to calculate the number of scripts returned to stock. This measure should be used with DATE TO USE as FILLED. Increase REPORT Period duration to broader range (Ex: 1 year or 2 year) to include all the possible transactions."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${financial_category} IN ('CASH - CREDIT','T/P - CREDIT','PARTIAL - CREDIT') AND ${return_to_stock_yesno} = 'Yes' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: return_to_stock_sales {
      label: "Return to Stock Sales*"
      group_label: "Return to Stock"
      description: "The total sales or the original prescription price of scripts which are returned to stock. Return to Stock date is used to calculate the sales of scripts returned to stock. This measure should be used with DATE TO USE as FILLED. Increase REPORT Period duration to broader range (Ex: 1 year or 2 year) to include all the possible transactions."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${financial_category} IN ('CASH - CREDIT','T/P - CREDIT','PARTIAL - CREDIT') AND ${return_to_stock_yesno} = 'Yes' AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1 THEN ${TABLE}.SALE_PRICE END  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: return_to_stock_sales_ly {
      label: "LY Return to Stock Sales*"
      group_label: "Return to Stock"
      description: "The total sales or the original prescription price of scripts which are returned to stock, for last year. Return to Stock date is used to calculate the sales of scripts returned to stock. This measure should be used with DATE TO USE as FILLED. Increase REPORT Period duration to broader range (Ex: 1 year or 2 year) to include all the possible transactions."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${financial_category} IN ('CASH - CREDIT','T/P - CREDIT','PARTIAL - CREDIT') AND ${return_to_stock_yesno} = 'Yes' AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1 THEN ${TABLE}.SALE_PRICE END  ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_weekly_avg_ty {
      label: "Avg Scripts (per Week)"
      group_label: "Average Scripts (per Day/Week/Month)"
      description: "Average script volume without any adjustment based on the no. of days in the reporting period"
      type: number
      sql: ${count}/NULLIF(${report_calendar_global.ty_number_of_weeks},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_weekly_avg_ly {
      label: "LY Avg Scripts (per Week)"
      group_label: "Average Scripts (per Day/Week/Month)"
      description: "Average last year script volume without any adjustment based on the no. of days in the reporting period"
      type: number
      sql: ${count_ly}/NULLIF(${report_calendar_global.ly_number_of_weeks},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_monthly_avg_ty {
      label: "Avg Scripts (per Month)"
      group_label: "Average Scripts (per Day/Week/Month)"
      description: "Average script volume without any adjustment based on the no. of days in the reporting period"
      type: number
      sql: ${count}/NULLIF(${report_calendar_global.ty_number_of_months},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_monthly_avg_ly {
      label: "LY Avg Scripts (per Month)"
      group_label: "Average Scripts (per Day/Week/Month)"
      description: "Average last year script volume without any adjustment based on the no. of days in the reporting period"
      type: number
      sql: ${count_ly}/NULLIF(${report_calendar_global.ly_number_of_months},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_weekly_adjusted_avg_ty {
      label: "Avg Adjusted Scripts (per Week)"
      group_label: "Average Adjusted Scripts"
      description: "Average script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script"
      type: number
      sql: ${count_adjusted}/NULLIF(${report_calendar_global.ty_number_of_weeks},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_weekly_adjusted_avg_ly {
      label: "LY Avg Adjusted Scripts (per Week)"
      group_label: "Average Adjusted Scripts"
      description: "Average last year script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script"
      type: number
      sql: ${count_adjusted_ly}/NULLIF(${report_calendar_global.ly_number_of_weeks},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_monthly_adjusted_avg_ty {
      label: "Avg Adjusted Scripts (per Month)"
      group_label: "Average Adjusted Scripts"
      description: "Average script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script"
      type: number
      sql: ${count_adjusted}/NULLIF(${report_calendar_global.ty_number_of_months},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_monthly_adjusted_avg_ly {
      label: "LY Avg Adjusted Scripts (per Month)"
      group_label: "Average Adjusted Scripts"
      description: "Average last year script volume based on adjustment done on Days Supply i.e. when Days Supply >= 84, the script count is increased by 3 for each script"
      type: number
      sql: ${count_adjusted_ly}/NULLIF(${report_calendar_global.ly_number_of_months},0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_weekly_price_ty {
      label: "Avg Price (per Week)"
      group_label: "Average Price (per Week/Month)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of weeks"
      type: number
      sql: COALESCE(${sum_price}/NULLIF(${report_calendar_global.ty_number_of_weeks},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_weekly_price_ly {
      label: "LY Avg Price (per Week)"
      group_label: "Average Price (per Week/Month)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of weeks for Last Year based on the period selected"
      type: number
      sql: COALESCE(${sum_price_ly}/NULLIF(${report_calendar_global.ly_number_of_weeks},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_monthly_price {
      label: "Avg Price (per Month)"
      group_label: "Average Price (per Week/Month)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of months"
      type: number
      sql: COALESCE(${sum_price}/NULLIF(${report_calendar_global.ty_number_of_months},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_monthly_price_ly {
      label: "LY Avg Price (per Month)"
      group_label: "Average Price (per Week/Month)"
      description: "Average Price of prescription. Calculation Used: Total Price of the Prescription/Total no. of months for Last Year based on the period selected"
      type: number
      sql: COALESCE(${sum_price_ly}/NULLIF(${report_calendar_global.ly_number_of_months},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_weekly_net_sales_ty {
      label: "Avg Net Sales (per Week)"
      group_label: "Average Net Sales (per Week/Month)"
      description: "Average Net Sales of prescription. (Calculation Used: Net Sales of the Prescription/Total no. of weeks)"
      type: number
      sql: COALESCE(${sum_net_sales}/NULLIF(${report_calendar_global.ty_number_of_weeks},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_weekly_net_sales_ly {
      label: "LY Avg Net Sales (per Week)"
      group_label: "Average Net Sales (per Week/Month)"
      description: "Average Net Sales of prescription. (Calculation Used: Net Sales of the Prescription/Total no. of weeks for Last Year based on the period selected )"
      type: number
      sql: COALESCE(${sum_net_sales_ly}/NULLIF(${report_calendar_global.ly_number_of_weeks},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_monthly_net_sales_ty {
      label: "Avg Net Sales (per Month)"
      group_label: "Average Net Sales (per Week/Month)"
      description: "Average Net Sales of prescription. (Calculation Used: Net Sales of the Prescription/Total no. of months)"
      type: number
      sql: COALESCE(${sum_net_sales}/NULLIF(${report_calendar_global.ty_number_of_months},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_monthly_net_sales_ly {
      label: "LY Avg Net Sales (per Month)"
      group_label: "Average Net Sales (per Week/Month)"
      description: "Average Net Sales of prescription. (Calculation Used: Net Sales of the Prescription/Total no. of months for Last Year based on the period selected )"
      type: number
      sql: COALESCE(${sum_net_sales_ly}/NULLIF(${report_calendar_global.ly_number_of_months},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_weekly_net_sales_after_sold {
      label: "Avg Net Sales After Sold (per Week)"
      group_label: "Average Net Sales After Sold"
      description: "Average Net Sales of prescription. (Calculation Used: Net Sales of the Prescription After Sold/Total no. of weeks)"
      type: number
      sql: COALESCE(${sum_net_sales_after_sold}/NULLIF(${report_calendar_global.ty_number_of_weeks},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_weekly_net_sales_after_sold_ly {
      label: "LY Avg Net Sales After Sold (per Week)"
      group_label: "Average Net Sales After Sold"
      description: "Average Net Sales of prescription. (Calculation Used: Net Sales of the Prescription After Sold/Total no. of weeks for Last Year based on the period selected )"
      type: number
      sql: COALESCE(${sum_net_sales_after_sold_ly}/NULLIF(${report_calendar_global.ly_number_of_weeks},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_monthly_net_sales_after_sold_ty {
      label: "Avg Net Sales After Sold (per Month)"
      group_label: "Average Net Sales After Sold"
      description: "Average Net Sales of prescription. (Calculation Used: Net Sales of the Prescription After Sold/Total no. of Months)"
      type: number
      sql: COALESCE(${sum_net_sales_after_sold}/NULLIF(${report_calendar_global.ty_number_of_months},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_monthly_sales_after_sold_ly {
      label: "LY Avg Net Sales After Sold (per Month)"
      group_label: "Average Net Sales After Sold"
      description: "Average Net Sales of prescription. (Calculation Used: Net Sales of the Prescription After Sold/Total no. of Months for Last Year based on the period selected )"
      type: number
      sql: COALESCE(${sum_net_sales_after_sold_ly}/NULLIF(${report_calendar_global.ly_number_of_months},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    dimension: budget_price {
      label: "Budget Price (per day)"
      group_label: "Budget Price"
      description: "Total Budget Price of prescription"
      type: number
      hidden: yes
      sql: ${store_budget.daily_pharmacy_sales_budget} ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_budget_price {
      label: "Budget Price"
      group_label: "Budget Price"
      description: "Total budget price of prescription"
      type: sum_distinct
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${store_budget.daily_pharmacy_sales_budget}  END ;;
      sql_distinct_key: ${TABLE}.chain_id ||'@'|| ${TABLE}.nhin_store_id ||'@'|| ${report_calendar_global.calendar_date}||'@'|| ${report_calendar_global.type} ;; #[ERXLPS-1470] #ERXLPS-1649 #[ERXLPS-2479]
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly {
      hidden: yes
      label: "LY Budget Price"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${budget_price} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_variance {
      label: "Budget Price Variance %"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease of price of prescription, this year per day compared to total budget price per day. (Use this budget variance only for day level analysis)"
      type: number
      sql: CAST((${sum_price} - ${sum_budget_price}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_wk {
      hidden: yes
      label: "Budget Price - Complete Week"
      group_label: "Budget Price"
      description: "Total budget price of prescription for complete Week"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN (${store_budget.wk_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_wk {
      hidden: yes
      label: "LY Budget Price - Complete Week"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's complete week based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${store_budget.wk_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_wk_variance {
      label: "Budget Price Variance % - Complete Week"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription,this year in complete week compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_wk} - ${sum_budget_price_ty_wk}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_wtd {
      hidden: yes
      label: "Budget Price - WTD"
      group_label: "Budget Price"
      description: "Total budget price of prescription"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN (${store_budget.wtd_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_wtd {
      hidden: yes
      label: "LY Budget Price - WTD"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's WTD based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${store_budget.wtd_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_wtd_variance {
      label: "Budget Price Variance % - WTD"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription, this year in WTD compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_wtd} - ${sum_budget_price_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_mnth {
      hidden: yes
      label: "Budget Price - Complete Month"
      group_label: "Budget Price"
      description: "Total budget price of prescription for complete month based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN (${store_budget.mnth_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_mnth {
      hidden: yes
      label: "LY Budget Price - Complete Month"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's complete month based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${store_budget.mnth_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_mnth_variance {
      label: "Budget Price Variance % - Complete Month"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription, this year in complete month compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_mnth} - ${sum_budget_price_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_mtd {
      hidden: yes
      label: "Budget Price - MTD"
      group_label: "Budget Price"
      description: "Total budget price of prescription for MTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN (${store_budget.mtd_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_mtd {
      hidden: yes
      label: "LY Budget Price - MTD"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's MTD based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${store_budget.mtd_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_mtd_variance {
      label: "Budget Price Variance % - MTD"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription, this year in MTD compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_mtd} - ${sum_budget_price_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_qtr {
      hidden: yes
      label: "Budget Price - Complete Quarter"
      group_label: "Budget Price"
      description: "Total budget price of prescription for complete quarter based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN (${store_budget.qtr_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_qtr {
      hidden: yes
      label: "LY Budget Price - Complete Quarter"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's complete quarter based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${store_budget.qtr_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_qtr_variance {
      label: "Budget Price Variance % - Complete Quarter"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription, this year in complete quarter compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_qtr} - ${sum_budget_price_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_qtd {
      hidden: yes
      label: "Budget Price - QTD"
      group_label: "Budget Price"
      description: "Total budget price of prescription for QTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN (${store_budget.qtd_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_qtd {
      hidden: yes
      label: "LY Budget Price - QTD"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's QTD based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${store_budget.qtd_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_qtd_variance {
      label: "Budget Price Variance % - QTD"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription, this year in QTD compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_qtd} - ${sum_budget_price_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_ytd {
      hidden: yes
      label: "Budget Price - YTD"
      group_label: "Budget Price"
      description: "Total budget price of prescription for YTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN (${store_budget.ytd_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_ytd {
      hidden: yes
      label: "LY Budget Price - YTD"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's YTD based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${store_budget.ytd_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ytd_variance {
      label: "Budget Price Variance % - YTD"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription, this year in YTD compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_ytd} - ${sum_budget_price_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_rolling_13_week {
      hidden: yes
      label: "Budget Price - ROLLING 13 WEEK"
      group_label: "Budget Price"
      description: "Total budget price of prescription for ROLLING 13 WEEK based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN (${store_budget.roll_week_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_rolling_13_week {
      hidden: yes
      label: "LY Budget Price - ROLLING 13 WEEK"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's ROLLING 13 WEEK based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${store_budget.roll_week_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_rolling_13_week_variance {
      label: "Budget Price Variance % - ROLLING 13 WEEK"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription, this year in ROLLING 13 WEEK compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_rolling_13_week} - ${sum_budget_price_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_price_ty_ttm {
      hidden: yes
      label: "Budget Price - TTM"
      group_label: "Budget Price"
      description: "Total budget price of prescription for TTM based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN (${store_budget.ttm_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ly_ttm {
      hidden: yes
      label: "LY Budget Price - TTM"
      group_label: "Budget Price"
      description: "Total budget price of prescription for Last Year's TTM based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${store_budget.ttm_pharmacy_sales_budget} END),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_price_ttm_variance {
      label: "Budget Price Variance % - TTM"
      group_label: "Budget Price"
      description: "Percentage Increase/Decrease in price of prescription, this year in TTM compared to total budget price for same period"
      type: number
      sql: CAST((${sum_price_ty_ttm} - ${sum_budget_price_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    dimension: budget_count_reference {
      label: "Scripts"
      description: "Total script volume without any adjustment"
      type: number
      hidden: yes
      sql: ${store_budget.daily_pharmacy_scripts_budget} ;;
    }

    measure: budget_count {
      label: "Budget Scripts"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment"
      type: sum_distinct
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${budget_count_reference} END ;;
      sql_distinct_key: ${TABLE}.chain_id ||'@'|| ${TABLE}.nhin_store_id ||'@'|| ${report_calendar_global.calendar_date}||'@'|| ${report_calendar_global.type} ;; #[ERXLPS-1470] #ERXLPS-1649 #[ERXLPS-2479]
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly {
      hidden: yes
      label: "LY Budget Scripts"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${budget_count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_variance_number {
      label: "Budget Scripts Variance"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year compared to total budget script volume"
      type: number
      sql: ${count} - ${budget_count} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_variance {
      label: "Budget Scripts Variance %"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease of script volume without any adjustment, this year compared to total budget script volume"
      type: number
      sql: CAST((${count} - ${budget_count}) AS DECIMAL(38,4))/NULLIF(${budget_count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_wk {
      label: "Budget Scripts - Complete Week"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN (${store_budget.wk_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_wk {
      hidden: yes
      label: "LY Budget Scripts - Complete Week"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's complete week based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${store_budget.wk_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_ty_wk_variance_number {
      label: "Budget Scripts Variance - Complete Week"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year for complete week compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_wk} - ${budget_count_ty_wk} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_wk_variance {
      label: "Budget Scripts Variance % - Complete Week"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in complete week compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_wk} - ${budget_count_ty_wk}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_wtd {
      label: "Budget Scripts - WTD"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN (${store_budget.wtd_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_wtd {
      hidden: yes
      label: "LY Budget Scripts - WTD"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's WTD based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${store_budget.wtd_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_wtd_variance_number {
      label: "Budget Scripts Variance - WTD"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year in WTD compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_wtd} - ${budget_count_ty_wtd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_wtd_variance {
      label: "Budget Scripts Variance % - WTD"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in WTD compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_wtd} - ${budget_count_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_mnth {
      label: "Budget Scripts - Complete Month"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for complete month based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN (${store_budget.mnth_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_mnth {
      hidden: yes
      label: "LY Budget Scripts - Complete Month"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's complete month based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${store_budget.mnth_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_ty_mnth_variance_number {
      label: "Budget Scripts Variance - Complete Month"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year for complete month compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_mnth} - ${budget_count_ty_mnth} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_mnth_variance {
      label: "Budget Scripts Variance % - Complete Month"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in complete month compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_mnth} - ${budget_count_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_mtd {
      label: "Budget Scripts - MTD"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for MTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN (${store_budget.mtd_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_mtd {
      hidden: yes
      label: "LY Budget Scripts - MTD"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's MTD based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${store_budget.mtd_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_mtd_variance_number {
      label: "Budget Scripts Variance - MTD"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year in MTD compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_mtd} - ${budget_count_ty_mtd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_mtd_variance {
      label: "Budget Scripts Variance % - MTD"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in MTD compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_mtd} - ${budget_count_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_qtr {
      label: "Budget Scripts - Complete Quarter"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for complete quarter based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN (${store_budget.qtr_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_qtr {
      hidden: yes
      label: "LY Budget Scripts - Complete Quarter"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's complete quarter based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${store_budget.qtr_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_ty_qtr_variance_number {
      label: "Budget Scripts Variance - Complete Quarter"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year for complete quarter compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_qtr} - ${budget_count_ty_qtr} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_qtr_variance {
      label: "Budget Scripts Variance % - Complete Quarter"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in complete quarter compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_qtr} - ${budget_count_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_qtd {
      label: "Budget Scripts - QTD"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for QTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN (${store_budget.qtd_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_qtd {
      hidden: yes
      label: "LY Budget Scripts - QTD"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's QTD based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${store_budget.qtd_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_qtd_variance_number {
      label: "Budget Scripts Variance - QTD"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year in QTD compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_qtd} - ${budget_count_ty_qtd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_qtd_variance {
      label: "Budget Scripts Variance % - QTD"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in QTD compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_qtd} - ${budget_count_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_ytd {
      label: "Budget Scripts - YTD"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for YTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN (${store_budget.ytd_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_ytd {
      hidden: yes
      label: "LY Budget Scripts - YTD"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's YTD based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${store_budget.ytd_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_ytd_variance_number {
      label: "Budget Scripts Variance - YTD"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year in YTD compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_ytd} - ${budget_count_ty_ytd} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ytd_variance {
      label: "Budget Scripts Variance % - YTD"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in YTD compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_ytd} - ${budget_count_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_rolling_13_week {
      label: "Budget Scripts - ROLLING 13 WEEK"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for ROLLING 13 WEEK based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN (${store_budget.roll_week_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_rolling_13_week {
      hidden: yes
      label: "LY Budget Scripts - ROLLING 13 WEEK"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's ROLLING 13 WEEK based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${store_budget.roll_week_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_rolling_13_week_variance_number {
      label: "Budget Scripts Variance - ROLLING 13 WEEK"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year in ROLLING 13 WEEK compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_rolling_13_week} - ${budget_count_ty_rolling_13_week} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_rolling_13_week_variance {
      label: "Budget Scripts Variance % - ROLLING 13 WEEK"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in ROLLING 13 WEEK compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_rolling_13_week} - ${budget_count_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ty_ttm {
      label: "Budget Scripts - TTM"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for TTM based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN (${store_budget.ttm_pharmacy_scripts_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_count_ly_ttm {
      hidden: yes
      label: "LY Budget Scripts - TTM"
      group_label: "Budget Scripts"
      description: "Total budget script volume without any adjustment for Last Year's TTM based on the period selected"
      type: number
      sql: COALESCE(max(CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${store_budget.ttm_pharmacy_scripts_budget} END),0) ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1035] - Budet Script Count variance measures added
    measure: budget_count_ttm_variance_number {
      label: "Budget Scripts Variance - TTM"
      group_label: "Budget Scripts"
      description: "Increase/Decrease of script volume without any adjustment, this year in TTM compared to total budget script volume for same period"
      type: number
      sql: ${count_ty_ttm} - ${budget_count_ty_ttm} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_ttm_variance {
      label: "Budget Scripts Variance % - TTM"
      group_label: "Budget Scripts"
      description: "Percentage Increase/Decrease in script volume without any adjustment, this year in TTM compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_ty_ttm} - ${budget_count_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_variance {
      label: "Budget Adjusted Scripts Variance %"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease of adjusted script volume, this year compared to total budget script volume.(Use this budget variance only for day level analysis)"
      type: number
      sql: CAST((${count_adjusted} - ${budget_count}) AS DECIMAL(38,4))/NULLIF(${budget_count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_wk_variance {
      label: "Budget Adjusted Scripts Variance % - Complete Week"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in complete week compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_wk} - ${budget_count_ty_wk}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_wtd_variance {
      label: "Budget Adjusted Scripts Variance % - WTD"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in WTD compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_wtd} - ${budget_count_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_mnth_variance {
      label: "Budget Adjusted Scripts Variance % - Complete Month"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in complete month compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_mnth} - ${budget_count_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_mtd_variance {
      label: "Budget Adjusted Scripts Variance % - MTD"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in MTD compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_mtd} - ${budget_count_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_qtr_variance {
      label: "Budget Adjusted Scripts Variance % - Complete Quarter"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in complete quarter compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_qtr} - ${budget_count_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_qtd_variance {
      label: "Budget Adjusted Scripts Variance % - QTD"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in QTD compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_qtd} - ${budget_count_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_ytd_variance {
      label: "Budget Adjusted Scripts Variance % - YTD"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in YTD compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_ytd} - ${budget_count_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_rolling_13_week_variance {
      label: "Budget Adjusted Scripts Variance % - ROLLING 13 WEEK"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in ROLLING 13 WEEK compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_rolling_13_week} - ${budget_count_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_count_adjusted_ttm_variance {
      label: "Budget Adjusted Scripts Variance % - TTM"
      group_label: "Budget Adjusted Scripts"
      description: "Percentage Increase/Decrease in adjusted script volume, this year in TTM compared to total budget script volume for same period"
      type: number
      sql: CAST((${count_adjusted_ty_ttm} - ${budget_count_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${budget_count_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1023] - New average measures added for adjusted scripts
    measure: avg_net_sales_adjusted_scripts {
      label: "Avg Net Sales (Per Adjusted Script)"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales}/NULLIF(ABS(${count_adjusted}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly {
      label: "LY Avg Net Sales (Per Adjusted Script)"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly}/NULLIF(ABS(${count_adjusted_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_adjusted_scripts_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year"
      type: number
      sql: ${avg_net_sales_adjusted_scripts} - ${avg_net_sales_adjusted_scripts_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    measure: avg_net_sales_adjusted_scripts_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance %"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts} - ${avg_net_sales_adjusted_scripts_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_net_sales_adjusted_scripts_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    #[ERXLPS-1021] added diff timeframe measures of average net sales per adjusted script
    measure: avg_net_sales_adjusted_scripts_ty_wk {
      label: "Avg Net Sales (Per Adjusted Script) - Complete Week"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for complete week based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_wk}/NULLIF(ABS(${count_adjusted_ty_wk}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_wk {
      label: "LY Avg Net Sales (Per Adjusted Script) - Complete Week"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's complete week based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_wk}/NULLIF(ABS(${count_adjusted_ly_wk}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_adjusted_scripts_wk_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - Complete Week"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's complete week based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_wk} - ${avg_net_sales_adjusted_scripts_ly_wk} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    measure: avg_net_sales_adjusted_scripts_wk_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - Complete Week"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's complete week based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_wk} - ${avg_net_sales_adjusted_scripts_ly_wk}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_wk},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    measure: avg_net_sales_adjusted_scripts_ty_wtd {
      label: "Avg Net Sales (Per Adjusted Script) - WTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for WTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_wtd}/NULLIF(ABS(${count_adjusted_ty_wtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_wtd {
      label: "LY Avg Net Sales (Per Adjusted Script) - WTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's WTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_wtd}/NULLIF(ABS(${count_adjusted_ly_wtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_adjusted_scripts_wtd_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - WTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's WTD based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_wtd} - ${avg_net_sales_adjusted_scripts_ly_wtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    measure: avg_net_sales_adjusted_scripts_wtd_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - WTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's WTD based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_wtd} - ${avg_net_sales_adjusted_scripts_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_wtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                     {% else %}
                     <font color="grey">{{ rendered_value }}
                     {% endif %}
                     ;;
    }

    measure: avg_net_sales_adjusted_scripts_ty_mnth {
      label: "Avg Net Sales (Per Adjusted Script) - Complete Month"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for complete month based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_mnth}/NULLIF(ABS(${count_adjusted_ty_mnth}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_mnth {
      label: "LY Avg Net Sales (Per Adjusted Script) - Complete Month"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's complete month based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_mnth}/NULLIF(ABS(${count_adjusted_ly_mnth}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_mnth_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - Complete Month"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's complete month based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_mnth} - ${avg_net_sales_adjusted_scripts_ly_mnth} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                       {% else %}
                       <font color="grey">{{ rendered_value }}
                       {% endif %}
                       ;;
    }

    measure: avg_net_sales_adjusted_scripts_mnth_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - Complete Month"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's complete month based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_mnth} - ${avg_net_sales_adjusted_scripts_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_mnth},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                           <font color="red">{{ rendered_value }}
                           {% else %}
                           <font color="grey">{{ rendered_value }}
                           {% endif %}
                           ;;
    }

    measure: avg_net_sales_adjusted_scripts_ty_mtd {
      label: "Avg Net Sales (Per Adjusted Script) - MTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for MTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_mtd}/NULLIF(ABS(${count_adjusted_ty_mtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_mtd {
      label: "LY Avg Net Sales (Per Adjusted Script) - MTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's MTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_mtd}/NULLIF(ABS(${count_adjusted_ly_mtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_mtd_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - MTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's MTD based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_mtd} - ${avg_net_sales_adjusted_scripts_ly_mtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                       {% else %}
                       <font color="grey">{{ rendered_value }}
                       {% endif %}
                       ;;
    }

    measure: avg_net_sales_adjusted_scripts_mtd_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - MTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's MTD based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_mtd} - ${avg_net_sales_adjusted_scripts_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_mtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                           <font color="red">{{ rendered_value }}
                           {% else %}
                           <font color="grey">{{ rendered_value }}
                           {% endif %}
                           ;;
    }

    measure: avg_net_sales_adjusted_scripts_ty_qtr {
      label: "Avg Net Sales (Per Adjusted Script) - Complete Quarter"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for complete quarter based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_qtr}/NULLIF(ABS(${count_adjusted_ty_qtr}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_qtr {
      label: "LY Avg Net Sales (Per Adjusted Script) - Complete Quarter"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's complete quarter based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_qtr}/NULLIF(ABS(${count_adjusted_ly_qtr}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_qtr_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - Complete Quarter"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's complete quarter based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_qtr} - ${avg_net_sales_adjusted_scripts_ly_qtr} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                       {% else %}
                       <font color="grey">{{ rendered_value }}
                       {% endif %}
                       ;;
    }

    measure: avg_net_sales_adjusted_scripts_qtr_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - Complete Quarter"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's complete quarter based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_qtr} - ${avg_net_sales_adjusted_scripts_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_qtr},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                           <font color="red">{{ rendered_value }}
                           {% else %}
                           <font color="grey">{{ rendered_value }}
                           {% endif %}
                           ;;
    }

    measure: avg_net_sales_adjusted_scripts_ty_qtd {
      label: "Avg Net Sales (Per Adjusted Script) - QTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for QTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_qtd}/NULLIF(ABS(${count_adjusted_ty_qtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_qtd {
      label: "LY Avg Net Sales (Per Adjusted Script) - QTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's QTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_qtd}/NULLIF(ABS(${count_adjusted_ly_qtd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_qtd_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - QTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's QTD based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_qtd} - ${avg_net_sales_adjusted_scripts_ly_qtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                       {% else %}
                       <font color="grey">{{ rendered_value }}
                       {% endif %}
                       ;;
    }

    measure: avg_net_sales_adjusted_scripts_qtd_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - QTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's QTD based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_qtd} - ${avg_net_sales_adjusted_scripts_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_qtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                           <font color="red">{{ rendered_value }}
                           {% else %}
                           <font color="grey">{{ rendered_value }}
                           {% endif %}
                           ;;
    }

    measure: avg_net_sales_adjusted_scripts_ty_ytd {
      label: "Avg Net Sales (Per Adjusted Script) - YTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for YTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_ytd}/NULLIF(ABS(${count_adjusted_ty_ytd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_ytd {
      label: "LY Avg Net Sales (Per Adjusted Script) - YTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's YTD based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_ytd}/NULLIF(ABS(${count_adjusted_ly_ytd}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ytd_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - YTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's YTD based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_ytd} - ${avg_net_sales_adjusted_scripts_ly_ytd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                       {% else %}
                       <font color="grey">{{ rendered_value }}
                       {% endif %}
                       ;;
    }

    measure: avg_net_sales_adjusted_scripts_ytd_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - YTD"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's YTD based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_ytd} - ${avg_net_sales_adjusted_scripts_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_ytd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                           <font color="red">{{ rendered_value }}
                           {% else %}
                           <font color="grey">{{ rendered_value }}
                           {% endif %}
                           ;;
    }

    measure: avg_net_sales_adjusted_scripts_ty_rolling_13_week {
      label: "Avg Net Sales (Per Adjusted Script) - ROLLING 13 WEEK"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for ROLLING 13 WEEK based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_rolling_13_week}/NULLIF(ABS(${count_adjusted_ty_rolling_13_week}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_rolling_13_week {
      label: "LY Avg Net Sales (Per Adjusted Script) - ROLLING 13 WEEK"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's ROLLING 13 WEEK based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_rolling_13_week}/NULLIF(ABS(${count_adjusted_ly_rolling_13_week}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_rolling_13_week_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - ROLLING 13 WEEK"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's ROLLING 13 WEEK based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_rolling_13_week} - ${avg_net_sales_adjusted_scripts_ly_rolling_13_week} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                       {% else %}
                       <font color="grey">{{ rendered_value }}
                       {% endif %}
                       ;;
    }

    measure: avg_net_sales_adjusted_scripts_rolling_13_week_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - ROLLING 13 WEEK"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's ROLLING 13 WEEK based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_rolling_13_week} - ${avg_net_sales_adjusted_scripts_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_rolling_13_week},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                           <font color="red">{{ rendered_value }}
                           {% else %}
                           <font color="grey">{{ rendered_value }}
                           {% endif %}
                           ;;
    }

    measure: avg_net_sales_adjusted_scripts_ty_ttm {
      label: "Avg Net Sales (Per Adjusted Script) - TTM"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for TTM based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ty_ttm}/NULLIF(ABS(${count_adjusted_ty_ttm}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ly_ttm {
      label: "LY Avg Net Sales (Per Adjusted Script) - TTM"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Average Net Sales of adjusted prescription, for last year. Calculation Used: Total Net Sales of Adjusted Prescription/Total no. of adjusted scripts for Last Year's TTM based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_ly_ttm}/NULLIF(ABS(${count_adjusted_ly_ttm}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_adjusted_scripts_ttm_variance_dollar {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance $ - TTM"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Dollar Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription compared to the last year's TTM based on the period selected"
      type: number
      sql: ${avg_net_sales_adjusted_scripts_ty_ttm} - ${avg_net_sales_adjusted_scripts_ly_ttm} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                       {% else %}
                       <font color="grey">{{ rendered_value }}
                       {% endif %}
                       ;;
    }

    measure: avg_net_sales_adjusted_scripts_ttm_variance {
      label: "TY/LY Avg Net Sales (Per Adjusted Script) Variance % - TTM"
      group_label: "Avg Net Sales (Per Adjusted Script)"
      description: "Percentage Increase/Decrease of Average Net Sales of adjusted prescription. Calculation Used: Total Net Sales of the adjusted Prescription/Total no. of adjusted scripts compared to the last year's TTM based on the period selected"
      type: number
      sql: CAST((${avg_net_sales_adjusted_scripts_ty_ttm} - ${avg_net_sales_adjusted_scripts_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${avg_net_sales_adjusted_scripts_ly_ttm},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                           <font color="red">{{ rendered_value }}
                           {% else %}
                           <font color="grey">{{ rendered_value }}
                           {% endif %}
                           ;;
    }

    measure: sum_budget_net_sales_after_sold_variance_dollar {
      label: "Budget Net Sales After Sold Variance $"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year compared to total Budget Net Sales of same period."
      type: number
      sql: ${sum_net_sales_after_sold} - ${sum_budget_price} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1034] - Budget Net Sales After Sold measures
    measure: sum_budget_net_sales_after_sold_ty_mnth_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - Complete Month"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in complete month compared to total Budget Net Sales for same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_mnth} - ${sum_budget_price_ty_mnth} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ty_qtr_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - Complete Quarter"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in complete quarter compared to total Budget Net Sales for same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_qtr} - ${sum_budget_price_ty_qtr} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ty_wk_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - Complete Week"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in complete week compared to total Budget Net Sales for same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_wk} - ${sum_budget_price_ty_wk} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ty_mtd_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - MTD"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in MTD compared to total Budget Net Sales for same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_mtd} - ${sum_budget_price_ty_mtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ty_qtd_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - QTD"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in QTD compared to total Budget Net Sales for same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_qtd} - ${sum_budget_price_ty_qtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ty_rolling_13_week_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - ROLLING 13 WEEK"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in ROLLING 13 WEEK compared to total Budget Net Sales for same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_rolling_13_week} - ${sum_budget_price_ty_rolling_13_week} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ty_ttm_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - TTM"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in TTM compared to total Budget Net Sales for same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_ttm} - ${sum_budget_price_ty_ttm} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ty_wtd_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - WTD"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in WTD compared to total Budget Net Sales for same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_wtd} - ${sum_budget_price_ty_wtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ty_ytd_variance_dollar {
      label: "Budget Net Sales After Sold Variance $ - YTD"
      group_label: "Budget Net Sales After Sold"
      description: "Dollar Increase/Decrease of total net sales of prescription after sold, this year in YTD compared to total Budget Net Sales for the same period."
      type: number
      sql: ${sum_net_sales_after_sold_ty_ytd} - ${sum_budget_price_ty_ytd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_variance {
      label: "Budget Net Sales After Sold Variance %"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease of total net sales of prescription after sold, this year compared to total budget net sales.(Use this budget variance only for day level analysis)"
      type: number
      sql: CAST((${sum_net_sales_after_sold} - ${sum_budget_price}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_wk_variance {
      label: "Budget Net Sales After Sold Variance % - Complete Week"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in complete week compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_wk} - ${sum_budget_price_ty_wk}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_wtd_variance {
      label: "Budget Net Sales After Sold Variance % - WTD"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in WTD compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_wtd} - ${sum_budget_price_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_mnth_variance {
      label: "Budget Net Sales After Sold Variance % - Complete Month"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in complete month compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_mnth} - ${sum_budget_price_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_mtd_variance {
      label: "Budget Net Sales After Sold Variance % - MTD"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in MTD compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_mtd} - ${sum_budget_price_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_qtr_variance {
      label: "Budget Net Sales After Sold Variance % - Complete Quarter"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in complete quarter compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_qtr} - ${sum_budget_price_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_qtd_variance {
      label: "Budget Net Sales After Sold Variance % - QTD"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in QTD compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_qtd} - ${sum_budget_price_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ytd_variance {
      label: "Budget Net Sales After Sold Variance % - YTD"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in YTD compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_ytd} - ${sum_budget_price_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_rolling_13_week_variance {
      label: "Budget Net Sales After Sold Variance % - ROLLING 13 WEEK"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in ROLLING 13 WEEK compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_rolling_13_week} - ${sum_budget_price_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_after_sold_ttm_variance {
      label: "Budget Net Sales After Sold Variance % - TTM"
      group_label: "Budget Net Sales After Sold"
      description: "Percentage Increase/Decrease in total net sales of prescription after sold, this year in TTM compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_after_sold_ty_ttm} - ${sum_budget_price_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    ## [ERXLPS-1010] The Followiing sum_budget_net_sales group of measures uses the "sum_budget_price" measure in the logic, the sum_budget_price and the sum_net_sales measures are the same measure with the same source and same logic. The sum_budget_price is really a duplicate
    ## If we want to change these later they should all be changed and cleaned up at the same time.
    measure: sum_budget_net_sales {
      label: "Budget Net Sales"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription"
      type: sum_distinct
      sql: COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${store_budget.daily_pharmacy_sales_budget}  END,0) ;;
      sql_distinct_key: ${TABLE}.chain_id ||'@'|| ${TABLE}.nhin_store_id ||'@'|| ${report_calendar_global.calendar_date}||'@'|| ${report_calendar_global.type} ;; #[ERXLPS-1470] #ERXLPS-1649 #[ERXLPS-2479]
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_variance_dollar {
      label: "Budget Net Sales Variance $"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription this year compared to total Budget Net Sales."
      type: number
      sql: ${sum_net_sales} - ${sum_budget_price} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_variance {
      label: "Budget Net Sales Variance %"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease of total net sales of prescription this year compared to total Budget Net Sales."
      type: number
      sql: CAST((${sum_net_sales} - ${sum_budget_price}) AS DECIMAL(38,4))/NULLIF(${sum_budget_price},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_wk {
      label: "Budget Net Sales - Complete Week"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year for complete week based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN (${store_budget.wk_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_wk_variance_dollar {
      label: "Budget Net Sales Variance $ - Complete Week"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in complete week compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_wk} - ${sum_budget_net_sales_ty_wk} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_wk with sum_budget_net_sales_ty_wk in SQL logic.
    measure: sum_budget_net_sales_wk_variance {
      label: "Budget Net Sales Variance % - Complete Week"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in complete week compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_wk} - ${sum_budget_net_sales_ty_wk}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_wtd {
      label: "Budget Net Sales - WTD"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year in WTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN (${store_budget.wtd_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_wtd_variance_dollar {
      label: "Budget Net Sales Variance $ - WTD"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in WTD compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_wtd} - ${sum_budget_net_sales_ty_wtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_wtd with sum_budget_net_sales_ty_wtd in SQL logic.
    measure: sum_budget_net_sales_wtd_variance {
      label: "Budget Net Sales Variance % - WTD"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in WTD compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_wtd} - ${sum_budget_net_sales_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_mnth {
      label: "Budget Net Sales - Complete Month"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year for complete month based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN (${store_budget.mnth_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_mnth_variance_dollar {
      label: "Budget Net Sales Variance $ - Complete Month"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in complete month compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_mnth} - ${sum_budget_net_sales_ty_mnth} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_mnth with sum_budget_net_sales_ty_mnth in SQL logic.
    measure: sum_budget_net_sales_mnth_variance {
      label: "Budget Net Sales Variance % - Complete Month"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in complete month compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_mnth} - ${sum_budget_net_sales_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_mtd {
      label: "Budget Net Sales - MTD"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year in MTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN (${store_budget.mtd_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_mtd_variance_dollar {
      label: "Budget Net Sales Variance $ - MTD"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in MTD compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_mtd} - ${sum_budget_net_sales_ty_mtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_mtd with sum_budget_net_sales_ty_mtd in SQL logic.
    measure: sum_budget_net_sales_mtd_variance {
      label: "Budget Net Sales Variance % - MTD"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in MTD compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_mtd} - ${sum_budget_net_sales_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_qtr {
      label: "Budget Net Sales - Complete Quarter"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year for complete quarter based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN (${store_budget.qtr_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_qtr_variance_dollar {
      label: "Budget Net Sales Variance $ - Complete Quarter"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in complete quarter compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_qtr} - ${sum_budget_net_sales_ty_qtr} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_qtr with sum_budget_net_sales_ty_qtr in SQL logic.
    measure: sum_budget_net_sales_qtr_variance {
      label: "Budget Net Sales Variance % - Complete Quarter"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in complete quarter compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_qtr} - ${sum_budget_net_sales_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_qtd {
      label: "Budget Net Sales - QTD"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year in QTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN (${store_budget.qtd_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_qtd_variance_dollar {
      label: "Budget Net Sales Variance $ - QTD"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in QTD compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_qtd} - ${sum_budget_net_sales_ty_qtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_qtd with sum_budget_net_sales_ty_qtd in SQL logic.
    measure: sum_budget_net_sales_qtd_variance {
      label: "Budget Net Sales Variance % - QTD"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in QTD compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_qtd} - ${sum_budget_net_sales_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_ytd {
      label: "Budget Net Sales - YTD"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year in YTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN (${store_budget.ytd_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_ytd_variance_dollar {
      label: "Budget Net Sales Variance $ - YTD"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in YTD compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_ytd} - ${sum_budget_net_sales_ty_ytd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_ytd with sum_budget_net_sales_ty_ytd in SQL logic.
    measure: sum_budget_net_sales_ytd_variance {
      label: "Budget Net Sales Variance % - YTD"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in YTD compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_ytd} - ${sum_budget_net_sales_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_rolling_13_week {
      label: "Budget Net Sales - ROLLING 13 WEEK"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year in ROLLING 13 WEEK based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN (${store_budget.roll_week_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_rolling_13_week_variance_dollar {
      label: "Budget Net Sales Variance $ - ROLLING 13 WEEK"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in ROLLING 13 WEEK compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_rolling_13_week} - ${sum_budget_net_sales_ty_rolling_13_week} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_rolling_13_week with sum_budget_net_sales_ty_rolling_13_week in SQL logic.
    measure: sum_budget_net_sales_rolling_13_week_variance {
      label: "Budget Net Sales Variance % - ROLLING 13 WEEK"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in ROLLING 13 WEEK compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_rolling_13_week} - ${sum_budget_net_sales_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] Budget Net Sales measure added
    measure: sum_budget_net_sales_ty_ttm {
      label: "Budget Net Sales - TTM"
      group_label: "Budget Net Sales"
      description: "Total budget Net Sales of the prescription, this year in TTM based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN (${store_budget.ttm_pharmacy_sales_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_sales_ty_ttm_variance_dollar {
      label: "Budget Net Sales Variance $ - TTM"
      group_label: "Budget Net Sales"
      description: "Dollar Increase/Decrease of total net sales of prescription, this year in TTM compared to total budget net sales for same period"
      type: number
      sql: ${sum_net_sales_ty_ttm} - ${sum_budget_net_sales_ty_ttm} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1035] - Replaced sum_budget_price_ty_ttm with sum_budget_net_sales_ty_ttm in SQL logic.
    measure: sum_budget_net_sales_ttm_variance {
      label: "Budget Net Sales Variance % - TTM"
      group_label: "Budget Net Sales"
      description: "Percentage Increase/Decrease in total net sales of prescription, this year in TTM compared to total budget net sales for same period"
      type: number
      sql: CAST((${sum_net_sales_ty_ttm} - ${sum_budget_net_sales_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_sales_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_budget_net_sales {
      label: "Budget Avg Net Sales (per script)"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script"
      type: number
      sql: COALESCE(${sum_budget_price}/NULLIF(${budget_count},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_dollar {
      label: "Budget Avg Net Sales (per script) Variance $"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription, this year compared to total budget average net sales."
      type: number
      sql: ${avg_net_sales} - ${avg_budget_net_sales} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance %"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription, this year compared to total budget average net sales."
      type: number
      sql: CAST((${avg_net_sales} - ${avg_budget_net_sales}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    #[ERXLPS-1034] - Budget Avg Net Sales (per script) measures
    measure: avg_budget_net_sales_ty_mnth {
      label: "Budget Avg Net Sales (per script) - Complete Month"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script for complete month based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_mnth}/NULLIF(${budget_count_ty_mnth},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                       <font color="red">{{ rendered_value }}
                       {% else %}
                       <font color="grey">{{ rendered_value }}
                       {% endif %}
                       ;;
    }

    measure: avg_budget_net_sales_variance_mnth_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - Complete Month"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription for complete month, this year compared to total budget average net sales of complete month based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_mnth} - ${avg_budget_net_sales_ty_mnth} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_mnth_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - Complete Month"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription for complete month, this year compared to total budget average net sales of complete month based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_mnth} - ${avg_budget_net_sales_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_mnth},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ty_qtr {
      label: "Budget Avg Net Sales (per script) - Complete Quarter"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script for complete quarter based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_qtr}/NULLIF(${budget_count_ty_qtr},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_qtr_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - Complete Quarter"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription for complete quarter, this year compared to total budget average net sales of complete quarter based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_qtr} - ${avg_budget_net_sales_ty_qtr} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_qtr_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - Complete Quarter"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription for complete quarter, this year compared to total budget average net sales of complete quarter based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_qtr} - ${avg_budget_net_sales_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_qtr},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ty_wk {
      label: "Budget Avg Net Sales (per script) - Complete Week"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script for complete week based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_wk}/NULLIF(${budget_count_ty_wk},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_wk_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - Complete Week"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription for complete week, this year compared to total budget average net sales of complete week based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_wk} - ${avg_budget_net_sales_ty_wk} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_wk_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - Complete Week"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription for complete week, this year compared to total budget average net sales of complete week based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_wk} - ${avg_budget_net_sales_ty_wk}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_wk},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ty_mtd {
      label: "Budget Avg Net Sales (per script) - MTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script in MTD based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_mtd}/NULLIF(${budget_count_ty_mtd},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_mtd_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - MTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription in MTD, this year compared to total budget average net sales in MTD based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_mtd} - ${avg_budget_net_sales_ty_mtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_mtd_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - MTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription in MTD, this year compared to total budget average net sales in MTD based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_mtd} - ${avg_budget_net_sales_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_mtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ty_qtd {
      label: "Budget Avg Net Sales (per script) - QTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script in QTD based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_qtd}/NULLIF(${budget_count_ty_qtd},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_qtd_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - QTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription in QTD, this year compared to total budget average net sales in QTD based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_qtd} - ${avg_budget_net_sales_ty_qtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_qtd_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - QTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription in QTD, this year compared to total budget average net sales in QTD based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_qtd} - ${avg_budget_net_sales_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_qtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ty_rolling_13_week {
      label: "Budget Avg Net Sales (per script) - ROLLING 13 WEEK"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script in ROLLING 13 WEEK based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_rolling_13_week}/NULLIF(${budget_count_ty_rolling_13_week},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_rolling_13_week_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - ROLLING 13 WEEK"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription in ROLLING 13 WEEK, this year compared to total budget average net sales in ROLLING 13 WEEK based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_rolling_13_week} - ${avg_budget_net_sales_ty_rolling_13_week} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_rolling_13_week_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - ROLLING 13 WEEK"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription in ROLLING 13 WEEK, this year compared to total budget average net sales in ROLLING 13 WEEK based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_rolling_13_week} - ${avg_budget_net_sales_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ty_ttm {
      label: "Budget Avg Net Sales (per script) - TTM"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script in TTM based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_ttm}/NULLIF(${budget_count_ty_ttm},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_ttm_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - TTM"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription in TTM, this year compared to total budget average net sales in TTM based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_ttm} - ${avg_budget_net_sales_ty_ttm} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ttm_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - TTM"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription in TTM, this year compared to total budget average net sales in TTM based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_ttm} - ${avg_budget_net_sales_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_ttm},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ty_wtd {
      label: "Budget Avg Net Sales (per script) - WTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script in WTD based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_wtd}/NULLIF(${budget_count_ty_wtd},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_wtd_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - WTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription in WTD, this year compared to total budget average net sales in WTD based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_wtd} - ${avg_budget_net_sales_ty_wtd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_wtd_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - WTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription in WTD, this year compared to total budget average net sales in WTD based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_wtd} - ${avg_budget_net_sales_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_wtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ty_ytd {
      label: "Budget Avg Net Sales (per script) - YTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Budget Average Net Sales per script in YTD based on the period selected"
      type: number
      sql: COALESCE(${sum_budget_price_ty_ytd}/NULLIF(${budget_count_ty_ytd},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_variance_ytd_dollar {
      label: "Budget Avg Net Sales (per script) Variance $ - YTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription in YTD, this year compared to total budget average net sales in YTD based on the period selected."
      type: number
      sql: ${avg_net_sales_ty_ytd} - ${avg_budget_net_sales_ty_ytd} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_ytd_variance_percent {
      label: "Budget Avg Net Sales (per script) Variance % - YTD"
      group_label: "Budget Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription in YTD, this year compared to total budget average net sales in YTD based on the period selected."
      type: number
      sql: CAST((${avg_net_sales_ty_ytd} - ${avg_budget_net_sales_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_ty_ytd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold {
      label: "Budget Avg Net Sales After Sold (per script)"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales After Sold."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price}/NULLIF(${budget_count},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance %"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription, this year compared to total budget average net sales."
      type: number
      sql: CAST((${avg_net_sales_after_sold} - ${avg_budget_net_sales_after_sold}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_wk {
      label: "Budget Avg Net Sales After Sold (per script) - Complete Week"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales After Sold."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_wk}/NULLIF(${budget_count_ty_wk},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_wk_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % - Complete Week"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in complete week compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_wk} - ${avg_budget_net_sales_after_sold_ty_wk}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_wk},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_wtd {
      label: "Budget Avg Net Sales After Sold (per script) - WTD"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_wtd}/NULLIF(${budget_count_ty_wtd},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_wtd_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % -WTD"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in WTD compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_wtd} - ${avg_budget_net_sales_after_sold_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_wtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_mnth {
      label: "Budget Avg Net Sales After Sold (per script) - Complete Month"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_mnth}/NULLIF(${budget_count_ty_mnth},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_mnth_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % - Complete Month"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in complete month compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_mnth} - ${avg_budget_net_sales_after_sold_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_mnth},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_mtd {
      label: "Budget Avg Net Sales After Sold (per script) - MTD"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_mtd}/NULLIF(${budget_count_ty_mtd},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_mtd_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % - MTD"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in MTD compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_mtd} - ${avg_budget_net_sales_after_sold_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_mtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_qtr {
      label: "Budget Avg Net Sales After Sold (per script) - Complete Quarter"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_qtr}/NULLIF(${budget_count_ty_qtr},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_qtr_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % - Complete Quarter"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in complete quarter compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_qtr} - ${avg_budget_net_sales_after_sold_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_qtr},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_qtd {
      label: "Budget Avg Net Sales After Sold (per script) - QTD"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_qtd}/NULLIF(${budget_count_ty_qtd},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_qtd_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % - QTD"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in QTD compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_qtd} - ${avg_budget_net_sales_after_sold_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_qtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_ytd {
      label: "Budget Avg Net Sales After Sold (per script) - YTD"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_ytd}/NULLIF(${budget_count_ty_ytd},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ytd_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % - YTD"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in YTD compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_ytd} - ${avg_budget_net_sales_after_sold_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_ytd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_rolling_13_week {
      label: "Budget Avg Net Sales After Sold (per script) - ROLLING 13 WEEK"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_rolling_13_week}/NULLIF(${budget_count_ty_rolling_13_week},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_rolling_13_week_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % - ROLLING 13 WEEK"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in ROLLING 13 WEEK compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_rolling_13_week} - ${avg_budget_net_sales_after_sold_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ty_ttm {
      label: "Budget Avg Net Sales After Sold (per script) - TTM"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Average Net Sales."
      type: number
      hidden: yes
      sql: COALESCE(${sum_budget_price_ty_ttm}/NULLIF(${budget_count_ty_ttm},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_net_sales_after_sold_ttm_variance {
      label: "Budget Avg Net Sales After Sold (per script) Variance % - TTM"
      group_label: "Budget Avg Net Sales After Sold (per script)"
      description: "Percentage Increase/Decrease in Average Net Sales of prescription this year in TTM compared to total budget average net sales for same period"
      type: number
      sql: CAST((${avg_net_sales_after_sold_ty_ttm} - ${avg_budget_net_sales_after_sold_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${avg_budget_net_sales_after_sold_ty_ttm},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_margin {
      label: "Budget Margin (per day)"
      group_label: "Budget Margin"
      description: "Total Budget Margin of prescription"
      type: number
      hidden: yes
      sql: ${store_budget.daily_pharmacy_margin_budget} ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_budget_margin {
      label: "Budget Margin"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription"
      type: sum_distinct
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${store_budget.daily_pharmacy_margin_budget}  END ;;
      sql_distinct_key: ${TABLE}.chain_id ||'@'|| ${TABLE}.nhin_store_id ||'@'|| ${report_calendar_global.calendar_date}||'@'|| ${report_calendar_global.type} ;; #[ERXLPS-1470] #ERXLPS-1649 #[ERXLPS-2479]
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_wk {
      hidden: yes
      label: "Budget Margin - Complete Week"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription for complete Week"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN (${store_budget.wk_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_wtd {
      hidden: yes
      label: "Budget Margin - WTD"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN (${store_budget.wtd_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_mnth {
      hidden: yes
      label: "Budget Margin - Complete Month"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription for complete month based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN (${store_budget.mnth_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_mtd {
      hidden: yes
      label: "Budget Margin - MTD"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription for MTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN (${store_budget.mtd_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_qtr {
      hidden: yes
      label: "Budget Margin - Complete Quarter"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription for complete quarter based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN (${store_budget.qtr_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_qtd {
      hidden: yes
      label: "Budget Margin - QTD"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription for QTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN (${store_budget.qtd_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_ytd {
      hidden: yes
      label: "Budget Margin - YTD"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription for YTD based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN (${store_budget.ytd_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_rolling_13_week {
      hidden: yes
      label: "Budget Margin - ROLLING 13 WEEK"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription for ROLLING 13 WEEK based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN (${store_budget.roll_week_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_margin_ty_ttm {
      hidden: yes
      label: "Budget Margin - TTM"
      group_label: "Budget Margin"
      description: "Total budget margin of prescription for TTM based on the period selected"
      type: number
      sql: (( SUM(DISTINCT (CAST(FLOOR(COALESCE(COALESCE(CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN (${store_budget.ttm_pharmacy_margin_budget})  END,0),0)*(1000000*1.0)) AS DECIMAL(38,0))) + (MD5_NUMBER(sales.chain_id ||'@'|| sales.nhin_store_id) % 1.0e2)::NUMERIC(38,0) ) - SUM(DISTINCT (MD5_NUMBER(${chain_id} ||'@'|| ${nhin_store_id}) % 1.0e2)::NUMERIC(38,0)) )  / (1000000*1.0)) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_variance {
      label: "Budget Net Margin $ Variance %"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease of Net Margin of prescription, based on Net Margin this year compared to Budget Net Margin."
      type: number
      sql: CAST((${sum_net_gross_margin} - ${sum_budget_margin}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_wk_variance {
      label: "Budget Net Margin $ Variance % - Complete Week"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin this year in complete week compared to Budget Net Margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_wk} - ${sum_budget_margin_ty_wk}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_wtd_variance {
      label: "Budget Net Margin $ Variance % - WTD"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Margin this year in WTD compared to Budget Net Margin in WTD."
      type: number
      sql: CAST((${sum_net_gross_margin_ty_wtd} - ${sum_budget_margin_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_mnth_variance {
      label: "Budget Net Margin $ Variance % - Complete Month"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Margin this year in complete month compared to Budget Net Margin in complete month."
      type: number
      sql: CAST((${sum_net_gross_margin_ty_mnth} - ${sum_budget_margin_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_mtd_variance {
      label: "Budget Net Margin $ Variance % - MTD"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Margin this year in MTD compared to this year Net Margin in MTD."
      type: number
      sql: CAST((${sum_net_gross_margin_ty_mtd} - ${sum_budget_margin_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_qtr_variance {
      label: "Budget Net Margin $ Variance % - Complete Quarter"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Margin this year in complete quarter compared to Budget Net Margin in complete quarter."
      type: number
      sql: CAST((${sum_net_gross_margin_ty_qtr} - ${sum_budget_margin_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_qtd_variance {
      label: "Budget Net Margin $ Variance % - QTD"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Margin this year in QTD compared to Budget Net Margin in QTD."
      type: number
      sql: CAST((${sum_net_gross_margin_ty_qtd} - ${sum_budget_margin_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_ytd_variance {
      label: "Budget Net Margin $ Variance % - YTD"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease Net Margin of prescription, based on Net Margin this year in YTD compared to Budget Net Margin in YTD."
      type: number
      sql: CAST((${sum_net_gross_margin_ty_ytd} - ${sum_budget_margin_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_rolling_13_week_variance {
      label: "Budget Net Margin $ Variance % - ROLLING 13 WEEK"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin this year in ROLLING 13 WEEK compared to Budget Net Margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_rolling_13_week} - ${sum_budget_margin_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_ttm_variance {
      label: "Budget Net Margin $ Variance % - TTM"
      group_label: "Budget Net Margin $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin this year in TTM compared to Budget Net Margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_ty_ttm} - ${sum_budget_margin_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_variance {
      label: "Budget RNAC $ Variance %"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease of Net Margin of prescription, based on Net Margin After Sold this year compared to Budget Net Margin."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold} - ${sum_budget_margin}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_wk_variance {
      label: "Budget RNAC $ Variance % - Complete Week"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin of prescription after sold this year in complete week compared to Budget Net Margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_wk} - ${sum_budget_margin_ty_wk}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_wtd_variance {
      label: "Budget RNAC $ Variance % - WTD"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin After Sold this year in WTD compared to Budget Net Margin After Sold for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_wtd} - ${sum_budget_margin_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_mnth_variance {
      label: "Budget RNAC $ Variance % - Complete Month"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin After Sold this year in complete month compared to Budget Net Margin After Sold for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_mnth} - ${sum_budget_margin_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_mtd_variance {
      label: "Budget RNAC $ Variance % - MTD"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin After Sold this year in MTD compared to Budget Net Margin After Sold for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_mtd} - ${sum_budget_margin_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_qtr_variance {
      label: "Budget RNAC $ Variance % - Complete Quarter"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin After Sold this year in complete quarter compared to Budget Net Margin After Sold for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_qtr} - ${sum_budget_margin_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_qtd_variance {
      label: "Budget RNAC $ Variance % - QTD"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin After Sold this year in QTD compared to Budget Net Margin After Sold for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_qtd} - ${sum_budget_margin_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_ytd_variance {
      label: "Budget RNAC $ Variance % - YTD"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin After Sold this year in YTD compared to Budget Net Margin After Sold for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_ytd} - ${sum_budget_margin_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_rolling_13_week_variance {
      label: "Budget RNAC $ Variance % - ROLLING 13 WEEK"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin After Sold this year in ROLLING 13 WEEK compared to Budget Net Margin After Sold for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_rolling_13_week} - ${sum_budget_margin_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_ttm_variance {
      label: "Budget RNAC $ Variance % - TTM"
      group_label: "Budget RNAC $"
      description: "Percentage Increase/Decrease in Net Margin of prescription, based on Net Margin After Sold this year in TTM compared to Budget Net Margin After Sold for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_ty_ttm} - ${sum_budget_margin_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${sum_budget_margin_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct {
      label: "Budget Net Margin %"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin})/NULLIF(${sum_budget_price},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_variance {
      label: "Budget Net Margin % Variance %"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales this year compared to total budget margin."
      type: number
      sql: CAST((${sum_net_gross_margin_pct} - ${sum_budget_net_gross_margin_pct}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_wk {
      label: "Budget Net Margin % - Complete Week"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_wk})/NULLIF(${sum_budget_price_ty_wk},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_wk_variance {
      label: "Budget Net Margin % Variance % - Complete Week"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in complete week compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_wk} - ${sum_budget_net_gross_margin_pct_ty_wk}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_wtd {
      label: "Budget Net Margin % - WTD"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_wtd})/NULLIF(${sum_budget_price_ty_wtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_wtd_variance {
      label: "Budget Net Margin % Variance % - WTD"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in WTD compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_wtd} - ${sum_budget_net_gross_margin_pct_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_mnth {
      label: "Budget Net Margin % - Complete Month"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_mnth})/NULLIF(${sum_budget_price_ty_mnth},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_mnth_variance {
      label: "Budget Net Margin % Variance % - Complete Month"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in complete month compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_mnth} - ${sum_budget_net_gross_margin_pct_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_mtd {
      label: "Budget Net Margin % - MTD"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_mtd})/NULLIF(${sum_budget_price_ty_mtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_mtd_variance {
      label: "Budget Net Margin % Variance % - MTD"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in MTD compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_mtd} - ${sum_budget_net_gross_margin_pct_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_qtr {
      label: "Budget Net Margin % - Complete Quarter"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_qtr})/NULLIF(${sum_budget_price_ty_qtr},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_qtr_variance {
      label: "Budget Net Margin % Variance % - Complete Quarter"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in complete quarter compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_qtr} - ${sum_budget_net_gross_margin_pct_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_qtd {
      label: "Budget Net Margin % - QTD"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_qtd})/NULLIF(${sum_budget_price_ty_qtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_qtd_variance {
      label: "Budget Net Margin % Variance % - QTD"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in QTD compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_qtd} - ${sum_budget_net_gross_margin_pct_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_ytd {
      label: "Budget Net Margin % - YTD"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      sql: (${sum_budget_margin_ty_ytd})/NULLIF(${sum_budget_price_ty_ytd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_ytd_variance {
      label: "Budget Net Margin % Variance % - YTD"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in YTD compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_ytd} - ${sum_budget_net_gross_margin_pct_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_rolling_13_week {
      label: "Budget Net Margin % - ROLLING 13 WEEK"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_rolling_13_week})/NULLIF(${sum_budget_price_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_rolling_13_week_variance {
      label: "Budget Net Margin % Variance % - ROLLING 13 WEEK"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in ROLLING 13 WEEK compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_rolling_13_week} - ${sum_budget_net_gross_margin_pct_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_pct_ty_ttm {
      label: "Budget Net Margin % - TTM"
      group_label: "Budget Net Margin %"
      description: "Net % Margin of prescription, based on Net Sales."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_ttm})/NULLIF(${sum_budget_price_ty_ttm},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_pct_ttm_variance {
      label: "Budget Net Margin % Variance % - TTM"
      group_label: "Budget Net Margin %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales this year in TTM compared to total budget margin for same period"
      type: number
      sql: CAST((${sum_net_gross_margin_pct_ty_ttm} - ${sum_budget_net_gross_margin_pct_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_pct_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct {
      label: "Budget RNAC %"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes
      sql: (${sum_budget_margin})/NULLIF(${sum_budget_price},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_variance {
      label: "Budget RNAC % Variance %"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales After Sold this year compared to total budget margin."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct} - ${sum_budget_net_gross_margin_after_sold_pct}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_wk {
      label: "Budget RNAC % - Complete Week"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes
      sql: (${sum_budget_margin_ty_wk})/NULLIF(${sum_budget_price_ty_wk},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_wk_variance {
      label: "Budget RNAC % Variance % - Complete Week"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in complete week compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_wk} - ${sum_budget_net_gross_margin_after_sold_pct_ty_wk}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_wk},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_wtd {
      label: "Budget RNAC % - WTD"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: (${sum_budget_margin_ty_wtd})/NULLIF(${sum_budget_price_ty_wtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_wtd_variance {
      label: "Budget RNAC % Variance % - WTD"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in WTD compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_wtd} - ${sum_budget_net_gross_margin_after_sold_pct_ty_wtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_wtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_mnth {
      label: "Budget RNAC % - Complete Month"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: (${sum_budget_margin_ty_mnth})/NULLIF(${sum_budget_price_ty_mnth},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_mnth_variance {
      label: "Budget RNAC % Variance % - Complete Month"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in complete month compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_mnth} - ${sum_budget_net_gross_margin_after_sold_pct_ty_mnth}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_mnth},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_mtd {
      label: "Budget RNAC % - MTD"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: (${sum_budget_margin_ty_mtd})/NULLIF(${sum_budget_price_ty_mtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_mtd_variance {
      label: "Budget RNAC % Variance % - MTD"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in MTD compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_mtd} - ${sum_budget_net_gross_margin_after_sold_pct_ty_mtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_mtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_qtr {
      label: "Budget RNAC % - Complete Quarter"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: (${sum_budget_margin_ty_qtr})/NULLIF(${sum_budget_price_ty_qtr},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_qtr_variance {
      label: "Budget RNAC % Variance % - Complete Quarter"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in complete quarter compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_qtr} - ${sum_budget_net_gross_margin_after_sold_pct_ty_qtr}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_qtr},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_qtd {
      label: "Budget RNAC % - QTD"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: (${sum_budget_margin_ty_qtd})/NULLIF(${sum_budget_price_ty_qtd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_qtd_variance {
      label: "Budget RNAC % Variance % - QTD"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in QTD compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_qtd} - ${sum_budget_net_gross_margin_after_sold_pct_ty_qtd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_qtd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_ytd {
      label: "Budget RNAC % - YTD"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: (${sum_budget_margin_ty_ytd})/NULLIF(${sum_budget_price_ty_ytd},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ytd_variance {
      label: "Budget RNAC % Variance % - YTD"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in YTD compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_ytd} - ${sum_budget_net_gross_margin_after_sold_pct_ty_ytd}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_ytd},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_rolling_13_week {
      label: "Budget RNAC % - ROLLING 13 WEEK"
      group_label: "Budget RNAC %"
      description: "Budget Net % MArgin of prescription, based on Net Sales after sold."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: (${sum_budget_margin_ty_rolling_13_week})/NULLIF(${sum_budget_price_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_rolling_13_week_variance {
      label: "Budget RNAC % Variance % - ROLLING 13 WEEK"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in ROLLING 13 WEEK compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_rolling_13_week} - ${sum_budget_net_gross_margin_after_sold_pct_ty_rolling_13_week}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_rolling_13_week},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ty_ttm {
      label: "Budget RNAC % - TTM"
      group_label: "Budget RNAC %"
      description: "Budget Net % Margin of prescription, based on Net Sales After Sold."
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: (${sum_budget_margin_ty_ttm})/NULLIF(${sum_budget_price_ty_ttm},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_budget_net_gross_margin_after_sold_pct_ttm_variance {
      label: "Budget RNAC % Variance % - TTM"
      group_label: "Budget RNAC %"
      description: "Percentage Increase/Decrease in Net % Margin of prescription, based on Net Sales After Sold this year in TTM compared to total budget margin for same period"
      type: number
      hidden: yes #[ERXLPS-1454] - Hiding RNAC and Price After Sold measures in Sales Explore
      sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_ttm} - ${sum_budget_net_gross_margin_after_sold_pct_ty_ttm}) AS DECIMAL(38,4))/NULLIF(${sum_budget_net_gross_margin_after_sold_pct_ty_ttm},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

# [ERX-3509] - Added new measures for pharmacy_brand_scripts_budget, pharmacy_generic_scripts_budget,pharmacy_brand_sales_budget,pharmacy_generic_sales_budget
    measure: sum_budget_brand_sales {
      label: "Budget Brand Sales"
      group_label: "Budget Brand Sales"
      description: "Total Budget Brand Sales of the prescription"
      type: sum_distinct
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${store_budget.daily_pharmacy_brand_sales_budget}  END ;;
      sql_distinct_key: ${TABLE}.chain_id ||'@'|| ${TABLE}.nhin_store_id ||'@'|| ${report_calendar_global.calendar_date}||'@'|| ${report_calendar_global.type} ;; #[ERXLPS-1470] #ERXLPS-1649 #[ERXLPS-2479]
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_brand_sales_variance_dollar {
      label: "Budget Brand Sales Variance $ *"
      group_label: "Budget Brand Sales"
      description: "Dollar Increase/Decrease of total net brand sales of prescription this year compared to total Budget Brand Sales. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${sum_net_sales_brand} - ${sum_budget_brand_sales} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_brand_sales_variance {
      label: "Budget Brand Sales Variance % *"
      group_label: "Budget Brand Sales"
      description: "Percentage Increase/Decrease of total net brand sales of prescription this year compared to total Budget Brand Sales. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${sum_net_sales_brand} - ${sum_budget_brand_sales}) AS DECIMAL(38,4))/NULLIF(${sum_budget_brand_sales},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_generic_sales {
      label: "Budget Generic Sales"
      group_label: "Budget Generic Sales"
      description: "Total Budget Generic Sales of the prescription"
      type: sum_distinct
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${store_budget.daily_pharmacy_generic_sales_budget}  END ;;
      sql_distinct_key: ${TABLE}.chain_id ||'@'|| ${TABLE}.nhin_store_id ||'@'|| ${report_calendar_global.calendar_date}||'@'|| ${report_calendar_global.type} ;; #[ERXLPS-1470] #ERXLPS-1649 #[ERXLPS-2479]
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_generic_sales_variance_dollar {
      label: "Budget Generic Sales Variance $ *"
      group_label: "Budget Generic Sales"
      description: "Dollar Increase/Decrease of total net generic sales of prescription this year compared to total Budget Generic Sales. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${sum_net_sales_generic} - ${sum_budget_generic_sales} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_budget_generic_sales_variance {
      label: "Budget Generic Sales Variance % *"
      group_label: "Budget Generic Sales"
      description: "Percentage Increase/Decrease of total net generic sales of prescription this year compared to total Budget Generic Sales. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${sum_net_sales_generic} - ${sum_budget_generic_sales}) AS DECIMAL(38,4))/NULLIF(${sum_budget_generic_sales},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    dimension: budget_brand_count_reference {
      label: "Brand Scripts"
      description: "Total brand script volume without any adjustment"
      type: number
      hidden: yes
      sql: ${store_budget.daily_pharmacy_brand_scripts_budget} ;;
    }

    measure: budget_brand_count {
      label: "Budget Brand Scripts"
      group_label: "Budget Brand Scripts"
      description: "Total budget brand script volume without any adjustment"
      type: sum_distinct
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${budget_brand_count_reference} END ;;
      sql_distinct_key: ${TABLE}.chain_id ||'@'|| ${TABLE}.nhin_store_id ||'@'|| ${report_calendar_global.calendar_date}||'@'|| ${report_calendar_global.type} ;; #[ERXLPS-1470] #ERXLPS-1649 #[ERXLPS-2479]
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_brand_count_ly {
      hidden: yes
      label: "LY Budget Brand Scripts"
      group_label: "Budget Brand Scripts"
      description: "Total budget brand script volume without any adjustment for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${budget_brand_count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_brand_count_variance_number {
      label: "Budget Brand Scripts Variance *"
      group_label: "Budget Brand Scripts"
      description: "Increase/Decrease of brand script volume without any adjustment, this year compared to total budget brand script volume. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${count_brand} - ${budget_brand_count} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_brand_count_variance {
      label: "Budget Brand Scripts Variance % *"
      group_label: "Budget Brand Scripts"
      description: "Percentage Increase/Decrease of brand script volume without any adjustment, this year compared to total budget brand script volume. For EPS Stores, by default Brand scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_brand} - ${budget_brand_count}) AS DECIMAL(38,4))/NULLIF(${budget_brand_count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    dimension: budget_generic_count_reference {
      label: "Generic Scripts"
      description: "Total generic script volume without any adjustment"
      type: number
      hidden: yes
      sql: ${store_budget.daily_pharmacy_generic_scripts_budget} ;;
    }

    measure: budget_generic_count {
      label: "Budget Generic Scripts"
      group_label: "Budget Generic Scripts"
      description: "Total budget generic script volume without any adjustment"
      type: sum_distinct
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${budget_generic_count_reference} END ;;
      sql_distinct_key: ${TABLE}.chain_id ||'@'|| ${TABLE}.nhin_store_id ||'@'|| ${report_calendar_global.calendar_date}||'@'|| ${report_calendar_global.type} ;; #[ERXLPS-1470] #ERXLPS-1649 #[ERXLPS-2479]
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_generic_count_ly {
      hidden: yes
      label: "LY Budget Generic Scripts"
      group_label: "Budget Generic Scripts"
      description: "Total budget generic script volume without any adjustment for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${budget_generic_count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: budget_generic_count_variance_number {
      label: "Budget Generic Scripts Variance *"
      group_label: "Budget Generic Scripts"
      description: "Increase/Decrease of generic script volume without any adjustment, this year compared to total budget generic script volume. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${count_generic} - ${budget_generic_count} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: budget_generic_count_variance {
      label: "Budget Generic Scripts Variance % *"
      group_label: "Budget Generic Scripts"
      description: "Percentage Increase/Decrease of generic script volume without any adjustment, this year compared to total budget generic script volume. For EPS Stores, by default Generic scripts is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${count_generic} - ${budget_generic_count}) AS DECIMAL(38,4))/NULLIF(${budget_generic_count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_budget_brand_net_sales {
      label: "Budget Brand Avg Net Sales (per script)"
      group_label: "Budget Brand Avg Net Sales (per script)"
      description: "Budget Brand Average Net Sales per script"
      type: number
      sql: COALESCE(${sum_budget_brand_sales}/NULLIF(${budget_brand_count},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_brand_net_sales_variance_dollar {
      label: "Budget Brand Avg Net Sales (per script) Variance $ *"
      group_label: "Budget Brand Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription, this year compared to total Budget Brand Average net sales. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${avg_net_sales_brand} - ${avg_budget_brand_net_sales} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_brand_net_sales_variance_percent {
      label: "Budget Brand Avg Net Sales (per script) Variance % *"
      group_label: "Budget Brand Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription, this year compared to total Budget Brand Average net sales. For EPS Stores, by default net brand sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${avg_net_sales_brand} - ${avg_budget_brand_net_sales}) AS DECIMAL(38,4))/NULLIF(${avg_budget_brand_net_sales},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_generic_net_sales {
      label: "Budget Generic Avg Net Sales (per script)"
      group_label: "Budget Generic Avg Net Sales (per script)"
      description: "Budget Generic Average Net Sales per script"
      type: number
      sql: COALESCE(${sum_budget_generic_sales}/NULLIF(${budget_generic_count},0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_generic_net_sales_variance_dollar {
      label: "Budget Generic Avg Net Sales (per script) Variance $ *"
      group_label: "Budget Generic Avg Net Sales (per script)"
      description: "Dollar Increase/Decrease of Average Net Sales of prescription, this year compared to total Budget Generic Average net sales. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${avg_net_sales_generic} - ${avg_budget_generic_net_sales} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_budget_generic_net_sales_variance_percent {
      label: "Budget Generic Avg Net Sales (per script) Variance % *"
      group_label: "Budget Generic Avg Net Sales (per script)"
      description: "Percentage Increase/Decrease of Average Net Sales of prescription, this year compared to total Budget Generic Average net sales. For EPS Stores, by default net generic sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: CAST((${avg_net_sales_generic} - ${avg_budget_generic_net_sales}) AS DECIMAL(38,4))/NULLIF(${avg_budget_generic_net_sales},0) ;;
      value_format: "00.00%"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_net_sales_specialty {
      label: "Net Specialty Sales"
      group_label: "Specialty Sales"
      description: "Net Specialty Sales of prescription.(Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${store_drug.drug_specialty} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_specialty_ly {
      label: "LY Net Specialty Sales"
      group_label: "Specialty Sales"
      description: "Net Specialty Sales of prescription for Last Year, based on the period selected.(Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${store_drug.drug_specialty} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_specialty_ty_ly {
      label: "TY & LY Net Specialty Sales"
      group_label: "Specialty Sales"
      description: "Net Specialty Sales of prescription for Current and Last Year, based on the period selected.(Calculation Used: For Cash: Net Sales = Price - Discount, For TP: Net Sales = Net Due + Final Copay - Tax)"
      type: sum
      sql: CASE WHEN ${store_drug.drug_specialty} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_sales_specialty_pct {
      label: "Net Specialty Sales %"
      group_label: "Specialty Sales"
      description: "The Specialty Prescription Net Sales Percentage of Total Prescription Net Sales.(Calculation Used: Total Net Specialty Sales / Total Net Sales)"
      type: number
      sql: CAST((${sum_net_sales_specialty}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_specialty {
      label: "Specialty Scripts"
      group_label: "Specialty Scripts"
      description: "Total Specialty script volume without any adjustment"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${store_drug.drug_specialty} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_specialty_ly {
      label: "LY Specialty Scripts"
      group_label: "Specialty Scripts"
      description: "Total specialty script volume without any adjustment for Last Year, based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${store_drug.drug_specialty} = 'Y' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_specialty_pct {
      label: "Specialty Scripts %"
      group_label: "Specialty Scripts"
      description: "Specialty Scripts percentage of total scripts, without any adjustment.(Calculation Used: Specialty Scripts/Total Scripts)"
      type: number
      sql: CAST((${count_specialty}) AS DECIMAL(17,4))/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_specialty_gross_margin {
      label: "Net Specialty Margin $"
      group_label: "Specialty Margin"
      description: "Net Specialty Margin of prescription, based on Net Sales.(Calculation Used: Net Sales of the Prescription - Acquisition Cost)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and  ${store_drug.drug_specialty} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_specialty_gross_margin_ly {
      label: "LY Net Specialty Margin $"
      group_label: "Specialty Margin"
      description: "Net Specialty Margin of prescription for last year, based on Net Sales and period selected.(Calculation Used: Net Sales of the Prescription - Acquisition Cost)"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and  ${store_drug.drug_specialty} = 'Y' THEN ${net_sales} -  ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_net_sales_specialty {
      label: "Avg Net Specialty Sales (per script)"
      group_label: "Specialty Sales"
      description: "Average Net Specialty Sales, per prescription.(Calculation Used: Total Net Specialty Sales / Total number of Specialty scripts)"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg net sales for credit return scripts.
      sql: COALESCE(${sum_net_sales_specialty}/NULLIF(ABS(${count_specialty}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: count_avg_specialty_ty {
      label: "Avg Specialty Scripts (per Day)"
      group_label: "Specialty Sales"
      description: "Average Specialty script volume without any adjustment, based on the number of days in the reporting period"
      type: number
      sql: COALESCE(SUM(CASE WHEN ${report_calendar_global.type} = 'TY' AND  ${store_drug.drug_specialty} = 'Y' THEN ${count_reference} END)/${report_calendar_global.ty_number_of_days},0) ;;
      value_format: "#,##0.00;(#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_cash_margin {
      label: "Cash Margin $"
      group_label: "Margin $"
      description: "Cash Margin of prescription. Calculation Used: Cash Price of the Prescription - Acquisition Cost"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${price} - ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_cash_margin_pct {
      label: "Cash Gross Margin %"
      group_label: "Other Margin %"
      description: "Cash Margin % of prescription. Calculation Used: (Cash Price of the Prescription - Acquisition Cost)/Cash Price of the Prescription"
      type: number
      sql: ${sum_cash_margin}/NULLIF(${sum_price_cash},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_tp_margin {
      label: "T/P Margin $"
      group_label: "Margin $"
      description: "Third Party Margin of prescription. Calculation Used: Third Party Price of the Prescription - Acquisition Cost"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${price} - ${acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_tp_margin_pct {
      label: "T/P Gross Margin %"
      group_label: "Other Margin %"
      description: "Third Party Margin % of prescription. Calculation Used: (Third Party Price of the Prescription - Acquisition Cost)/Third Party Price of the Prescription"
      type: number
      sql: ${sum_tp_margin}/NULLIF(${sum_price_tp},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - Logic update to calculate measures using MULTI SOURCE /DRUG DISPENSED
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    measure: sum_generic_margin {
      label: "Generic Margin $"
      group_label: "Margin $"
      description: "Generic Margin of prescription. Calculation Used: Generic Price of the Prescription - Acquisition Cost. For EPS Stores, by default generic price is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
             THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'G' THEN ${price} - ${acquisition_cost} END
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} = 'Y'
             THEN ${price} - ${acquisition_cost}
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} = 'Y'
             THEN ${price} - ${acquisition_cost}
        END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_generic_margin_pct {
      label: "Generic Gross Margin % *"
      group_label: "Other Margin %"
      description: "Generic Margin % of prescription. Calculation Used: (Generic Price of the Prescription - Acquisition Cost)/Generic Price of the Prescription.  For EPS Stores, by default generic price is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${sum_generic_margin}/NULLIF(${sum_price_generic},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - Logic update to calculate measures using MULTI SOURCE /DRUG DISPENSED
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    measure: sum_brand_margin {
      label: "Brand Margin $"
      group_label: "Margin $"
      description: "Brand Margin of prescription. Calculation Used: Brand Price of the Prescription - Acquisition Cost"
      type: sum
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
             THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'B' THEN ${price} - ${acquisition_cost} END
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} <> 'Y'
             THEN ${price} - ${acquisition_cost}
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} <> 'Y'
             THEN ${price} - ${acquisition_cost}
        END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_brand_margin_pct {
      label: "Brand Gross Margin % *"
      group_label: "Other Margin %"
      description: "Brand Margin % of prescription. Calculation Used: (Brand Price of the Prescription - Acquisition Cost)/Brand Price of the Prescription. For EPS Stores, by default brand price is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${sum_brand_margin}/NULLIF(${sum_price_brand},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-2055] - Adding Brand Net Margin % and Generic Net Margin %
    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    dimension: net_gross_margin_brand_reference {
      label: "Brand Net Gross Margin $"
      description: "Brand Net Margin of prescription, based on brand Net Sales. Calculation Used: Brand Net Sales of the Prescription - Acquisition Cost. For EPS Stores, by default brand net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
               THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'B' THEN ${net_sales} - ${acquisition_cost} END
               WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} <> 'Y'
               THEN ${net_sales} - ${acquisition_cost}
               WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} <> 'Y'
               THEN ${net_sales} - ${acquisition_cost}
          END ;;
    }
    #ERXDWPS-5130 exposed as part of this US
    measure: sum_net_gross_margin_brand {
      label: "Brand Net Margin $ *"
      group_label: "Margin $"
      description: "Brand Net Margin of prescription, based on Brand Net Sales. Calculation Used: Brand Net Sales of the Prescription - Acquisition Cost. For EPS Stores, by default brand net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_gross_margin_brand_reference} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_brand_pct {
      label: "Brand Net Margin % *"
      group_label: "Other Margin %"
      description: "Brand Net % Margin of prescription, based on Brand Net Sales. Calculation Used: ( (Brand Net Sales of the Prescription - Acquisition Cost)/Brand Net Sales of the Prescription ). For EPS Stores, by default brand net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${sum_net_gross_margin_brand}/NULLIF(${sum_net_sales_brand},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXDWPS-5671] - Corrected source_system_id value for Classic logic.
    dimension: net_gross_margin_generic_reference {
      label: "Generic Net Gross Margin $"
      description: "Generic Net Margin of prescription, based on Generic Net Sales. Calculation Used: Generic Net Sales of the Prescription - Acquisition Cost. For EPS Stores, by default generic net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      hidden: yes
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
               THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'G' THEN ${net_sales} - ${acquisition_cost} END
               WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} = 'Y'
               THEN ${net_sales} - ${acquisition_cost}
               WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} = 'Y'
               THEN ${net_sales} - ${acquisition_cost}
          END ;;
    }
    #ERXDWPS-5130 exposed as part of this US
    measure: sum_net_gross_margin_generic {
      label: "Generic Net Margin $ *"
      group_label: "Margin $"
      description: "Generic Net Margin of prescription, based on Generic Net Sales. Calculation Used: Generic Net Sales of the Prescription - Acquisition Cost. For EPS Stores, by default generic net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_gross_margin_generic_reference} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_net_gross_margin_generic_pct {
      label: "Generic Net Margin % *"
      group_label: "Other Margin %"
      description: "Generic Net % Margin of prescription, based on Generic Net Sales. Calculation Used: ( (Generic Net Sales of the Prescription - Acquisition Cost)/Generic Net Sales of the Prescription ). For EPS Stores, by default generic net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
      type: number
      sql: ${sum_net_gross_margin_generic}/NULLIF(${sum_net_sales_generic},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override {
      label: "Price Overridden Cash Scripts"
      group_label: "Price Override"
      description: "Total number of cash prescriptions that an override was performed on the price amount"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${rx_tx_price_override_yesno} = 'YES' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override_ly {
      label: "LY Price Overridden Cash Scripts"
      group_label: "Price Override"
      description: "Total number of cash prescriptions that an override was performed on the price amount, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${rx_tx_price_override_yesno} = 'YES' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override_variance {
      label: "TY/LY Price Overridden Cash Scripts Variance"
      group_label: "Price Override"
      description: "The difference of total Price Overridden Cash Script volume, without any adjustment, compared to the last year"
      type: number
      sql: (${count_rx_tx_price_override} - ${count_rx_tx_price_override_ly}) ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override_variance_pcnt {
      label: "TY/LY Price Overridden Cash Scripts Variance %"
      group_label: "Price Override"
      description: "Percentage Increase/Decrease of total Price Overridden Cash Script volume, without any adjustment, compared to the last year"
      type: number
      sql: CAST((${count_rx_tx_price_override} - ${count_rx_tx_price_override_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_rx_tx_price_override_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override_pcnt {
      label: "Price Overridden Cash Scripts %"
      group_label: "Price Override"
      description: "The Overridden Cash Scripts percentage of ALL scripts. Overriden Scripts had an override performed on the price amount"
      type: number
      sql: COALESCE(CAST((${count_rx_tx_price_override}) AS DECIMAL(17,4))/NULLIF(${count},0), 0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-993] LY price override scripts % measures
    measure: count_rx_tx_price_override_ly_pcnt {
      label: "LY Price Overridden Cash Scripts %"
      group_label: "Price Override"
      description: "The Overridden Cash Scripts percentage of ALL scripts. Overriden Scripts had an override performed on the price amount, for last year"
      type: number
      sql: COALESCE(CAST((${count_rx_tx_price_override_ly}) AS DECIMAL(17,4))/NULLIF(${count_ly},0), 0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-876] - New measures for Price Overridden added here. Start...
    measure: count_rx_tx_price_override_cash_tp {
      label: "Price Overridden Scripts"
      group_label: "Price Override"
      description: "Total number of scripts that an override was performed on the price amount"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${rx_tx_price_override_yesno} = 'YES' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override_cash_tp_ly {
      label: "LY Price Overridden Scripts"
      group_label: "Price Override"
      description: "Total number of scripts that an override was performed on the price amount, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${rx_tx_price_override_yesno} = 'YES' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override_cash_tp_variance {
      label: "TY/LY Price Overridden Scripts Variance"
      group_label: "Price Override"
      description: "The difference of total Price Overridden Script volume, without any adjustment, compared to the last year"
      type: number
      sql: (${count_rx_tx_price_override_cash_tp} - ${count_rx_tx_price_override_cash_tp_ly}) ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override_cash_tp_variance_pcnt {
      label: "TY/LY Price Overridden Scripts Variance %"
      group_label: "Price Override"
      description: "Percentage Increase/Decrease of total Price Overridden Script volume, without any adjustment, compared to the last year"
      type: number
      sql: CAST((${count_rx_tx_price_override_cash_tp} - ${count_rx_tx_price_override_cash_tp_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${count_rx_tx_price_override_cash_tp_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: count_rx_tx_price_override_cash_tp_pcnt {
      label: "Price Overridden Scripts %"
      group_label: "Price Override"
      description: "The Overridden Scripts percentage of ALL scripts. Overriden Scripts had an override performed on the price amount"
      type: number
      sql: COALESCE(CAST((${count_rx_tx_price_override_cash_tp}) AS DECIMAL(17,4))/NULLIF(${count},0), 0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

#[ERXLPS-993] LY price override scripts % measures
    measure: count_rx_tx_price_override_cash_tp_ly_pcnt {
      label: "LY Price Overridden Scripts %"
      group_label: "Price Override"
      description: "The Overridden Scripts percentage of ALL scripts. Overriden Scripts had an override performed on the price amount, for last year"
      type: number
      sql: COALESCE(CAST((${count_rx_tx_price_override_cash_tp_ly}) AS DECIMAL(17,4))/NULLIF(${count_ly},0), 0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_overridden_price_amount_cash_tp {
      label: "Total Prescription Overridden Price Amount"
      group_label: "Price Override"
      description: "The total original prescription price amount of cash and third party transactions before the price override was performed"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${rx_tx_price_override_yesno} = 'YES' THEN ${overridden_price_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_overridden_price_amount_cash_tp_ly {
      label: "LY Total Prescription Overridden Price Amount"
      group_label: "Price Override"
      description: "The total original prescription price amount of cash and third party transactions before the price override was performed, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${rx_tx_price_override_yesno} = 'YES' THEN ${overridden_price_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_overridden_price_amount_cash_tp_variance {
      label: "TY/LY Total Prescription Overridden Price Amount Variance"
      group_label: "Price Override"
      description: "The difference of total original prescription price amount of cash and third party transactions before the price override was performed, compared to the last year"
      type: number
      sql: (${sum_rx_tx_overridden_price_amount_cash_tp} - ${sum_rx_tx_overridden_price_amount_cash_tp_ly}) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_overridden_price_amount_cash_tp_variance_pcnt {
      label: "TY/LY Total Prescription Overridden Price Amount Variance %"
      group_label: "Price Override"
      description: "Percentage Increase/Decrease of total original prescription price amount of cash and third party transactions before the price override was performed, compared to the last year"
      type: number
      sql: CAST((${sum_rx_tx_overridden_price_amount_cash_tp} - ${sum_rx_tx_overridden_price_amount_cash_tp_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_rx_tx_overridden_price_amount_cash_tp_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_rx_tx_overridden_price_amount_cash_tp {
      label: "Avg Prescription Overridden Price Amount"
      group_label: "Price Override"
      description: "The average original prescription price amount of cash and third party transactions before the price override was performed. Calculation Used: Total Prescription Overridden Price Amount/Price Overridden Scripts"
      type: number
      sql: COALESCE(${sum_rx_tx_overridden_price_amount_cash_tp} / NULLIF(${count_rx_tx_price_override_cash_tp}, 0), 0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }
    #[ERXLPS-876] - New measures for Price Overridden added here. End...

    measure: sum_rx_tx_overridden_price_amount {
      label: "Total Cash Prescription Overridden Price Amount"
      group_label: "Price Override"
      description: "The total original Cash Prescription price amount before the price override was performed"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${rx_tx_price_override_yesno} = 'YES' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${overridden_price_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_overridden_price_amount_ly {
      label: "LY Total Cash Prescription Overridden Price Amount"
      group_label: "Price Override"
      description: "The total original Cash Prescription price amount before the price override was performed, for last year"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${rx_tx_price_override_yesno} = 'YES' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${overridden_price_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_overridden_price_amount_variance {
      label: "TY/LY Total Cash Prescription Overridden Price Amount Variance"
      group_label: "Price Override"
      description: "The difference of total original Cash Prescription price amount before the price override was performed, compared to the last year"
      type: number
      sql: (${sum_rx_tx_overridden_price_amount} - ${sum_rx_tx_overridden_price_amount_ly}) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_overridden_price_amount_variance_pcnt {
      label: "TY/LY Total Cash Prescription Overridden Price Amount Variance %"
      group_label: "Price Override"
      description: "Percentage Increase/Decrease of total original Cash Prescription price amount before the price override was performed, compared to the last year"
      type: number
      sql: CAST((${sum_rx_tx_overridden_price_amount} - ${sum_rx_tx_overridden_price_amount_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_rx_tx_overridden_price_amount_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    ## [ERXLPS-1028] Adding Override Amount (Amount that was discounted) measures to be consistent with other override measures
    measure: sum_rx_tx_cash_override_price_amount {
      label: "Total Cash Prescription Override Price Amount"
      group_label: "Price Override"
      description: "The amount of the cash override (Calculation Used: Cash Price - Total Cash Prescription Overridden Price Amount)."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${rx_tx_price_override_yesno} = 'YES' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${price} - ${overridden_price_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_cash_override_price_amount_ly {
      label: "LY Total Cash Prescription Override Price Amount"
      group_label: "Price Override"
      description: "The amount of the cash override, for last year (Calculation Used: Cash Price - Total Cash Prescription Overridden Price Amount)."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${rx_tx_price_override_yesno} = 'YES' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${price} - ${overridden_price_amount} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_cash_override_price_amount_variance {
      label: "TY/LY Total Cash Prescription Override Price Amount Variance $"
      group_label: "Price Override"
      description: "The differenece in the amount of the cash override, compared to last year"
      type: number
      sql: (${sum_rx_tx_cash_override_price_amount} - ${sum_rx_tx_cash_override_price_amount_ly}) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_cash_override_price_amount_variance_pcnt {
      label: "TY/LY Total Cash Prescription Override Price Amount Variance %"
      group_label: "Price Override"
      description: "Percentage Increase/Decrease of the total amount of the cash override, compared to last year"
      type: number
      sql: CAST((${sum_rx_tx_cash_override_price_amount} - ${sum_rx_tx_cash_override_price_amount_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_rx_tx_cash_override_price_amount_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_rx_tx_overridden_price_amount {
      label: "Avg Cash Prescription Overridden Price Amount"
      group_label: "Price Override"
      description: "The average original Cash Prescription price amount before the price override was performed. Calculation Used: Total Cash Prescription Overridden Price Amount/Price Overridden Cash Scripts"
      type: number
      sql: COALESCE(${sum_rx_tx_overridden_price_amount} / NULLIF(${count_rx_tx_price_override}, 0), 0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_rx_tx_uc_price {
      label: "Total Prescription U&C Price"
      group_label: "Other Price"
      description: "The Total Usual & Customary pricing of the Prescription Transaction"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${rx_tx_uc_price_reference} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1994]
    measure: sum_net_sales_vs_uc_price_variance {
      label: "Net Sales vs. U&C Price Variance $"
      description: "Total Dollar Increase/Decrease of Net Sales compared with U&C Price of the transaction. Calculation = Net Sales - Total Prescription U&C Price"
      type: number
      sql: ${sum_net_sales} - ${sum_rx_tx_uc_price} ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_net_sales_vs_uc_price_variance_pct {
      label: "Net Sales vs. U&C Price Variance %"
      description: "Total Percentage Increase/Decrease of Net Sales compared with U&C price of the transaction. Calculation = Net Sales - Total Prescription U&C Price / Total Prescription U&C Price"
      type: number
      sql: CAST((${sum_net_sales} - ${sum_rx_tx_uc_price}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_rx_tx_uc_price}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve values.
      value_format: "00.00%"
    }

    ## [ERXLPS-1028] Updating Expected Revenue to include new override measures
    ## NOTE: The description of the "Expected Revenue After Sold w/o Override" measures state that we are adding to Net Sales, but the logic shows that we are subtracting. This is purposeful. It is because the Override measures have negative values when
    ##          we should add, so to "ADD" the values a negative value must be used to cancel the two negatives and "ADD" the value to Net Sales
    measure: sum_expected_revenue {
      label: "Expected Revenue After Sold w/o Override"
      group_label: "Price Override"
      description: "The Expected Revenue that would be collected if no Override was performed. (Calculation Used: Net Sales After Sold + Copay Override Amount + Cash Price Override Amount)"
      type: number
      sql:  (${sum_net_sales_after_sold} - ${copay_override_amount} - ${sum_rx_tx_cash_override_price_amount}) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_lost_revenue {
      label: "Expected Revenue After Sold Override Sales Variance $"
      group_label: "Price Override"
      description: "The Revenue difference between the Expected Revenue if no override is performed, and Net Sales After Sold. (Calculation Used: Expected Revenue - Net Sales After Sold)."
      type: number
      sql: (${sum_net_sales_after_sold} - ${sum_expected_revenue})   ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_lost_revenue_pcnt {
      label: "Expected Revenue After Sold Override Sales Variance %"
      group_label: "Price Override"
      description: "Percentage Increase/Decrease of the total Expected Revenue if no override is performed, compared to Net Sales After Sold"
      type: number
      sql: COALESCE(CAST((${sum_lost_revenue}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_expected_revenue}),0), 0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve values.
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: genrx_prugen_tx_tp_balance_due_from_tp {
      required_access_grants: [can_view_genrx_specific_fields]
      label: "GenRx Prugen Balance Due"
      group_label: "Other Measures"
      description: "Amount due from Prugen. Calculation Used: Billing Method = 'FREE' then Total Claim TP Balance Due, if Billing Method = 'COMMERCIAL' or 'COMMERCIAL-NONPRIMARY' then Total Patient Final Copay, If Billing Method = 'CASH $25' then Total Claim TP Balance Due, if Billing Method = 'PRUG-NONPRIMARY' then Total Claim TP Balance Due"
      type: sum
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                   AND ${sales_tx_tp.genrx_billing_method} IN ('FREE','CASH $25','PRUG-NONPRIMARY')
                   AND ${report_calendar_global.type} = 'TY'
             THEN ${sales_tx_tp.net_due}
             WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                   AND ${sales_tx_tp.genrx_billing_method} IN ('COMMERCIAL','COMMERCIAL-NONPRIMARY')
                   AND ${report_calendar_global.type} = 'TY'
             THEN ${final_copay} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_compound_ingredient_tx_quantity_used {
      label: "Total Compound Ingredient Tx Quantity Used"
      description: "Total Amount of ingredient used to make the compound"
      type: sum_distinct
      sql_distinct_key: ${store_compound_ingredient_tx.chain_id} ||'@'|| ${store_compound_ingredient_tx.nhin_store_id} ||'@'|| ${store_compound_ingredient_tx.compound_ingredient_tx_id} ;; #ERXLPS-1649
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${store_compound_ingredient_tx.compound_ingredient_tx_quantity_used} END ;;
      value_format: "#,##0.00"
    }

    measure: sum_compound_ingredient_tx_base_cost {
      label: "Total Compound Ingredient Tx Base Cost"
      description: "The total base cost of this ingredient for this transaction at the time it was priced"
      type: sum_distinct
      sql_distinct_key: ${store_compound_ingredient_tx.chain_id} ||'@'|| ${store_compound_ingredient_tx.nhin_store_id} ||'@'|| ${store_compound_ingredient_tx.compound_ingredient_tx_id} ;; #ERXLPS-1649
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${store_compound_ingredient_tx.compound_ingredient_tx_base_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_compound_ingredient_tx_acquisition_cost {
      label: "Total Compound Ingredient Tx Acquisition Cost"
      description: "The ACQ cost of this ingredient for this transaction at the time it was priced"
      type: sum_distinct
      sql_distinct_key: ${store_compound_ingredient_tx.chain_id} ||'@'|| ${store_compound_ingredient_tx.nhin_store_id} ||'@'|| ${store_compound_ingredient_tx.compound_ingredient_tx_id} ;; #ERXLPS-1649
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${store_compound_ingredient_tx.compound_ingredient_tx_acquisition_cost} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: count_transfer_pct {
      type: number
      label: "Transfer Script %"
      description: "Percentage of the Transfer Scripts in comparison to the Total Unadjusted Scripts"
      sql: ${sales_rx_tx_transfer.count_transfer}/NULLIF(${count},0) ;;
      value_format: "00.00%"
    }

    filter: history_filter {
      label: "HISTORY"
      description: "Includes both the sale and credit transaction for qualified transactions that have been cancelled or credit returned, when 'YES' is selected and default filter for this explore is set to show HISTORY. When 'NO' is selected, the report will only show the current information for the transaction"
      type: string
      suggestions: ["YES", "NO"]
      full_suggestions: yes
    }

    filter: sales_rxtx_payor_summary_detail_analysis {
      label: "SUMMARY/DETAIL"
      description: "When SUMMARY is selected, the 'Net Sales' and 'Final Copay' would be based on the prescription price and copay of the final payor. If DETAIL is selected, the 'Net Sales' and 'Final Copay' would be based on the TP Final Price and copay of each individual payor, unless the cash transaction would have a $0 copay from TP. Use 'DETAIL' as the filter when analyzing the transaction numbers and carriers, all added to the same line item"
      type: string
      suggestions: ["SUMMARY", "DETAIL"]
      full_suggestions: yes
    }

    filter: date_to_use_filter {
      label: "DATE TO USE"
      description: "The DATE TO USE field determines what DATE FIELD is used to aggregate data, based on the time window specified. When using HISTORY = YES, REPORTABLE SALES and SOLD will also return results if the RETURNED date falls in the time window specified. FILLED and RETURNED only work with HISTORY = NO."
      type: string
      suggestions: ["REPORTABLE SALES", "SOLD", "FILLED", "RETURNED"]
      bypass_suggest_restrictions: yes
    }

    #[ERXLPS-895] - New filter added to restrict after sold transactions
    filter: show_after_sold_measure_values {
      label: "SHOW AFTER SOLD MEASURE VALUES"
      description: "Show actual values for 'After Sold ***' measures when 'YES' is chosen as the filter value. Displays 0 against all 'After Sold ***' measures when 'NO' is chosen. Default value is NO"
      suggestions: ["YES", "NO"]
    }

    #[ERXLPS-1028] - New filter to utilize Custom Copay Override Measures
    filter: custom_copay_override_filter {
      label: "Custom Copay Override Filter (Carrier Code) *"
      description: "Enter the Carrier Code. For Example 'CPLAN'. Input from this filter is used in the 'Custom Copay Override' measures. If filter is not used, or if the filter is NULL, all Carrier codes will be considered"
      #suggestions: ["FPPP"]
    }

    #[ERXLPS-2231] - Suggestions and default values are not required.
    filter: cash_plan_carrier_codes_filter {
      label: "Cash Plan Carrier Codes \"Filter Only\""
      description: "This filter is the required input for the 'Cash or Cash Plans (Yes/No)' dimension; which is a Yes/No Flag that evaluates transactions based on whether they are Cash transactions, or a Cash Plan (TP) transactions. Input required is the Carrier Code."
      type: string
    }

    #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
    filter: consider_nh_as_sold {
      label: "Consider NH Classic Scripts as Sold -  YES/NO"
      description: "When Filter value is selected as 'YES' then PDX Classic Scripts identified as Nursing Home will be considered as SOLD. The Reportable Sales date will be used as SOLD Date. Default filter value is considered as 'NO'."
      suggestions: ["YES", "NO"]
      default_value: "NO"
    }

    dimension: cash_or_cash_plan {
      label: "Cash or Cash Plan (Yes/No) *"
      description: "Yes/No Flag indicating if the transaction was a Cash transaction, or a Cash TP Plan transaction. The Cash TP Plan transactions are determined based on the Carrier codes that are input in the 'Cash Plan Carrier Codes Filter Only' field. If no Carrier Code's were entered in the Cash Plan Filter Only field; i.e. it is Null, only Cash transactions will be evaluated in the dimension."
      type: string
      sql: CASE WHEN ${financial_category} IN ('CASH - CREDIT','CASH - FILLED') THEN 'Yes'
             WHEN {% condition cash_plan_carrier_codes_filter %} ${eps_plan.store_plan_carrier_code} {% endcondition %} THEN 'Yes'
             ELSE 'No' END ;;
    }

    #[ERXLPS-1152] - Include "Scripts Converted" Yes/No Dimension in Sales Explore
    dimension_group: conversion_service_run {
      label: "Conversion Service Run"
      description: "Used to record the date when a pharmacy is converted from a previous pharmacy system to EPS. This flag does not work with DATE TO USE of FILLED."
      type: time
      can_filter: no
      timeframes: [time]
      sql: to_timestamp(${store_setting_conversionservice_run_date.store_setting_value}, 'mm/dd/yy hh24:mi:ss') ;;
    }

    #[ERXLPS-1152] - Include "Scripts Converted" Yes/No Dimension in Sales Explore
    dimension: scripts_converted {
      label: "Scripts Converted"
      description: "Yes/No flag indicating if the script has a reportable sales date before the pharmacy was converted from a previous pharmacy system to EPS"
      type: yesno
      sql: ${rx_tx_reportable_sales_reference} < to_timestamp(${store_setting_conversionservice_run_date.store_setting_value}, 'mm/dd/yy hh24:mi:ss') ;;
    }
################################################################# new sale related dimensions and measures ######################################################

    dimension_group: sale_activity {
      type: time
      timeframes: [date]
      hidden: yes
      sql: ${TABLE}.SALE_ACTIVITY_DATE ;;
    }

    dimension: sale_event_type {
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_EVENT_TYPE ;;
    }

    dimension: sale_current_state_flg {
      type: string
#     hidden: yes
      label: "Current State Flag"
      description: "Y/N Flag indicating if the transaction is Current State"
      sql: ${TABLE}.SALE_CURRENT_STATE_FLAG ;;
    }

    dimension: sale_drug_dispensed_id {
      label: "Prescription Transaction Drug ID"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_DRUG_DISPENSED_ID ;;
    }

    dimension: return_to_stock_yesno {
      label: "Prescription Transaction Return to Stock"
      description: " Yes/No field indicating if the transaction is returned to stock"
      type: yesno
      sql: ${rx_tx_return_to_stock_date} IS NOT NULL ;; #[ERXLPS-2315]
    }

    dimension: adjudicated_flg_from_table {
      type: string
      hidden: yes
      label: "Adjudicated Flag From Table"
      description: "Y/N Flag indicating if the transaction is adjudicated/returned for reporting period selected"
      sql: ${TABLE}.SALE_REPORTABLE_SALES_HISTORY_FLAG ;;
    }

    dimension: sold_flg_from_table {
      type: string
      hidden: yes
      label: "Sold Flag From Table"
      description: "Y/N Flag indicating if the transaction is sold/returned & picked up by patient for reporting period selected"
      sql: ${TABLE}.SALE_SOLD_HISTORY_FLAG ;;
    }

##################################################################### dimensions and measures added from sales_eps_rx_tx_fiscal view file into sales_fiscal_view file ###########################################################################

    dimension: rx_tx_basecost_id {
      label: "Prescription Basecost ID"
      description: "Unique ID number identifying an Basecost record within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_BASECOST_ID ;;
    }

    dimension: rx_tx_completion_rx_tx_id {
      label: "Prescription Transaction Completion Fill ID"
      description: "Unique Prescription Transaction ID number identifying an completion fill Prescription Transaction record of a partially filled transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_COMPLETION_RX_TX_ID ;;
    }

    dimension: rx_tx_partial_rx_tx_id {
      label: "Prescription Transaction Partial Fill ID"
      description: "Unique Prescription Transaction ID number of the partial fill Prescription Transaction record of a partially filled transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_PARTIAL_RX_TX_ID ;;
    }

    dimension: rx_tx_compound_id {
      label: "Prescription Transaction Compound ID"
      description: "Unique ID that links this record to a specific COMPOUND record, if this prescription is filled for a compound within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_COMPOUND_ID ;;
    }

    dimension: rx_tx_discount_id {
      label: "Prescription Transaction Discount ID"
      description: "Unique ID of the Discount Code that was used during pricing this transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_DISCOUNT_ID ;;
    }

    dimension: rx_tx_drug_brand_id {
      label: "Prescription Transanction Drug Brand ID"
      description: "Unique ID that links this record to a specific DRUG record, which identifies the Brand drug selected for this transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_DRUG_BRAND_ID ;;
    }

    dimension: rx_tx_drug_generic_id {
      label: "Prescription Transanction Drug Generic ID"
      description: "Unique ID that links this record to a specific DRUG record, which identifies the Generic drug selected for this transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_DRUG_GENERIC_ID ;;
    }

    dimension: rx_tx_reference_brand_id {
      label: "Prescription Transaction Reference Brand ID"
      description: "Unique ID of the brand drug record used when Brand % Pricing is used to price the transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_REFERENCE_BRAND_ID ;;
    }

    # used to join store drug table
    dimension: rx_tx_drug_id {
      label: "Prescription Transaction Drug ID"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_DRUG_DISPENSED_ID ;;
    }

# [ERX-2586] created this dimension for join with Hist tables
    dimension: rx_tx_drug_id_hist {
      label: "Prescription Transaction Drug ID"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_DRUG_DISPENSED_ID ;;
    }

    dimension: rx_tx_drug_cost_type_id {
      label: "Prescription Transaction Drug Cost Type ID"
      description: "Unique ID that links this transaction to a specific DRUG COST TYPE  record within a pharmacy chain.  This is the Cost Base that pricing used to price this transaction"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_DRUG_COST_TYPE_ID ;;
    }

    dimension: rx_tx_tax_id {
      label: "Prescription Transaction Tax ID"
      description: "Unique ID that links this record to a specific TAX record within a pharmacy chain"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_TAX_ID ;;
    }

    dimension: rx_tx_returned_user_id {
      label: "Prescription Transaction Returned User ID"
      description: "Unique ID that links this record to the specific USER record, indicating the user who performed a credit return on this transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_RETURNED_USER_ID ;;
    }

    #[ERXDWPS-6203] - Exposing the dimension in Sales Explore. This dimensions will be used to merge results between different explore to get USER information.
    #[ERXDWPS-6203] - Modified type to string to utilize the dimension for merge results with store_user.user_id dimension. Merge can be performed only when the dimensions type is same.
    #[ERXDWPS-6203] - Using SALE_OVERRIDE_USER_ID in joins will still consider database column type which is number.
    dimension: rx_tx_override_user_id {
      label: "Prescription Transaction Override User ID"
      description: "Unique ID that links this record to the specific USER record, indicating the person who performed a price override on this transaction within a pharmacy chain"
      type: string
      sql: ${TABLE}.SALE_OVERRIDE_USER_ID ;;
    }

    dimension: rx_tx_price_code_id {
      label: "Prescription Transaction Price Code ID"
      description: "Unique ID number identifying an prescription record within a pharmacy chain"
      type: string
      hidden: yes
      sql: ${TABLE}.PRICE_CODE_ID ;;
    }

    dimension: rx_tx_ltc_facility_id {
      label: "Prescription Transaction LTC Facility ID"
      description: "Unique ID number identifying the Long Term Care Facility that the patient was assigned to at the time of the transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_LTC_FACILITY_ID ;;
    }

    dimension: rx_tx_price_override_note_id {
      label: "Prescription Transaction Override Notes ID"
      description: "Unique ID that links this transaction to a specific NOTE record, textually describing the reason that the user chose to override the price of this transaction within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_PRICE_OVERRIDE_NOTE_ID ;;
    }

    dimension: rx_tx_rph_counsel_notes_id {
      label: "Prescription Transaction Counsel Notes ID"
      description: "Unique ID that identifies notes that were saved from the Tools --> Pharmacist Counsel screen. Used to document any additional notes during the required counseling of a patient within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SALE_RPH_COUNSEL_NOTES_ID ;;
    }

    dimension: shipment_id {
      label: "Prescription Transaction Shipment ID"
      description: "Unique ID indicating the ID of the Shipment (from the Shipment table) that the Prescription was included in within a pharmacy chain"
      type: number
      hidden: yes
      sql: ${TABLE}.SHIPMENT_ID ;;
    }

    dimension: rx_tx_patient_disease_id {
      label: "Prescription Transaction Patient Disease ID"
      description: "Unique ID that links this record to a specific PATIENT DISEASE record for this transanction within a pharmacy chain"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_PATIENT_DISEASE_ID ;;
    }

    dimension: rx_tx_sup_presc_clinic_link_id {
      label: "Prescription Transaction Supervising Prescriber Clinic Link ID"
      description: "Unique ID that links this record to a specific PRESCRIBER CLINIC LINK record, which identifies the Supervising Prescriber for this transaction within a pharmacy chain"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_SUPERVISOR_PRESCRIBER_CLINIC_LINK_ID ;;
    }

    dimension: rx_tx_presc_clinic_link_id {
      label: "Prescription Transaction Clinic Link ID"
      description: "Unique ID that links this record to a specific PRESCRIBER_CLINIC_LINK record, which identifies the Prescriber for this transaction for this transaction within a pharmacy chain"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_PRESCRIBER_CLINIC_LINK_ID ;;
    }

    #[ERXLPS-743] Dimensions referenced in other views. Currently referenced in sales view.
    dimension: rx_tx_tx_status_reference {
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_TX_STATUS ;;
    }

    dimension: rx_tx_partial_fill_status_reference {
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_PARTIAL_FILL_STATUS ;;
    }

    ################################################################################################# End of Foreign Key References #####################################################################################
    ########################################################################################################## Dimensions ##############################################################################################

    dimension: rx_tx_tx_number {
      label: "Prescription TX Number"
      description: "Transaction number"
      type: number
      sql: ${TABLE}.SALE_TX_NUMBER ;;
      value_format: "######"
    }

    dimension: rx_tx_refill_number {
      label: "Prescription Refill Number"
      description: "Refill number of the transaction"
      type: number
      sql: ${TABLE}.SALE_REFILL_NUMBER ;;
      value_format: "#,##0"
    }

    dimension: rx_tx_counseling_rph_initials {
      label: "Prescription Counseling Rph Initials"
      description: "Pharmacist of Record initials on POS system"
      type: string
      sql: ${TABLE}.SALE_COUNSELING_RPH_INITIALS ;;
    }

    dimension: rx_tx_ddid_used_by_drug_selection {
      label: "Prescription DDID Used By Drug Selection"
      description: "DDID used by automatic drug selection for a particular fill"
      type: number
      sql: ${TABLE}.SALE_DDID_USED_BY_DRUG_SELECTION ;;
      value_format: "######"
    }

    dimension: rx_tx_de_initials {
      label: "Prescription DE Initials"
      description: "Initials of the user who performed Data Entry on this transaction"
      type: string
      sql: ${TABLE}.SALE_DE_INITIALS ;;
    }

    dimension: rx_tx_dob_override_reason_id {
      label: "Prescription DOB Override Reason ID"
      description: "ID for the reason of the Override of the DOB during DOB verification prompted at will call screen"
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_DOB_OVERRIDE_REASON_ID ;;
    }

    dimension: rx_tx_dv_initials {
      label: "Prescription DV Initials"
      description: "Initials of the user who performed Data Verification on this transaction"
      type: string
      sql: ${TABLE}.SALE_DV_INITIALS ;;
    }

    dimension: rx_tx_gpi_used_by_drug_selection {
      label: "Prescription GPI Used By Drug Selection"
      description: "Prescribed Drug GPI used by automatic drug selection for a particular fill"
      type: string
      sql: ${TABLE}.SALE_GPI_USED_BY_DRUG_SELECTION ;;
    }

    dimension: rx_tx_pos_invoice_number {
      label: "Prescription POS Invoice Number"
      description: "The invoice number from the POS system"
      type: number
      sql: ${TABLE}.SALE_POS_INVOICE_NUMBER ;;
      value_format: "######"
    }

    ###################################################################################################End of Dimensions ################################################################################################

    ########################################################################################### YES/NO & CASE WHEN fields ###############################################################################################
    dimension: rx_tx_active {
      label: "Prescription Transaction Active"
      description: "Yes/No Flag indicating if the transaction is active"
      type: yesno
      sql: NVL(${TABLE}.SALE_TX_STATUS,'Y') = 'Y' AND  DECODE(${TABLE}.SALE_RETURNED_DATE,NULL,SALE_ACQUISITION_COST,0) IS NOT NULL AND ${TABLE}.SALE_FILL_STATUS IS NOT NULL AND ${TABLE}.SALE_FILL_QUANTITY IS NOT NULL AND DECODE(${TABLE}.SALE_RETURNED_DATE,NULL,SALE_PRICE,NVL(${TABLE}.SALE_ORIGINAL_PRICE,0)) IS NOT NULL ;;
    }

    dimension: rx_tx_tx_status {
      label: "Prescription Transaction Status"
      description: "Status of the Transaction. Normal, Cancelled, Credit Returned, Hold, and Replacement"
      type: string

      case: {
        when: {
          sql: NVL(${TABLE}.SALE_TX_STATUS,'Y') = 'Y' ;;
          label: "NORMAL"
        }

        when: {
          sql: ${TABLE}.SALE_TX_STATUS = 'N' ;;
          label: "CANCELLED"
        }

        when: {
          sql: ${TABLE}.SALE_TX_STATUS = 'C' ;;
          label: "CREDIT RETURNED"
        }

        when: {
          sql: ${TABLE}.SALE_TX_STATUS = 'H' ;;
          label: "HOLD"
        }

        when: {
          sql: ${TABLE}.SALE_TX_STATUS = 'R' ;;
          label: "REPLACEMENT"
        }
      }
    }

    dimension: rx_tx_fill_status {
      label: "Prescription Fill Status"
      description: "Indicates the type of transaction. New prescription transaction, Refill transaction and Non-filled, Cognitive service transaction"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_FILL_STATUS = 'N' ;;
          label: "NEW PRESCRIPTION"
        }

        when: {
          sql: ${TABLE}.SALE_FILL_STATUS = 'R' ;;
          label: "REFILL"
        }

        when: {
          sql: ${TABLE}.SALE_FILL_STATUS = 'F' ;;
          label: "NON FILLED COGNITIVE"
        }

        when: {
          sql: true ;;
          label: "NOT SPECIFIED"
        }
      }
    }

    dimension: rx_tx_drug_dispensed {
      label: "Prescription Drug Dispensed"
      description: "Indicates the type of drug dispensed. Brand, Generic, Compound. This field is derived from either automated or manual drug selection."
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_DRUG_DISPENSED = 'B' ;;
          label: "BRAND"
        }

        when: {
          sql: ${TABLE}.SALE_DRUG_DISPENSED = 'G' ;;
          label: "GENERIC"
        }

        when: {
          sql: ${TABLE}.SALE_DRUG_DISPENSED = 'C' ;;
          label: "COMPOUND"
        }

        when: {
          sql: true ;;
          label: "NOT SPECIFIED"
        }
      }
    }

    dimension: rx_tx_admin_rebilled {
      label: "Prescription Admin Rebilled"
      description: "Yes/No flag indicating if the prescription has been admin rebilled"
      type: yesno
      sql: ${TABLE}.SALE_ADMIN_REBILLED = 'Y' ;;
    }

    #[ERXLPS-2056] - Added reference dimension for admin_rebill to utilize in joins
    dimension: rx_tx_admin_rebilled_reference {
      label: "Prescription Admin Rebilled"
      description: "Yes/No flag indicating if the prescription has been admin rebilled"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_ADMIN_REBILLED ;;
    }

    dimension: rx_tx_allow_price_override {
      label: "Prescription Allow Price Override"
      description: "Yes/No flag indicating if a price override can be performed on this transaction"
      type: yesno
      sql: NVL(${TABLE}.SALE_ALLOW_PRICE_OVERRIDE,'Y') = 'Y' ;;
    }

    dimension: rx_tx_brand_manually_selected {
      label: "Precription Brand Manually Selected"
      description: "Yes/No flag indicating if the Brand drug was manually selected rather than being selected through auto drug selection"
      type: yesno
      sql: ${TABLE}.SALE_BRAND_MANUALLY_SELECTED = 'Y' ;;
    }

    dimension: rx_tx_competitive_priced {
      label: "Prescription Competitive Priced"
      description: "Yes/No flag indicating if the competitive pricing was used when transaction was priced"
      type: yesno
      sql: ${TABLE}.SALE_COMPETITIVE_PRICED = 'Y' ;;
    }

    dimension: rx_tx_controlled_substance_escript {
      label: "Prescription Controlled Substance Escript"
      description: "Yes/No flag indicating if prescription was generated from a controlled substance escript. Used to identify prescriptions for auditing and prescription edits requirements"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_CONTROLLED_SUBSTANCE_ESCRIPT = 'N' ;;
          label: "Not Controlled Substance"
        }

        when: {
          sql: true ;;
          label: "Yes"
        }
      }
    }

    dimension: rx_tx_different_generic {
      label: "Prescription Different Generic"
      description: "Yes/No flag indicating if a different generic drug was used for this fill from the previous fill"
      type: yesno
      sql: ${TABLE}.SALE_DIFFERENT_GENERIC = 'Y' ;;
    }

    dimension: rx_tx_fill_location {
      label: "Prescription Fill Location"
      description: "Flag that identifies where this transaction was filled"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_FILL_LOCATION = 'A' ;;
          label: "ACS System"
        }

        when: {
          sql: ${TABLE}.SALE_FILL_LOCATION = 'L' ;;
          label: "Local Pharmacy"
        }

        when: {
          sql: ${TABLE}.SALE_FILL_LOCATION = 'M' ;;
          label: "Mail Order"
        }

        when: {
          sql: ${TABLE}.SALE_FILL_LOCATION = 'C' ;;
          label: "Central Fill"
        }

        when: {
          sql: true ;;
          label: "Unknown"
        }
      }
    }

    dimension: rx_tx_generic_manually_selected {
      label: "Prescription Generic Manually Selected"
      description: "Yes/No flag indicating if the Generic drug was manually selected rather than being selected through auto drug selection"
      type: yesno
      sql: ${TABLE}.SALE_GENERIC_MANUALLY_SELECTED = 'Y' ;;
    }

    dimension: rx_tx_keep_same_drug {
      label: "Prescription Keep Same Drug"
      description: "Yes/No flag indicating if the same drug should be used for each refill of a prescription"
      type: yesno
      sql: ${TABLE}.SALE_KEEP_SAME_DRUG = 'Y' ;;
    }

    dimension: rx_tx_manual_acquisition_drug_dispensed {
      label: "Prescription Manual Acquisition Drug Dispensed"
      description: "Yes/No flag indicating if, at the time the transaction was processed, the Dispensed Drug was identified as a Manual ACQ Drug. This would imply that the ACQ used to price the prescription was manually entered before pricing was done."
      type: yesno
      sql: ${TABLE}.SALE_MANUAL_ACQUISITION_DRUG_DISPENSED = 'Y' ;;
    }

    dimension: rx_tx_medicare_notice {
      label: "Prescription Medicare Notice"
      description: "Yes/No flag indicating if approval code or reject code were received in the response from the PBM and that the patient should be given a Medicare Rights Notice"
      type: yesno
      sql: ${TABLE}.SALE_MEDICARE_NOTICE = 'Y' ;;
    }

    dimension: rx_tx_no_sales_tax {
      label: "Prescription No Sales Tax"
      description: "Yes/No flag indicating if the patient associated with this transaction is flagged as tax exempt"
      type: yesno
      sql: ${TABLE}.SALE_NO_SALES_TAX = 'Y' ;;
    }

    dimension: rx_tx_otc_taxable_indicator {
      label: "Prescription OTC Taxable Indicator"
      description: "Yes/No flag indicating if the OTC drug is taxable"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_OTC_TAXABLE_INDICATOR = 'Y' ;;
          label: "Yes Taxable"
        }

        when: {
          sql: true ;;
          label: "Not Taxable"
        }
      }
    }

    dimension: rx_tx_patient_request_brand_generic {
      label: "Prescription Patient Request Brand Generic"
      description: "Flag to identify that a patient has specifically requested the brand or generic when requesting their prescription be filled"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_PATIENT_REQUEST_BRAND_GENERIC = 'B' ;;
          label: "Brand"
        }

        when: {
          sql: ${TABLE}.SALE_PATIENT_REQUEST_BRAND_GENERIC = 'G' ;;
          label: "Generic"
        }

        when: {
          sql: true ;;
          label: "Not Specified"
        }
      }
    }

    dimension: rx_tx_patient_requested_price {
      label: "Prescription Patient Requested Price"
      description: "Yes/No flag indicating if the patient requested a specific price for this transaction in Order Entry"
      type: yesno
      sql: ${TABLE}.SALE_PATIENT_REQUESTED_PRICE = 'Y' ;;
    }

    dimension: rx_tx_pickup_signature_not_required {
      label: "Prescriber Pickup Signature Not Required"
      description: "flag that marks the transaction as 'Y' Yes, it needs, or 'N', No it does not need a pickup signature due to the plan setting at the time it was sold"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_PICKUP_SIGNATURE_NOT_REQUIRED = 'Y' ;;
          label: "Yes Required"
        }

        when: {
          sql: true ;;
          label: "Not Required"
        }
      }
    }

    dimension: rx_tx_price_override_reason {
      label: "Prescription Price Override Reason"
      description: "Reason that the user chose to override the price of this transaction"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_PRICE_OVERRIDE_REASON = '0' ;;
          label: "Other"
        }

        when: {
          sql: ${TABLE}.SALE_PRICE_OVERRIDE_REASON = '1' ;;
          label: "Match Compete Price"
        }

        when: {
          sql: ${TABLE}.SALE_PRICE_OVERRIDE_REASON = '2' ;;
          label: "Match Quote"
        }

        when: {
          sql: ${TABLE}.SALE_PRICE_OVERRIDE_REASON = '3' ;;
          label: "Match Previous Fill"
        }

        when: {
          sql: ${TABLE}.SALE_PRICE_OVERRIDE_REASON = '4' ;;
          label: "Pricing Error"
        }

        when: {
          sql: true ;;
          label: "Not Performed"
        }
      }
    }

    # ERXLPS-643 - Add yes no flag for price overrides
    dimension: rx_tx_price_override_yesno {
      label: "Prescription Price Override"
      description: "Yes/No Flag indicating if a price override was performed on this transaction"
      type: yesno
      sql: ${TABLE}.SALE_PRICE_OVERRIDE_REASON IS NOT NULL ;;
    }

    dimension: rx_tx_refill_source {
      label: "Prescription Refill Source"
      description: "Flag represents the process that initiated the creation of this Prescription Transaction record"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '0' ;;
          label: "IVR"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '1' ;;
          label: "Fax"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '2' ;;
          label: "Auto-fill"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '3' ;;
          label: "N/H Batch"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '4' ;;
          label: "N/H unit Dose Billing"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '5' ;;
          label: "Call-In(Non_IVR)"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '6' ;;
          label: "Walk-up"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '7' ;;
          label: "Drive-up"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '8' ;;
          label: "Order Entry"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '9' ;;
          label: "eScript"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '10' ;;
          label: "WS EPHARM"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '11' ;;
          label: "WS IVR"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '12' ;;
          label: "ePharm"
        }

        when: {
          sql: ${TABLE}.SALE_REFILL_SOURCE = '13' ;;
          label: "Mobile Service Provider"
        }

        when: {
          sql: true ;;
          label: "Not A Refill"
        }
      }
    }

    dimension: rx_tx_require_relation_to_patient {
      label: "Prescription Require Relation To Patient"
      description: "Flag to identify if the relationship of the person picking up or dropping off the Rx on behalf of the customer still needs to be collected"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_REQUIRE_RELATION_TO_PATIENT = 'Y' ;;
          label: "Yes Need Data"
        }

        when: {
          sql: ${TABLE}.SALE_REQUIRE_RELATION_TO_PATIENT = 'N' ;;
          label: "No Data Not Needed"
        }

        when: {
          sql: ${TABLE}.SALE_REQUIRE_RELATION_TO_PATIENT = 'D' ;;
          label: "Data Acquired"
        }

        when: {
          sql: true ;;
          label: "Not Specified"
        }
      }
    }

    dimension: rx_tx_rx_com_down {
      label: "Prescription RXCOM Down"
      description: "Flag that indicates that the RX_TX record was added while communication to the Central Patient database was down, and a patient select has not occured"
      type: yesno
      sql: ${TABLE}.SALE_RX_COM_DOWN = 'Y' ;;
    }

    dimension: rx_tx_rx_stolen {
      label: "Prescription Stolen"
      description: "Yes/No flag indicating if the prescription has been marked as stolen"
      type: yesno
      sql: ${TABLE}.SALE_RX_STOLEN = 'Y' ;;
    }

    dimension: rx_tx_specialty_pa {
      label: "Prescription Specialty PA"
      description: "Yes/No flag indicating if the drug marked as a specialty drug, is to be used for the specialty prior authorization services"
      type: yesno
      sql: ${TABLE}.SALE_SPECIALTY_PA = 'Y' ;;
    }

    dimension: rx_tx_specialty_pa_status {
      label: "Prescription Specialty PA Status"
      description: "Status used to determine where the order is in the specialty prior authorization communication process, from the time it leaves EPS for billing analysis to the time it comes back to the store for filling"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_SPECIALTY_PA_STATUS = '1' ;;
          label: "Specialty Sent"
        }

        when: {
          sql: ${TABLE}.SALE_SPECIALTY_PA_STATUS = '2' ;;
          label: "Specialty Received"
        }

        when: {
          sql: ${TABLE}.SALE_SPECIALTY_PA_STATUS = '3' ;;
          label: "Specialty Failed"
        }

        when: {
          sql: ${TABLE}.SALE_SPECIALTY_PA_STATUS = '4' ;;
          label: "Specialty Complete"
        }

        when: {
          sql: true ;;
          label: "Not Specified"
        }
      }
    }

    dimension: rx_tx_tx_user_modified {
      label: "Prescription Transaction User Modified"
      description: "Yes/No flag indicating if the prescription or transaction Modification/Correction was performed at the source system (EPS)"
      type: yesno
      sql: ${TABLE}.SALE_TX_USER_MODIFIED = 'Y' ;;
    }

    dimension: rx_tx_using_compound_plan_pricing {
      label: "Prescription Using Compound Plan Pricing"
      description: "Yes/No flag indicating if the Compound Plan Pricing was used when this transaction was priced"
      type: yesno
      sql: ${TABLE}.SALE_USING_COMPOUND_PLAN_PRICING = 'Y' ;;
    }

    dimension: rx_tx_using_percent_of_brand {
      label: "Prescription Using Percent of Brand"
      description: "Yes/No flag indicating if the generic price was based on a percentage of the brand price"
      type: yesno
      sql: ${TABLE}.SALE_USING_PERCENT_OF_BRAND = 'Y' ;;
    }

    dimension: rx_tx_intended_days_supply {
      label: "Prescription Intended Days Supply"
      description: "The original Days Supply that the customer requested for this transaction"
      type: number
      sql: ${TABLE}.SALE_INTENDED_DAYS_SUPPLY ;;
    }

    dimension: rx_tx_days_supply {
      label: "Prescription Days Supply"
      description: "The Days supply of the transaction, for the drug. The days supply is auto-populated in the client when the fill quantity and the SIG are entered. However, it can be entered manually by a user."
      type: number
      sql: ${TABLE}.SALE_DAYS_SUPPLY ;;
    }

    #####################################################################################End of YES/NO & CASE WHEN fields ###############################################################################################

    #####################  Dimensions Hidden (This view is primarily used for what is required for Workflow/Task History and will be extended for other subjects as it seems fit #############################################################################################
    dimension: rx_tx_is_340_b {
      label: "Prescription 340B"
      description: "Yes/No flag indicating if the transaction is a 340B transaction"
      type: yesno
      sql: ${TABLE}.SALE_IS_340B = 'Y' ;;
    }

    dimension: rx_tx_partial_fill_bill_type {
      label: "Prescription Partial Fill Bill Type"
      description: "Flag that indicates on a partial fill transaction, whether both the partial fill and completion fill are billed to a third party as the entire quantity or as separate quantities"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN ${TABLE}.SALE_PARTIAL_FILL_BILL_TYPE = 'B' THEN 'BILLED SEPARATELY'
             WHEN ${TABLE}.SALE_PARTIAL_FILL_BILL_TYPE = 'C' THEN 'BILLED WHEN COMPLETION FILL IS FILLED'
             WHEN ${TABLE}.SALE_PARTIAL_FILL_BILL_TYPE = 'P' THEN 'BILLED WHEN PARTIAL FILL IS FILLED'
             WHEN ${TABLE}.SALE_PARTIAL_FILL_BILL_TYPE IS NULL THEN 'NOT BILLED AS PARTIAL OR COMPLETION'
             ELSE ${TABLE}.SALE_PARTIAL_FILL_BILL_TYPE
        END ;;
      suggestions: ["BILLED SEPARATELY", "BILLED WHEN COMPLETION FILL IS FILLED", "BILLED WHEN PARTIAL FILL IS FILLED", "NOT BILLED AS PARTIAL OR COMPLETION"]
    }

    dimension: rx_tx_partial_fill_status {
      label: "Prescription Partial Fill Status"
      description: "Stores the indicator of 'P' or 'C' for partial(P) /completion(C) fills"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN ${TABLE}.SALE_PARTIAL_FILL_STATUS = 'C' THEN 'COMPLETED PARTIAL'
             WHEN ${TABLE}.SALE_PARTIAL_FILL_STATUS = 'P' THEN 'PARTIAL FILL'
             WHEN NVL(${TABLE}.SALE_PARTIAL_FILL_STATUS, 'N') = 'N' THEN 'NOT A PARTIAL'
             ELSE ${TABLE}.SALE_PARTIAL_FILL_STATUS
        END;;
      suggestions: ["COMPLETED PARTIAL", "PARTIAL FILL", "NOT A PARTIAL"]
    }

    dimension: rx_tx_pos_status {
      label: "Prescription POS Status"
      description: "Status of the transaction with respect to the POS system"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error. Need to correct the EDW.D_MASTER_CODE table to show valus as 'ACQUIRED, POS MULTIPLE ATTEMPTS' instead of 'ACQUIRED, POS MULTIPLE ATTE'.
      sql: CASE WHEN ${TABLE}.SALE_POS_STATUS IS NULL THEN 'NOT SENT'
             WHEN ${TABLE}.SALE_POS_STATUS = 'S' THEN 'SENT'
             WHEN ${TABLE}.SALE_POS_STATUS = 'R' THEN 'REPLACE WHEN SENT'
             WHEN ${TABLE}.SALE_POS_STATUS = 'D' THEN 'TO BE DELETED'
             WHEN ${TABLE}.SALE_POS_STATUS = 'A' THEN 'ALREADY ON POS'
             WHEN ${TABLE}.SALE_POS_STATUS = '1' THEN 'NOT PRESENT'
             WHEN ${TABLE}.SALE_POS_STATUS IN ('2', '5') THEN 'ACQUIRED'
             WHEN ${TABLE}.SALE_POS_STATUS = '3' THEN 'ACQUIRED, POS MULTIPLE ATTEMPTS'
             ELSE ${TABLE}.SALE_POS_STATUS
        END ;;
      suggestions: ["NOT SENT", "SENT", "REPLACE WHEN SENT", "TO BE DELETED", "ALREADY ON POS", "NOT PRESENT", "ACQUIRED", "ACQUIRED, POS MULTIPLE ATTEMPTS"]
    }

    dimension: rx_tx_rx_credit_initiator {
      label: "Prescription Credit Initiator"
      description: " Flag that indicates what function initiated the credit return"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      #[ERXDWPS-5198] - There are some records from Costco with 'y'. Need to add master code entry with lower case y.
      sql: CASE WHEN ${TABLE}.SALE_RX_CREDIT_INITIATOR IN ('', 'N') THEN 'NURSING HOME'
             WHEN ${TABLE}.SALE_RX_CREDIT_INITIATOR IS NULL THEN 'NOT CREDIT RETURNED'
             WHEN ${TABLE}.SALE_RX_CREDIT_INITIATOR IN ('Y', 'y') THEN 'PHARMACY'
             ELSE ${TABLE}.SALE_RX_CREDIT_INITIATOR
        END ;;
      suggestions: ["NURSING HOME", "NOT CREDIT RETURNED", "PHARMACY"]
    }

#[ERX-8161] Expose SALE_DELETED and SALE_RX_DELETED
    dimension: rx_tx_deleted {
      type: yesno
      label: "Prescription Transaction deleted"
      description: "Y/N Flag Indicating if a prescription transaction is deleted"
      sql: ${TABLE}.SALE_DELETED = 'Y' ;;
    }

    dimension: rx_deleted {
      type: yesno
      label: "Prescription deleted"
      description: "Y/N Flag Indicating if a prescription is deleted"
      sql: ${TABLE}.SALE_RX_DELETED = 'Y'  ;;
    }

    dimension: rx_tx_tp_bill {
      label: "Prescription TP Bill Status"
      description: "Indicates if this transaction was charged to a third party"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN ${TABLE}.SALE_TP_BILL = 'Y' THEN 'CHARGED TO TP'
             WHEN NVL(${TABLE}.SALE_TP_BILL, 'N') = 'N' THEN 'NO CHARGE TO TP'
             ELSE ${TABLE}.SALE_TP_BILL
        END ;;
      suggestions: ["CHARGED TO TP", "NO CHARGE TO TP"]
    }

    dimension: rx_tx_tx_deleted {
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_TX_DELETED ;;
    }

    ########################################################################################################## End of Dimensions #############################################################################################
    #################### These objects are referenced in sales explore to determine the Brand, Generic - ACQ, PRICE, Discount etc ##########################

    dimension: rx_tx_generic_acquisition_cost {
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_GENERIC_ACQUISITION_COST ;;
    }

    dimension: rx_tx_brand_acquisition_cost {
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_BRAND_ACQUISITION_COST ;;
    }

    dimension: rx_tx_generic_discount {
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_GENERIC_DISCOUNT ;;
    }

    dimension: rx_tx_brand_discount {
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_BRAND_DISCOUNT ;;
    }

    dimension: rx_tx_generic_price {
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_GENERIC_PRICE ;;
    }

    dimension: rx_tx_tax_amount {
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_TAX_AMOUNT ;;
    }

    dimension: rx_tx_brand_price {
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_BRAND_PRICE ;;
    }

    ########################################################################################################## reference dates used in other explores (currently used in sales )#############################################################################################
    ###### reference dates does not have any type as the type is defined in other explores....
    ###### the below objects are used as references in other view files....
    ### [ERXLPS-147]
    ####
    dimension: rx_tx_reportable_sales_reference {
      hidden: yes
      label: "Prescription Reportable Sales"
      description: "Used to record the date when a TP script was adjudicated. For cash scripts, it is set when DE is completed"
      sql: ${TABLE}.SALE_REPORTABLE_SALES_DATE ;;
    }

    dimension: rx_tx_fill_reference {
      hidden: yes
      label: "Prescription Filled"
      description: "Date prescription was filled"
      sql: ${TABLE}.SALE_FILL_DATE ;;
    }

    #ERXDWPS-5608 - Account for Nursing Home Flag on Prescription Transaction - Part -2
    #[ERXDWPS-5897] - Added liquid variables for nursing home script logic to make joins & use in logic only when Consider Nursing Home Scripts as Sold filter is used in Sales explore.
    dimension: rx_tx_will_call_picked_up_reference {
      hidden: yes
      label: "Prescription Will Call PickedUp"
      description: "Date/time that a prescription was sold out of Will Call by a user or by a POS system "
      sql: {% if sales.consider_nh_as_sold._in_query %}
         case when ${is_tx_nh_with_null_sold_date} = 'Y' then ${TABLE}.SALE_REPORTABLE_SALES_DATE else ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE end
        {% else %}
         ${TABLE}.SALE_WILL_CALL_PICKED_UP_DATE
        {% endif %}
        ;;
    }

    dimension: will_call_arrival_reference {
      hidden: yes
      label: "Prescription Will Call Arrival"
      description: "Date/time that a prescription enters Will Call"
      sql: ${TABLE}.SALE_WILL_CALL_ARRIVAL_DATE ;;
    }

    #[ERXLPS-645] Adding dimension to refere in Sales date
    dimension: rx_tx_written_reference {
      hidden: yes
      label: "Prescription Written Date"
      description: "Date the doctor wrote the prescription. User entered"
      sql: ${TABLE}.SALE_WRITTEN_DATE ;;
    }

    #[ERXLPS-645] Adding dimension to refere in Sales date
    dimension: rx_tx_next_refill_reference {
      hidden: yes
      label: "Next Refill Date"
      description: "Date prescription can be refilled, based on the days supply. Calculation Used: Filled Date + Days Supply"
      sql: DATEADD(DAY,${TABLE}.SALE_DAYS_SUPPLY,TO_DATE(${TABLE}.SALE_FILL_DATE)) ;;
    }

    dimension: rx_tx_drug_dispensed_reference {
      hidden: yes
      label: "Prescription Drug Dispensed"
      description: "Indicates the type of drug dispensed. Brand, Generic, Compound"
      type: string
      sql: ${TABLE}.SALE_DRUG_DISPENSED ;;
    }

    dimension: rx_tx_fill_status_reference {
      hidden: yes
      label: "Prescription Fill Status"
      description: "Indicates the type of transaction. New prescription transaction, Refill transaction and Non-filled, Cognitive service transaction"
      type: string
      sql: ${TABLE}.SALE_FILL_STATUS ;;
    }

    dimension: rx_tx_tp_bill_reference {
      hidden: yes
      label: "Prescription T/P Bill Status"
      description: "Indicates if this transaction was charged to a third party"
      type: string
      sql: ${TABLE}.SALE_TP_BILL ;;
    }

    dimension: rx_tx_custom_reported_reference {
      hidden: yes
      label: "Prescription Transaction Custom Reported"
      description: "Date/time the record was reported on the Meijer Sales Report"
      sql: ${TABLE}.SALE_CUSTOM_REPORTED_DATE ;;
    }

    dimension: rx_tx_central_fill_cutoff_reference {
      hidden: yes
      label: "Prescription Transaction Central Fill Cutoff"
      description: "The cut-off date that the prescription must be transmitted to the fulfillment site by so that the prescription can be delivered by the promised date. System generated depending upon time and date of prescription"
      sql: ${TABLE}.SALE_CENTRAL_FILL_CUTOFF_DATE ;;
    }

    dimension: rx_tx_drug_expiration_reference {
      hidden: yes
      label: "Prescription Transaction Drug Expiration"
      description: "Dispensed drug's expiration date. system generated or user entered"
      sql: ${TABLE}.SALE_DRUG_EXPIRATION_DATE ;;
    }

    dimension: rx_tx_follow_up_reference {
      hidden: yes
      label: "Prescription Transaction Follow Up"
      description: "Date of prescription follow-up. System Generated"
      sql: ${TABLE}.SALE_FOLLOW_UP_DATE ;;
    }

    dimension: rx_tx_stop_reference {
      hidden: yes
      label: "Prescription Transaction Stop"
      description: "Nursing home or institutional stop date. (The date that the patient should stop receiving medication)"
      sql: ${TABLE}.SALE_STOP_DATE ;;
    }

    dimension: rx_tx_source_create_reference {
      hidden: yes
      label: "Prescription Transaction Source Create"
      description: "Date/Time that the record was created. This date is used for central data analysis. Oracle generated timestamp when the insert is made in the database"
      sql: ${TABLE}.SOURCE_CREATE_TIMESTAMP ;;
    }
    #[ERXLPS-1055] Date reference dimensions for the remaining F_RX_TX_LINK date columns. End here...
    #[ERX-326]/[ERX-1624]
    ########################################################################################################## 4.8.000 New columns start #############################################################################################
    ## FK Columns

    dimension: rx_tx_new_rx_tx_id {
      description: "Unique ID that identifies the reassigned RXTX record that was generated from this record. System generated"
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_NEW_RX_TX_ID ;;
      value_format: "######"
    }

    dimension: rx_tx_old_rx_tx_id {
      description: "Unique ID that identifies the previous RXTX record that this record was generated from. System generated"
      hidden: yes
      type: number
      sql: ${TABLE}.SALE_OLD_RX_TX_ID ;;
      value_format: "######"
    }

    ########################################################################################################## Dimensions #############################################################################################

    dimension: rx_tx_group_code {
      label: "Prescription Group Code"
      description: "Group code for this prescription"
      type: string
      sql: ${TABLE}.SALE_GROUP_CODE ;;
    }

    dimension: rx_tx_icd9_code {
      label: "Prescription ICD9 Code"
      description: "ICD9 code selected during data entry. User selected"
      type: string
      sql: ${TABLE}.SALE_ICD9_CODE ;;
    }

    #[ERXDWPS-6304] - ICD9 description.
    dimension: store_patient_disease_icd9_description {
      label: "Prescription ICD9 Description"
      description: "Description of the ICD-9. EPS Table: ICD9"
      type: string
      sql: ${sales_rx_tx_icd9.store_icd9_description} ;;
    }

    dimension: rx_tx_pos_barcode_number {
      label: "Prescription POS Barcode Number"
      description: "Barcode identifier required by the POS system"
      type: number
      sql: ${TABLE}.SALE_POS_BARCODE_NUMBER ;;
      value_format: "######"
    }

    dimension: rx_tx_pv_initials {
      label: "Prescription PV Initials"
      description: "Initials of the user who performed Product Verification on this transaction. Entered by user, and system generated when transaction is created"
      type: string
      sql: ${TABLE}.SALE_PV_INITIALS ;;
    }

    dimension: rx_tx_rems_dispensing {
      label: "Prescription REMS Dispensing"
      description: "Yes/No flag indicating if the dispensed is a Risk Evaluation and Mitigation Strategy drug"
      type: yesno
      sql: ${TABLE}.SALE_REMS_DISPENSING = 'Y' ;;
    }

    dimension: rx_tx_route_of_administration_id {
      label: "Prescription Route Of Administration Identifier"
      description: "ID of the Route of Administration record linked to this RX_TX record. SNOMED code provided in the nhinclin file from NHIN. Must exist in the Route of Administration table"
      type: number
      sql: ${TABLE}.SALE_ROUTE_OF_ADMINISTRATION_ID ;;
      value_format: "######"
    }

    dimension: rx_tx_submitted_prescriber_dea {
      label: "Prescription Submitted Prescriber DEA"
      description: "Most recent DEA number of the prescriber that was submitted for PMP reporting for the RX_TX record"
      type: string
      sql: ${TABLE}.SALE_SUBMITTED_PRESCRIBER_DEA ;;
    }

    dimension: rx_tx_submitted_prescriber_npi {
      label: "Prescription Submitted Prescriber NPI"
      description: "Most recent NPI number of the prescriber that was submitted for PMP reporting for the RX_TX record"
      type: string
      sql: ${TABLE}.SALE_SUBMITTED_PRESCRIBER_NPI ;;
    }

    #[ERXLPS-2333] - Dimension added to use it in report filters.
    dimension: rx_tx_prescribed_quantity {
      label: "Prescription Prescribed Quantity"
      description: "Number of units (quantity) of the drug the doctor ordered"
      type: number
      sql: ${TABLE}.SALE_PRESCRIBED_QUANTITY ;;
      value_format: "#,##0.00;(#,##0.00)"
    }

    #[ERXDWPS-5091] - Price Code at Fill dimension. No results will populate for Price Code, if information not available in D_STORE_PRICE_CODE_HIST at the time of fill.
    dimension: rx_tx_price_code_at_fill {
      label: "Prescription Transaction Price Code at Fill"
      description: "Price Code information provided at the time of fill. This field is EPS only!!!"
      type:  string
      sql: etl_manager.fn_get_value_as_of_date(${store_price_code_hist_listagg.price_code_hist}, date_part(epoch_nanosecond, ${TABLE}.SALE_FILL_DATE),'N') ;;
    }

    ########################################################################################################## End of Dimensions #############################################################################################
    ########################################################################################### YES/NO & CASE WHEN fields ###############################################################################################

    dimension: rx_tx_charge {
      label: "Prescription Charge"
      description: "Yes/No flag indicating if you charged the transaction to accounts receivable. System generated when charged"
      type: yesno
      sql: ${TABLE}.SALE_CHARGE_FLAG = 'Y' ;;
    }

    dimension: rx_tx_counseling_choice {
      label: "Prescription Counseling Choice"
      description: "Indicates if Patient Counseling was Required, Accepted, or Refused for the transaction"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN ${TABLE}.SALE_COUNSELING_CHOICE = 'A' THEN 'ACCEPTED'
             WHEN ${TABLE}.SALE_COUNSELING_CHOICE = 'R' THEN 'REFUSED'
             WHEN ${TABLE}.SALE_COUNSELING_CHOICE = 'Q' THEN 'REQUIRED'
             WHEN ${TABLE}.SALE_COUNSELING_CHOICE IS NULL THEN 'NOT REQUIRED'
             ELSE ${TABLE}.SALE_COUNSELING_CHOICE
        END ;;
      suggestions: ["ACCEPTED", "REFUSED", "REQUIRED", "NOT REQUIRED"]
    }

    dimension: rx_tx_days_supply_basis {
      label: "Prescription Days Supply Basis"
      description: "Basis of days supply. User selected"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN NVL(${TABLE}.SALE_DAYS_SUPPLY_BASIS, '0') = '0' THEN 'NOT SPECIFIED'
             WHEN ${TABLE}.SALE_DAYS_SUPPLY_BASIS = '1' THEN 'EXPLICIT DIRECTIONS'
             WHEN ${TABLE}.SALE_DAYS_SUPPLY_BASIS = '2' THEN 'PRN DIRECTIONS'
             WHEN ${TABLE}.SALE_DAYS_SUPPLY_BASIS = '3' THEN 'AS DIRECTED BY PRESCRIBER'
             ELSE ${TABLE}.SALE_DAYS_SUPPLY_BASIS
        END ;;
      suggestions: ["NOT SPECIFIED", "EXPLICIT DIRECTIONS", "PRN DIRECTIONS", "AS DIRECTED BY PRESCRIBER"]
    }

    dimension: rx_tx_drug_schedule {
      label: "Drug Schedule"
      description: "The U.S. Drug Schedule."
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_DRUG_SCHEDULE = 1 ;;
          label: "SCHEDULE I DRUGS"
        }

        when: {
          sql: ${TABLE}.SALE_DRUG_SCHEDULE = 2 ;;
          label: "SCHEDULE II DRUGS"
        }

        when: {
          sql: ${TABLE}.SALE_DRUG_SCHEDULE = 3 ;;
          label: "SCHEDULE III DRUGS"
        }

        when: {
          sql: ${TABLE}.SALE_DRUG_SCHEDULE = 4 ;;
          label: "SCHEDULE IV DRUGS"
        }

        when: {
          sql: ${TABLE}.SALE_DRUG_SCHEDULE = 5 ;;
          label: "SCHEDULE V DRUGS"
        }

        when: {
          sql: ${TABLE}.SALE_DRUG_SCHEDULE = 6 ;;
          label: "LEGEND"
        }

        when: {
          sql: ${TABLE}.SALE_DRUG_SCHEDULE = 8 ;;
          label: "OTC"
        }

        when: {
          sql: true ;;
          label: "UNKNOWN"
        }
      }
    }

    ## [ERXLPS-418] ## - This is part of the rx_tx_drug_schedule dimension, it was replaced by sql_case: Due to the naming format being different for the Drug Schedule on the transaction, and the Master code change having to be done through a seperate release, commented out Master Code subquery until release of Master Code change in 4.8.002
    #     sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION)
    #             FROM EDW.D_MASTER_CODE MC
    #             WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_DRUG_SCHEDULE AS VARCHAR),'NULL')
    #             AND MC.EDW_COLUMN_NAME = 'SALE_DRUG_SCHEDULE'
    #             AND MC.SOURCE_SYSTEM = 'EPS')
    #    suggestions: ['SCHEDULE I DRUGS', 'SCHEDULE II DRUGS','SCHEDULE III DRUGS','SCHEDULE IV DRUGS','SCHEDULE V DRUGS','LEGEND DRUGS','OTC DRUGS','UNKNOWN']

    dimension: rx_tx_exclude_from_batch_fill {
      label: "Prescription Exclude From Batch"
      description: "Yes/No flag indicating if the prescription is to be excluded from the batch fill process. Input by the user on various DE and DV screens"
      type: yesno
      sql: ${TABLE}.SALE_EXCLUDE_FROM_BATCH_FILL_FLAG = 'Y' ;;
    }

    dimension: rx_tx_exclude_from_mar {
      label: "Prescription Exclude From MAR"
      description: "Yes/No flag indicating if the prescription is to be excluded from the MAR's report. Input by the user on various DE and DV screens"
      type: yesno
      sql: ${TABLE}.SALE_EXCLUDE_FROM_MAR_FLAG = 'Y' ;;
    }

    dimension: rx_tx_exclude_from_prescriber_order {
      label: "Prescription Exclude From Prescriber Order"
      description: "Yes/No flag indicating if the prescription is to be excluded from the Physician's Orders report. Input by the user on various DE and DV screens"
      type: yesno
      sql: ${TABLE}.SALE_EXCLUDE_FROM_PRESCRIBER_ORDER_FLAG = 'Y' ;;
    }

    #[ERXDWPS-6304] - Reference dimension created to use in joins.
    dimension: rx_tx_icd9_type_reference {
      label: "Prescription ICD9 Type"
      description: "ICD9 type. User Selected"
      type: string
      hidden: yes
      sql: ${TABLE}.SALE_ICD9_TYPE ;;
    }

    dimension: rx_tx_icd9_type {
      label: "Prescription ICD9 Type"
      description: "ICD9 type. User Selected"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN ${TABLE}.SALE_ICD9_TYPE IS NULL THEN 'ICD9'
             WHEN ${TABLE}.SALE_ICD9_TYPE = 'E' THEN 'EXTERNAL CAUSE'
             WHEN ${TABLE}.SALE_ICD9_TYPE = 'V' THEN 'FACTORS'
             WHEN ${TABLE}.SALE_ICD9_TYPE = 'M' THEN 'MORPHOLOGY'
             WHEN ${TABLE}.SALE_ICD9_TYPE = 'B' THEN 'ODB'
             ELSE ${TABLE}.SALE_ICD9_TYPE
        END ;;
      suggestions: ["ICD9", "EXTERNAL CAUSE", "FACTORS", "MORPHOLOGY", "ODB"]
    }

    dimension: rx_tx_sig_language {
      label: "Prescription SIG Language"
      description: "Indicates the SIG language. User selected"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN ${TABLE}.SALE_SIG_LANGUAGE = 'en' THEN 'ENGLISH'
             WHEN ${TABLE}.SALE_SIG_LANGUAGE = 'es' THEN 'SPANISH'
             WHEN ${TABLE}.SALE_SIG_LANGUAGE = 'fr' THEN 'FRENCH'
             WHEN ${TABLE}.SALE_SIG_LANGUAGE = 'de' THEN 'GERMAN'
             ELSE ${TABLE}.SALE_SIG_LANGUAGE
        END ;;
      suggestions: ["ENGLISH", "SPANISH", "FRENCH", "GERMAN"]
    }

    dimension: rx_tx_ncpdp_daw {
      label: "Prescription NCPDP DAW"
      description: "Indicates which DAW code was assigned during data entry. User Entered"
      type: string
      case: {
        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '0' ;;
          label: "0 - NO SELECTION"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '1' ;;
          label: "1 - DISPENSE AS WRITTEN"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '2' ;;
          label: "2 - BRAND - PATIENT CHOICE"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '3' ;;
          label: "3 - BRAND - PHARMACIST CHOICE"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '4' ;;
          label: "4 - BRAND - GENERIC OUT OF STOCK"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '5' ;;
          label: "5 - BRAND - DISPENSED AS GENERIC"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '6' ;;
          label: "6 - OVERRIDE"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '7' ;;
          label: "7 - BRAND - MANDATED BY LAW"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '8' ;;
          label: "8 - BRAND - GENERIC UNAVAILABLE"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW = '9' ;;
          label: "9 - OTHER"
        }

        when: {
          sql: ${TABLE}.SALE_NCPDP_DAW IS NULL ;;
          label: "NOT SPECIFIED"
        }
      }
      suggestions: [
        "0 - NO SELECTION",
        "1 - DISPENSE AS WRITTEN",
        "2 - BRAND - PATIENT CHOICE",
        "3 - BRAND - PHARMACIST CHOICE",
        "4 - BRAND - GENERIC OUT OF STOCK",
        "5 - BRAND - DISPENSED AS GENERIC",
        "6 - OVERRIDE",
        "7 - BRAND - MANDATED BY LAW",
        "8 - BRAND - GENERIC UNAVAILABLE",
        "9 - OTHER",
        "NOT SPECIFIED"
      ]
    }

    dimension: rx_tx_off_site {
      label: "Prescription Off Site Flag"
      description: "Yes/No flag indicating that the Single Drug Batch transaction was processed outside of the pharmacy. User Defined"
      type: yesno
      sql: ${TABLE}.SALE_OFF_SITE_FLAG = 'Y' ;;
    }

    dimension: rx_tx_pac_med {
      label: "Prescription PAC Med Flag"
      description: "Yes/No flag indicating whether the prescription was filled with a PacMed system. System Generated when pac med selection is made"
      type: yesno
      sql: ${TABLE}.SALE_PAC_MED_FLAG = 'Y' ;;
    }

    dimension: rx_tx_prescriber_transmitted {
      label: "Prescription Prescriber Transmitted"
      description: "Display whether the supervising prescriber or the actual prescriber was transmitted to the third party during adjudication. Used to determine what should be sent on refills during the transition. Written at time of dispensing"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN ${TABLE}.SALE_PRESCRIBER_TRANSMITTED IS NULL THEN 'FILLED PRIOR TO CHANGE'
             WHEN ${TABLE}.SALE_PRESCRIBER_TRANSMITTED = 'S' THEN 'SUPERVISING PRESCRIBER'
             WHEN ${TABLE}.SALE_PRESCRIBER_TRANSMITTED = 'P' THEN 'PRESCRIBER'
             ELSE ${TABLE}.SALE_PRESCRIBER_TRANSMITTED
        END ;;
      suggestions: ["FILLED PRIOR TO CHANGE", "SUPERVISING PRESCRIBER", "PRESCRIBER"]
    }

    dimension: rx_tx_safety_cap {
      label: "Prescription Safety Cap"
      description: "Yes/No Flag indicating if a safety cap was used on the prescription bottle for this transaction. User entered in EPS client"
      type: yesno
      sql: ${TABLE}.SALE_SAFETY_CAP_FLAG = 'Y' ;;
    }

    dimension: rx_tx_sig_prn {
      label: "Prescription SIG PRN"
      description: "Indicates if the SIG code for the transaction is PRN (as needed). System generated based on the SIG code associated with the prescription. Can be modified from the HOA's screen"
      type: string
      #[ERXDWPS-5198] - Modified logic to use CASE WHEN instead of SELECT MAX sql. The change is done as work around to avoid SF internal error.
      sql: CASE WHEN ${TABLE}.SALE_SIG_PRN_FLAG = 'Y' THEN 'SIG PRN'
             WHEN NVL(${TABLE}.SALE_SIG_PRN_FLAG, 'N') = 'N' THEN 'ROUTINE MED'
             WHEN ${TABLE}.SALE_SIG_PRN_FLAG = 'A' THEN 'ACTIVITY OF DAILY LIVING (ADL)'
             WHEN ${TABLE}.SALE_SIG_PRN_FLAG = 'T' THEN 'TREATMENT'
             ELSE ${TABLE}.SALE_SIG_PRN_FLAG
        END ;;
      suggestions: ["SIG PRN", "ROUTINE MED", "ACTIVITY OF DAILY LIVING (ADL)", "TREATMENT"]
    }

    dimension: rx_tx_usual {
      label: "Prescription Usual"
      description: "Yes/No flag indicating if this transaction used usual and customary pricing. System Generated if usual and customary price = price sold"
      type: yesno
      sql: ${TABLE}.SALE_USUAL_FLAG = 'Y' ;;
    }

    dimension: rx_tx_partial_fill_approved {
      label: "Prescription Partial Fill Approved"
      description: "Yes/No flag indicating record if a successful response has been sentback from the patient for a partial fill request"
      type: yesno
      sql: ${TABLE}.SALE_PARTIAL_FILL_APPROVED_FLAG = 'Y' ;;
    }

#[ERXLPS-1560] dimension is added to find out if the transaction is auto filled enable during fill time.

    dimension: transaction_autoFilled_flag {
      label: "Transaction Autofilled"
      description: "Yes/No flag indicating if this transaction has autofill enabled at the time of fill"
      #[ERXLPS-1807]
      type: yesno
      sql: ${TABLE}.SALE_REFILL_SOURCE = '2' ;;
    }

    dimension_group: rx_autofill_enable {
      label: "Prescription Autofill Enabled"
      description: "Date/Time the prescription was set up for auto-fill. This field is EPS only!!!"
      type: time
      hidden: yes
      timeframes: [time]
      sql:TO_DATE(${TABLE}.SALE_RX_AUTOFILL_ENABLE_DATE) ;;
    }
    ########################################################################################### End of YES/NO & CASE WHEN fields ###############################################################################################

    ####################################################################################################### Measures ####################################################################################################


    # Aggregation of these measures should be done on rx_tx_id. Earlier these measures were sourced from sales_eps_rx_tx but now as these columns are moved into
    # f_sales so these measures are defined here with sql_distinct_key without considering tx_tp_id
    measure: sum_sales_rx_tx_manual_acquisition_cost {
      label: "Total Prescription Manual Acquisition Cost"
      group_label: "Acquisition Cost"
      description: "Total prescription manual acquisition cost"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_manual_acquisition_cost END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_sales_rx_tx_manual_acquisition_cost {
      label: "Avg Prescription Manual Acquisition Cost"
      group_label: "Acquisition Cost"
      description: "Average prescription manual acquisition cost"
      type: average_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN COALESCE(${TABLE}.sale_manual_acquisition_cost,0) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_sales_rx_tx_professional_fee {
      label: "Prescription Total Professional Fee"
      group_label: "Other Measures"
      description: "Total of any additional fees included in the price of this transaction, outside of the normal pricing calculation"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_professional_fee END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_sales_rx_tx_professional_fee {
      label: "Prescription Average Professional Fee"
      group_label: "Other Measures"
      description: "Average of any additional fees included in the price of this transaction, outside of the normal pricing calculation"
      type: average_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN COALESCE(${TABLE}.sale_professional_fee,0) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_intended_quantity {
      label: "Prescription Intended Quantity"
      group_label: "Quantity"
      description: "The original quantity that the customer requested for this transaction"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_intended_quantity END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_original_quantity {
      label: "Prescription Original Quantity"
      group_label: "Quantity"
      description: "Original quantity on the transaction before credit return"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_original_quantity END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_prescribed_quantity {
      label: "Prescription Prescribed Quantity"
      group_label: "Quantity"
      description: "Number of units (quantity) of the drug the doctor ordered"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_prescribed_quantity END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_requested_price_to_quantity {
      label: "Prescription Requested Price To Quantity"
      group_label: "Quantity"
      description: "The requested dollar amount of the prescription that the patient would like to purchase"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_requested_price_to_quantity END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_sales_rx_tx_pos_overridden_net_paid {
      label: "Prescription POS Overridden Net Paid"
      group_label: "Price Override"
      description: "Total overridden net pay amount in the POS system, when it is a different amount than the patient net pay amount sent in the transaction request from EPS"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_pos_overridden_net_paid END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_sales_rx_tx_pos_overridden_net_paid {
      label: "Avg Prescription POS Overridden Net Paid"
      group_label: "Price Override"
      description: "Average overridden net pay amount in the POS system, when it is a different amount than the patient net pay amount sent in the transaction request from EPS"
      type: average_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN COALESCE(${TABLE}.sale_pos_overridden_net_paid,0) END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_fill_quantity {
      label: "Prescription Fill Quantity"
      group_label: "Quantity"
      description: "Total Quantity (number of units) of the drug dispensed"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.SALE_FILL_QUANTITY END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6349]Top 50 Price Increase Report- LY Fill Quantity Measures Needed
    measure: sum_sales_rx_tx_fill_quantity_ly {
      label: "LY Prescription Fill Quantity"
      group_label: "Quantity"
      description: "Total Quantity (number of units) of the drug dispensed for Last Year based on the period selected."
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'LY' THEN ${TABLE}.SALE_FILL_QUANTITY END ;;
      value_format: "#,##0.00;(#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_sales_rx_tx_fill_quantity_variance {
      label: "TY/LY Prescription Fill Quantity Variance"
      description: "Increase/Decrease of Quantity (number of units) of the drug dispensed compared to the last year. Calculation Used: (Prescription Fill Quantity - LY Prescription Fill Quantity)."
      type: number
      sql: ${sum_sales_rx_tx_fill_quantity} - ${sum_sales_rx_tx_fill_quantity_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_sales_rx_tx_fill_quantity_variance_pct {
      label: "TY/LY Prescription Fill Quantity Variance %"
      description: "Percentage Increase/Decrease of Quantity (number of units) of the drug dispensed compared to the last year. Calculation Used: ((Prescription Fill Quantity - LY Prescription Fill Quantity)/LY Prescription Fill Quantity)."
      type: number
      sql: CAST((${sum_sales_rx_tx_fill_quantity} - ${sum_sales_rx_tx_fill_quantity_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_sales_rx_tx_fill_quantity_ly}),0) ;;
      value_format: "00.00%"
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_fill_quantity_tp {
      label: "T/P Prescription Fill Quantity"
      group_label: "Quantity"
      description: "Total Fill Quantity of the T/P Prescription Transaction"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' AND ${rx_tx_tp_bill_reference} = 'Y' THEN ${TABLE}.SALE_FILL_QUANTITY END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_fill_quantity_cash {
      label: "Cash Prescription Fill Quantity"
      group_label: "Quantity"
      description: "Total Fill Quantity of the Cash Prescription Transaction"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' AND ${rx_tx_tp_bill_reference} = 'N' THEN ${TABLE}.SALE_FILL_QUANTITY END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_sales_rx_tx_original_price {
      label: "Prescription Original Price"
      group_label: "Other Price"
      description: "Total Original Price of the Prescription Transaction"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.SALE_ORIGINAL_PRICE END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_sales_rx_tx_base_cost {
      label: "Prescription Total Base Cost"
      group_label: "Other Measures"
      description: "Total dollar amount the cost base was for this transaction of the drug filled. System Generated"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.SALE_BASE_COST END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_sales_rx_tx_compound_fee {
      label: "Prescription Total Compound Fee"
      group_label: "Other Measures"
      description: "Total compound preparation charges. User entered. Compound rate multiplied by compound time"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.SALE_COMPOUND_FEE END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_sales_rx_tx_up_charge {
      label: "Prescription Total Up Charge"
      group_label: "Other Measures"
      description: "Total amount by which the cost base (for the drug filled) was adjusted by a base cost table (third party prescription only). System Generated"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_up_charge END ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_sales_rx_tx_owed_quantity {
      label: "Prescription Total Owed Quantity"
      group_label: "Quantity"
      description: "Total number of units (quantity) of the drug that are owed to the patient. Auto-calculated via client"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_owed_quantity END ;;
      value_format: "#,##0.00"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_prescribed_quantity_tp {
      label: "T/P Prescription Prescribed Quantity"
      group_label: "Quantity"
      description: "Number of units (quantity) of the drug the doctor ordered for Third Party transactions"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' AND ${rx_tx_tp_bill_reference} = 'Y' THEN ${TABLE}.sale_prescribed_quantity END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-1055] - modified value format precision from 4 to 2.
    measure: sum_sales_rx_tx_prescribed_quantity_cash {
      label: "Cash Prescription Prescribed Quantity"
      group_label: "Quantity"
      description: "Number of units (quantity) of the drug the doctor ordered for Cash transactions"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' AND ${rx_tx_tp_bill_reference} = 'N' THEN ${TABLE}.sale_prescribed_quantity END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

  #[ERXDWPS-5191] - Looker - Albertsons Dispensed Quantity dimensions / measures not using same Partial Logic as Financial Category | Start
  dimension: rx_tx_partial_fill_bill_type_reference {
    label: "Prescription Transaction Partial Fill Bill Type Reference"
    type: string
    hidden: yes
    sql: ${TABLE}.SALE_PARTIAL_FILL_BILL_TYPE ;;
  }

#[ERXLPS-1261] added as a part of Albertsons request for partial/completion fill dispensed quantity
    measure: sum_rx_tx_partial_fill_dispensed_quantity {
      label: "Prescription Partial Fill Dispensed Quantity"
      group_label: "Quantity"
      description: "Total quantity of drug dispensed on the Partial fill corresponding to this Completion fill transaction. This field is populated only on the Active Completion fill transaction"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY'
           THEN CASE WHEN (   (${rx_tx_partial_fill_status_reference} = 'P' and ${rx_tx_partial_fill_bill_type_reference} != 'C')
                           OR (${rx_tx_partial_fill_status_reference} = 'C' and ${rx_tx_partial_fill_bill_type_reference} != 'P')
                          )
                      AND NVL(${rx_tx_tx_status_reference},'Y') = 'Y'
                     THEN ${eps_rx_tx_partial_fill.rx_tx_fill_quantity}
                     ELSE 0
                 END
       END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_tx_total_completion_dispensed_quantity {
      label: "Prescription Total Dispensed Quantity"
      group_label: "Quantity"
      description: "Total quantity of drug dispensed on the transaction considering associated Partial fill. This field is populated only on the Active Completion fill transaction"
      type: sum_distinct
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY'
           THEN CASE WHEN (   (${rx_tx_partial_fill_status_reference} = 'P' and ${rx_tx_partial_fill_bill_type_reference} != 'C')
                           OR (${rx_tx_partial_fill_status_reference} = 'C' and ${rx_tx_partial_fill_bill_type_reference} != 'P')
                          )
                      AND NVL(${rx_tx_tx_status_reference},'Y') = 'Y'
                     THEN (${eps_rx_tx_partial_fill.rx_tx_fill_quantity} + ${rx_tx_fill_quantity})
                     ELSE 0
                 END
       END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

  #[ERXDWPS-7167] - Request for new Dimensions (Total Days Supply, Received Copay)
  dimension: rx_tx_total_completion_days_supply {
    label: "Prescription Total Days Supply *"
    description: "Total Days Supply of drug dispensed on the transaction considering associated Partial fill. This field is populated only on the Active Completion fill transaction"
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY'
           THEN CASE WHEN (   (${rx_tx_partial_fill_status_reference} = 'P' and ${rx_tx_partial_fill_bill_type_reference} != 'C')
                           OR (${rx_tx_partial_fill_status_reference} = 'C' and ${rx_tx_partial_fill_bill_type_reference} != 'P')
                          )
                      AND NVL(${rx_tx_tx_status_reference},'Y') = 'Y'
                     THEN (${eps_rx_tx_partial_fill.rx_tx_days_supply} + ${rx_tx_days_supply})
                     ELSE 0
                 END
       END ;;
    value_format: "#,##0.00;(#,##0.00)"
  }

  #[ERXDWPS-7167] - Request for new Dimensions (Total Days Supply, Received Copay)
  measure: sum_rx_tx_total_completion_days_supply {
    label: "Prescription Total Days Supply *"
    description: "Total Days Supply of drug dispensed on the transaction considering associated Partial fill. This field is populated only on the Active Completion fill transaction"
    type: sum_distinct
    sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY'
           THEN CASE WHEN (   (${rx_tx_partial_fill_status_reference} = 'P' and ${rx_tx_partial_fill_bill_type_reference} != 'C')
                           OR (${rx_tx_partial_fill_status_reference} = 'C' and ${rx_tx_partial_fill_bill_type_reference} != 'P')
                          )
                      AND NVL(${rx_tx_tx_status_reference},'Y') = 'Y'
                     THEN (${eps_rx_tx_partial_fill.rx_tx_days_supply} + ${rx_tx_days_supply})
                     ELSE 0
                 END
       END ;;
    value_format: "#,##0.00;(#,##0.00)"
    drill_fields: [sales_transaction_level_drill_path*]
  }

    dimension: rx_tx_total_completion_dispensed_quantity {
      label: "Prescription Dispensed Quantity"
      group_label: "Quantity"
      description: "Quantity of drug dispensed on the transaction considering associated Partial fill. This field is populated only on the Active Completion fill transaction"
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY'
           THEN CASE WHEN (   (${rx_tx_partial_fill_status_reference} = 'P' and ${rx_tx_partial_fill_bill_type_reference} != 'C')
                           OR (${rx_tx_partial_fill_status_reference} = 'C' and ${rx_tx_partial_fill_bill_type_reference} != 'P')
                          )
                      AND NVL(${rx_tx_tx_status_reference},'Y') = 'Y'
                     THEN (${eps_rx_tx_partial_fill.rx_tx_fill_quantity} + ${rx_tx_fill_quantity})
                     ELSE 0
                 END
       END ;;
      value_format: "#,##0.00;(#,##0.00)" #[ERXLPS-2190]
      drill_fields: [sales_transaction_level_drill_path*]
    }

  #[ERXDWPS-5191] - Looker - Albertsons Dispensed Quantity dimensions / measures not using same Partial Logic as Financial Category | End

    #[ERXLPS-2295]
    ############################################################################### Drug Cost At time of Fill measures ###############################################################
    #Pharmacy Drug Cost at time of fill
    dimension: drug_awp_cost_per_unit_amount_store_reference {
      hidden: yes
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.drug_awp_cost_per_unit_amount_reference})*-1
             WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.drug_awp_cost_per_unit_amount_reference}
      END ;;
    }

    #[ERXLPS-6322]
    dimension: drug_awp_cost_per_unit_amount_store_ly_reference {
      hidden: yes
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.drug_awp_cost_per_unit_amount_reference})*-1
             WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.drug_awp_cost_per_unit_amount_reference}
        END ;;
    }

    #[ERXDWPS-7024] - Pharmacy Drug ACQ per unit amount dimension exposed.
    dimension: drug_acq_cost_per_unit_amount_store {
      label: "Drug ACQ Cost Per Unit Amount At Fill - Pharmacy"
      description: "Represents the Acquisition Cost of the Pharmacy Drug Per Unit Amount at the time of fill. (Calculation Used: Pharmacy Drug ACQ Amount/Decimal Pack Size). This field is EPS only!!!"
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.drug_acq_cost_per_unit_amount_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.drug_acq_cost_per_unit_amount_reference}
        END ;;
      value_format: "$#,##0.0000000;($#,##0.0000000)"
    }

    #[ERXDWPS-7020] - Dimension created to reference in AWP Ingredient Cost % measure and dimension.
    dimension: drug_awp_cost_amount_store_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.drug_awp_cost_amount_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.drug_awp_cost_amount_reference}
          END ;;
    }

    dimension: rx_tx_awp_cost_amount_at_fill_store_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.rx_tx_awp_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.rx_tx_awp_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_wac_cost_amount_at_fill_store_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.rx_tx_wac_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.rx_tx_wac_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_acq_cost_amount_at_fill_store_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.rx_tx_acq_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.rx_tx_acq_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_reg_cost_amount_at_fill_store_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.rx_tx_reg_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.rx_tx_reg_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_mac_cost_amount_at_fill_store_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.rx_tx_mac_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.rx_tx_mac_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_std_cost_amount_at_fill_store_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.rx_tx_std_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.rx_tx_std_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_dp_cost_amount_at_fill_store_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_store_drug_cost_hist.rx_tx_dp_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_store_drug_cost_hist.rx_tx_dp_cost_amount_at_fill_reference}
          END ;;
    }

    measure: sum_drug_awp_cost_amount_store {
      label: "Total Pharmacy Drug AWP Amount"
      description: "Represents the Average Wholesale Price of the Pharmacy Drug at the time of fill. This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      sql: ${drug_awp_cost_amount_store_reference} ;;
      sql_distinct_key: ${rx_tx_store_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXLPS-6322] - Corrected distinct key used in md5_number logic.
    measure: sum_drug_awp_cost_per_unit_amount_store {
      label: "Total Pharmacy Drug AWP Per Unit Amount"
      description: "Represents the Average Wholesale Price of the Pharmacy Drug Per Unit Amount at the time of fill. (Calculation Used: Pharmacy Drug AWP Amount/Decimal Pack Size). This field is EPS only!!!"
      type: number
      #[ERXLPS-1347] SF behavior for division of two integers. Result default to 3 decimals and truncate value(do not round). Due to this we are missing 4th decimal. Applied workaround as SF suggested in SF#20683.
      sql: ( SUM(DISTINCT (CAST(FLOOR(${drug_awp_cost_per_unit_amount_store_reference}*(1000000*1.0)) AS DECIMAL(38,0))) + (CASE WHEN ${drug_awp_cost_per_unit_amount_store_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0) ) - SUM(DISTINCT (CASE WHEN ${drug_awp_cost_per_unit_amount_store_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0)) ) :: NUMBER(38,7) / (1000000*1.0) ;;
      # extended to 7 decimal places (to match with store value) because some generics will be really low cost.
      value_format: "$#,##0.0000000;($#,##0.0000000)"
    }

    #[ERXLPS-6322] - LY Measure added for Pharmacy Unit price
    measure: sum_drug_awp_cost_per_unit_amount_store_ly {
      label: "LY Total Pharmacy Drug AWP Per Unit Amount"
      description: "Represents the Average Wholesale Price of the Pharmacy Drug Per Unit Amount at the time of fill, for the last year. (Calculation Used: Pharmacy Drug AWP Amount/Decimal Pack Size). This field is EPS only!!!"
      type: number
      #[ERXLPS-1347] SF behavior for division of two integers. Result default to 3 decimals and truncate value(do not round). Due to this we are missing 4th decimal. Applied workaround as SF suggested in SF#20683.
      sql: ( SUM(DISTINCT (CAST(FLOOR(${drug_awp_cost_per_unit_amount_store_ly_reference}*(1000000*1.0)) AS DECIMAL(38,0))) + (CASE WHEN ${drug_awp_cost_per_unit_amount_store_ly_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0) ) - SUM(DISTINCT (CASE WHEN ${drug_awp_cost_per_unit_amount_store_ly_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0)) ) :: NUMBER(38,7) / (1000000*1.0) ;;
      # extended to 7 decimal places (to match with store value) because some generics will be really low cost.
      value_format: "$#,##0.0000000;($#,##0.0000000)"
    }

    measure: sum_rx_tx_awp_cost_amount_at_fill_store {
      label: "Total AWP Amount At Fill - Pharmacy"
      description: "Represents the Pharmacy Average Wholesale Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill. (Calculation Used: ((Pharmacy Drug AWP Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_awp_cost_amount_at_fill_store_reference} ;;
      sql_distinct_key: ${rx_tx_store_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_wac_cost_amount_at_fill_store {
      label: "Total WAC Amount At Fill - Pharmacy"
      description: "Represents the Pharmacy Wholesaler Acquisition Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill. (Calculation Used: ((Pharmacy Drug WAC Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_wac_cost_amount_at_fill_store_reference} ;;
      sql_distinct_key: ${rx_tx_store_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_acq_cost_amount_at_fill_store {
      label: "Total ACQ Amount At Fill - Pharmacy"
      description: "Represents the Pharmacy Acquisition Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill. (Calculation Used: ((Pharmacy Drug ACQ Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_acq_cost_amount_at_fill_store_reference} ;;
      sql_distinct_key: ${rx_tx_store_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_reg_cost_amount_at_fill_store {
      label: "Total REG Amount At Fill - Pharmacy"
      description: "Represents the Pharmacy Regular Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill. (Calculation Used: ((Pharmacy Drug REG Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_reg_cost_amount_at_fill_store_reference} ;;
      sql_distinct_key: ${rx_tx_store_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_mac_cost_amount_at_fill_store {
      label: "Total MAC Amount At Fill - Pharmacy"
      description: "Represents the Pharmacy Maximum Allowable Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill. (Calculation Used: ((Pharmacy Drug MAC Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_mac_cost_amount_at_fill_store_reference} ;;
      sql_distinct_key: ${rx_tx_store_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_std_cost_amount_at_fill_store {
      label: "Total STD Amount At Fill - Pharmacy"
      description: "Represents the Pharmacy Standard Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill. (Calculation Used: ((Pharmacy Drug STD Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_std_cost_amount_at_fill_store_reference} ;;
      sql_distinct_key: ${rx_tx_store_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_dp_cost_amount_at_fill_store {
      label: "Total DP Amount At Fill - Pharmacy"
      description: "Represents the Pharmacy Direct Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill. (Calculation Used: ((Pharmacy Drug DP Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_dp_cost_amount_at_fill_store_reference} ;;
      sql_distinct_key: ${rx_tx_store_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #Host Drug Cost at time of fill
    dimension: drug_awp_cost_per_unit_amount_host_reference {
      hidden: yes
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.drug_awp_cost_per_unit_amount_reference})*-1
           WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.drug_awp_cost_per_unit_amount_reference}
      END ;;
    }

    #[ERXLPS-6322]
    dimension: drug_awp_cost_per_unit_amount_host_ly_reference {
      hidden: yes
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.drug_awp_cost_per_unit_amount_reference})*-1
             WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'LY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.drug_awp_cost_per_unit_amount_reference}
        END ;;
    }

    #[ERXDWPS-7020] - Reference dimensions created
    dimension: drug_awp_cost_amount_host_reference {
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.drug_awp_cost_amount_reference})*-1
                 WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.drug_awp_cost_amount_reference}
            END ;;
    }

    dimension: rx_tx_awp_cost_amount_at_fill_host_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.rx_tx_awp_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.rx_tx_awp_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_wac_cost_amount_at_fill_host_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.rx_tx_wac_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.rx_tx_wac_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_acq_cost_amount_at_fill_host_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.rx_tx_acq_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.rx_tx_acq_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_reg_cost_amount_at_fill_host_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.rx_tx_reg_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.rx_tx_reg_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_mac_cost_amount_at_fill_host_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.rx_tx_mac_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.rx_tx_mac_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_std_cost_amount_at_fill_host_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.rx_tx_std_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.rx_tx_std_cost_amount_at_fill_reference}
          END ;;
    }

    dimension: rx_tx_dp_cost_amount_at_fill_host_reference {
      type: number
      hidden: yes
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT') THEN (${rx_tx_drug_cost_hist.rx_tx_dp_cost_amount_at_fill_reference})*-1
               WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND ${report_calendar_global.type} = 'TY' AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED') THEN ${rx_tx_drug_cost_hist.rx_tx_dp_cost_amount_at_fill_reference}
          END ;;
    }

    measure: sum_drug_awp_cost_amount_host {
      label: "Total HOST Drug AWP Amount"
      description: "Represents the Average Wholesale Price of the HOST Drug at the time of fill. This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      sql: ${drug_awp_cost_amount_host_reference} ;;
      sql_distinct_key: ${rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    #[ERXLPS-6322] - Corrected distinct key used in md5_number logic.
    measure: sum_drug_awp_cost_per_unit_amount_host {
      label: "Total HOST Drug AWP Per Unit Amount"
      description: "Represents the Average Wholesale Price of the HOST Drug Per Unit Amount at the time of fill. (Calculation Used: HOST Drug AWP Amount/Decimal Pack Size). This field is EPS only!!!"
      type: number
      #[ERXLPS-1347] SF behavior for division of two integers. Result default to 3 decimals and truncate value(do not round). Due to this we are missing 4th decimal. Applied workaround as SF suggested in SF#20683.
      sql: ( SUM(DISTINCT (CAST(FLOOR(${drug_awp_cost_per_unit_amount_host_reference}*(1000000*1.0)) AS DECIMAL(38,0))) + (CASE WHEN ${drug_awp_cost_per_unit_amount_host_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0) ) - SUM(DISTINCT (CASE WHEN ${drug_awp_cost_per_unit_amount_host_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0)) ) :: NUMBER(38,7) / (1000000*1.0) ;;
      # extended to 7 decimal places (to match with store value) because some generics will be really low cost.
      value_format: "$#,##0.0000000;($#,##0.0000000)"
    }

    #[ERXLPS-6322] - LY Measure added for Pharmacy Unit price
    measure: sum_drug_awp_cost_per_unit_amount_host_ly {
      label: "LY Total HOST Drug AWP Per Unit Amount"
      description: "Represents the Average Wholesale Price of the HOST Drug Per Unit Amount at the time of fill, for the last year. (Calculation Used: HOST Drug AWP Amount/Decimal Pack Size). This field is EPS only!!!"
      type: number
      #[ERXLPS-1347] SF behavior for division of two integers. Result default to 3 decimals and truncate value(do not round). Due to this we are missing 4th decimal. Applied workaround as SF suggested in SF#20683.
      sql: ( SUM(DISTINCT (CAST(FLOOR(${drug_awp_cost_per_unit_amount_host_ly_reference}*(1000000*1.0)) AS DECIMAL(38,0))) + (CASE WHEN ${drug_awp_cost_per_unit_amount_host_ly_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0) ) - SUM(DISTINCT (CASE WHEN ${drug_awp_cost_per_unit_amount_host_ly_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0)) ) :: NUMBER(38,7) / (1000000*1.0) ;;
      # extended to 7 decimal places (to match with store value) because some generics will be really low cost.
      value_format: "$#,##0.0000000;($#,##0.0000000)"
    }

    measure: sum_rx_tx_awp_cost_amount_at_fill_host {
      label: "Total AWP Amount At Fill - HOST"
      description: "Represents the Average Wholesale Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill wrt HOST Drug. (Calculation Used: ((HOST Drug AWP Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_awp_cost_amount_at_fill_host_reference} ;;
      sql_distinct_key: ${rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_wac_cost_amount_at_fill_host {
      label: "Total WAC Amount At Fill - HOST"
      description: "Represents the Wholesaler Acquisition Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill wrt HOST Drug. (Calculation Used: ((HOST Drug WAC Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_wac_cost_amount_at_fill_host_reference} ;;
      sql_distinct_key: ${rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_acq_cost_amount_at_fill_host {
      label: "Total ACQ Amount At Fill - HOST"
      description: "Represents the Acquisition Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill wrt HOST Drug. (Calculation Used: ((HOST Drug ACQ Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_acq_cost_amount_at_fill_host_reference} ;;
      sql_distinct_key: ${rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_reg_cost_amount_at_fill_host {
      label: "Total REG Amount At Fill - HOST"
      description: "Represents the Regular Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill wrt HOST Drug. (Calculation Used: ((HOST Drug REG Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_reg_cost_amount_at_fill_host_reference} ;;
      sql_distinct_key: ${rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_mac_cost_amount_at_fill_host {
      label: "Total MAC Amount At Fill - HOST"
      description: "Represents the Maximum Allowable Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill wrt HOST Drug. (Calculation Used: ((HOST Drug MAC Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_mac_cost_amount_at_fill_host_reference} ;;
      sql_distinct_key: ${rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_std_cost_amount_at_fill_host {
      label: "Total STD Amount At Fill - HOST"
      description: "Represents the Standard Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill wrt HOST Drug. (Calculation Used: ((HOST Drug STD Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_std_cost_amount_at_fill_host_reference} ;;
      sql_distinct_key: ${rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_dp_cost_amount_at_fill_host {
      label: "Total DP Amount At Fill - HOST"
      description: "Represents the Direct Price of the Prescription Transaction based on the Fill Quantity and the Drug Cost at the time of fill wrt HOST Drug. (Calculation Used: ((HOST Drug DP Amount/Decimal Pack Size) * Prescription Transaction Fill Quantity). This field is EPS only!!!"
      type: sum_distinct #[ERXDWPS-5207]
      group_label: "Drug Cost at Fill"
      sql: ${rx_tx_dp_cost_amount_at_fill_host_reference} ;;
      sql_distinct_key: ${rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;; #[ERXLPS-4343][ERXDWPS-7728]
      value_format: "$#,##0.00;($#,##0.00)"
    }

    ############################################################################### Drug Cost At time of Fill measures ###############################################################

#ERXDWPS-7019 - Albertsons - Expose Medispan Drug Cost in Looker | Start



  dimension: rx_tx_aawp_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_aawp_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_aawp_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_acf_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_acf_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_acf_cost_at_fill_reference}
           END ;;
  }

  dimension: medispan_drug_awp_cost_unit_amount_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.medispan_drug_awp_cost_unit_amount_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.medispan_drug_awp_cost_unit_amount_reference}
           END ;;
  }

  dimension: medispan_drug_awp_cost_unit_amount_ly_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                 AND ${report_calendar_global.type} = 'LY'
                 AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
                THEN (${medispan_rx_tx_drug_cost_hist.medispan_drug_awp_cost_unit_amount_reference}) * -1
                WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
                 AND ${report_calendar_global.type} = 'LY'
                 AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
                THEN ${medispan_rx_tx_drug_cost_hist.medispan_drug_awp_cost_unit_amount_reference}
           END ;;
  }

  dimension: rx_tx_awp_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_awp_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_awp_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_dp_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_dp_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_dp_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_geap_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_geap_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_geap_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_mac_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_mac_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_mac_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_nadc_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_nadc_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_nadc_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_nadg_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_nadg_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_nadg_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_nadi_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_nadi_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_nadi_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_nads_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_nads_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_nads_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_waa_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_waa_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_waa_cost_at_fill_reference}
           END ;;
  }

  dimension: rx_tx_wac_cost_at_fill_medispan_reference {
    hidden: yes
    type: number
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - CREDIT', 'T/P - CREDIT', 'PARTIAL - CREDIT')
              THEN (${medispan_rx_tx_drug_cost_hist.rx_tx_wac_cost_at_fill_reference}) * -1
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${report_calendar_global.type} = 'TY'
               AND ${financial_category} IN ('CASH - FILLED', 'T/P - FILLED', 'PARTIAL - FILLED')
              THEN ${medispan_rx_tx_drug_cost_hist.rx_tx_wac_cost_at_fill_reference}
           END ;;
  }

  measure: sum_rx_tx_aawp_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total AAWP Amount At Fill - Medi-Span"
    description: "Represents the Average Average Wholesale Price of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug AAWP Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_aawp_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_acf_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total ACF Amount At Fill - Medi-Span"
    description: "Represents the Affordable Care Act of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug ACF Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_acf_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_medispan_drug_awp_cost_unit_amount_medispan {
    label: "Total Medi-Span Drug AWP Per Unit Amount"
    description: "Represents the Average Wholesale Price of the Medi-Span Drug Per Unit Amount at the time of fill"
    type: number
    #[ERXLPS-1347] SF behavior for division of two integers. Result default to 3 decimals and truncate value(do not round). Due to this we are missing 4th decimal. Applied workaround as SF suggested in SF#20683.
    sql: ( SUM(DISTINCT (CAST(FLOOR(${medispan_drug_awp_cost_unit_amount_medispan_reference}*(1000000*1.0)) AS DECIMAL(38,0))) + (CASE WHEN ${medispan_drug_awp_cost_unit_amount_medispan_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0) ) - SUM(DISTINCT (CASE WHEN ${medispan_drug_awp_cost_unit_amount_medispan_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0)) ) :: NUMBER(38,7) / (1000000*1.0) ;;
    # extended to 7 decimal places (to match with store value) because some generics will be really low cost.
    value_format: "$#,##0.0000000;($#,##0.0000000)"
  }

  measure: sum_medispan_drug_awp_cost_unit_amount_ly_medispan {
    type: number
    label: "LY Total Medi-Span Drug AWP Per Unit Amount"
    description: "Represents the Average Wholesale Price of the Medi-Span Drug Per Unit Amount at the time of fill, for the last year"
    #[ERXLPS-1347] SF behavior for division of two integers. Result default to 3 decimals and truncate value(do not round). Due to this we are missing 4th decimal. Applied workaround as SF suggested in SF#20683.
    sql: ( SUM(DISTINCT (CAST(FLOOR(${medispan_drug_awp_cost_unit_amount_ly_medispan_reference}*(1000000*1.0)) AS DECIMAL(38,0))) + (CASE WHEN ${medispan_drug_awp_cost_unit_amount_ly_medispan_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0) ) - SUM(DISTINCT (CASE WHEN ${medispan_drug_awp_cost_unit_amount_ly_medispan_reference} IS NOT NULL THEN MD5_NUMBER(${chain_id} ||'@'||${nhin_store_id} ||'@'||${rx_tx_id}||'@'||${report_type} ||'@'||${financial_category} ) ELSE 0 END % 1.0e27)::NUMERIC(38,0)) ) :: NUMBER(38,7) / (1000000*1.0) ;;
    # extended to 7 decimal places (to match with store value) because some generics will be really low cost.
    value_format: "$#,##0.0000000;($#,##0.0000000)"
  }

  measure: sum_rx_tx_awp_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total AWP Amount At Fill - Medi-Span"
    description: "Represents the Average Wholesale Price of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug AWP Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_awp_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_dp_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total DP Amount At Fill - Medi-Span"
    description: "Represents the Direct Price of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug DP Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_dp_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_geap_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total GEAP Amount At Fill - Medi-Span"
    description: "Represents the Generic Equivalent Average Price of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug GEAP Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_geap_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_mac_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total MAC Amount At Fill - Medi-Span"
    description: "Represents the Maximum Allowable Cost of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug MAC Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_mac_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_nadc_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total NADC Amount At Fill - Medi-Span"
    description: "Represents the National Average Drug Acquisition Cost Chain of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug NADC Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_nadc_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_nadg_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total NADG Amount At Fill - Medi-Span"
    description: "Represents the National Average Drug Acquisition Cost Generic of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug NADG Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_nadg_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_nadi_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total NADI Amount At Fill - Medi-Span"
    description: "Represents the National Average Drug Acquisition Cost Independent of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug NADI Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_nadi_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_nads_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total NADS Amount At Fill - Medi-Span"
    description: "Represents the National Average Drug Acquisition Cost Specialty of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug NADS Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_nads_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_waa_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total WAA Amount At Fill - Medi-Span"
    description: "Represents the Weighted Average - Average Manufacturer Cost of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug WAA Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_waa_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  measure: sum_rx_tx_wac_cost_at_fill_medispan {
    type: sum_distinct
    label: "Total WAC Amount At Fill - Medi-Span"
    description: "Represents the Wholesale Acquisition Cost of the Prescription Transaction based on the Fill Quantity and the Medi-Span Drug Cost at the time of fill wrt Medi-Span Drug. (Calculation Used: Medi-Span Drug WAC Unit Amount *  Prescription Transaction Fill Quantity)"
    group_label: "Medi-Span Drug Cost at Fill"
    sql: ${rx_tx_wac_cost_at_fill_medispan_reference} ;;
    sql_distinct_key: ${medispan_rx_tx_drug_cost_hist.unique_key}||'@'||${report_type} ||'@'||${financial_category} ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  #[ERXDWPS-7020] - Medispan drug cost related dimensions
  dimension: awp_ingredient_cost_pct_medispan {
    label: "AWP Ingredient Cost % - Medi-Span"
    description: "Ingredient Cost percentage based on AWP Cost at the time of fill at Medi-Span. Calculation Used: ( Response Detail Ingredient Amount / AWP at time of fill - Medi-Span )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${rx_tx_awp_cost_at_fill_medispan_reference},0),6) ;;
    value_format: "00.0000%"
  }

  dimension: wac_ingredient_cost_pct_medispan {
    label: "WAC Ingredient Cost % - Medi-Span"
    description: "Ingredient Cost percentage based on WAC Cost at the time of fill at Medi-Span. Calculation Used: ( Response Detail Ingredient Amount / WAC at time of fill - Medi-Span )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${rx_tx_wac_cost_at_fill_medispan_reference},0),6) ;;
    value_format: "00.0000%"
  }

  measure: sum_awp_ingredient_cost_pct_medispan {
    label: "AWP Ingredient Cost % - Medi-Span"
    description: "Ingredient Cost percentage based on AWP Cost at the time of fill at Medi-Span. Calculation Used: ( Response Detail Ingredient Amount / AWP at time of fill - Medi-Span )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sum_sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${sum_rx_tx_awp_cost_at_fill_medispan},0),6) ;;
    value_format: "00.0000%"
  }

  measure: sum_wac_ingredient_cost_pct_medispan {
    label: "WAC Ingredient Cost % - Medi-Span"
    description: "Ingredient Cost percentage based on WAC Cost at the time of fill at Medi-Span. Calculation Used: ( Response Detail Ingredient Amount / WAC at time of fill - Medi-Span )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sum_sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${sum_rx_tx_wac_cost_at_fill_medispan},0),6) ;;
    value_format: "00.0000%"
  }

#ERXDWPS-7019 - Albertsons - Expose Medispan Drug Cost in Looker | End

    #[ERXLPS-2282] - New measures added for Avg Final Copay (Per Script)
    measure: avg_final_copay {
      label: "Avg Final Copay (per script)"
      group_label: "Average Final Copay (per script)"
      description: "Average Final Copay of prescription. Calculation Used: Total Final Copay of the Prescription/Total no. of scripts"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_final_copay}/NULLIF(ABS(${count}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
    }

    measure: avg_final_copay_ly {
      label: "LY Avg Final Copay (per script)"
      group_label: "Average Final Copay (per script)"
      description: "Average Final Copay of prescription for the last year. Calculation Used: Total Final Copay of the Prescription/Total no. of scripts for Last Year based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${sum_final_copay_ly}/NULLIF(ABS(${count_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
    }

    measure: avg_final_copay_variance {
      label: "TY/LY Avg Final Copay (per script) Variance"
      group_label: "Average Final Copay (per script)"
      description: "Dollar Increase/Decrease of Average Final Copay of prescription. Calculation Used: Total Final Copay of the Prescriptions compared to the last year"
      type: number
      sql: ${avg_final_copay} - ${avg_final_copay_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                   {% else %}
                   <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_final_copay_variance_pct {
      label: "TY/LY Avg Final Copay (per script) Variance %"
      group_label: "Average Final Copay (per script)"
      description: "Percentage Increase/Decrease of Average Final Copay of prescription. Calculation Used: Total Final Copay of the Prescription/Total no. of scripts compared to the last year"
      type: number
      sql: CAST((${avg_final_copay} - ${avg_final_copay_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_final_copay_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
    }

    #[ERXLPS-2282] - New measures added for Avg Copay Override Amount.
    measure: avg_copay_override_amount {
      label: "Avg Copay Override Amount (per script)"
      group_label: "Claim"
      description: "Average Copay Override Amount. Calculation Used: Copay Override Amount/Total no. of scripts"
      type: number
      sql: COALESCE(${copay_override_amount}/NULLIF(ABS(${count}),0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_copay_override_amount_ly {
      label: "LY Avg Copay Override Amount (per script)"
      group_label: "Claim"
      description: "Average Copay Override Amount of prescription for the last year. Calculation Used: Total Copay Override Amount of the Prescription/Total no. of scripts for Last Year based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${copay_override_amount_ly}/NULLIF(ABS(${count_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
    }

    measure: avg_copay_override_amount_variance {
      label: "TY/LY Avg Copay Override Amount (per script) Variance "
      group_label: "Claim"
      description: "Dollar Increase/Decrease of Average Copay Override Amount of prescription. Calculation Used: Total Copay Override Amount of the Prescriptions compared to the last year"
      type: number
      sql: ${avg_copay_override_amount} - ${avg_copay_override_amount_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                   {% else %}
                   <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_copay_override_amount_variance_pct {
      label: "TY/LY Avg Copay Override Amount (per script) Variance %"
      group_label: "Claim"
      description: "Percentage Increase/Decrease of Average Copay Override Amount of prescription. Calculation Used: Total Copay Override Amount of the Prescription/Total no. of scripts compared to the last year"
      type: number
      sql: CAST((${avg_copay_override_amount} - ${avg_copay_override_amount_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_copay_override_amount_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
    }

    #[ERXLPS-2282] - New measures added for Avg Copay Overridden Amount.
    measure: avg_copay_overridden_amount {
      label: "Avg Copay Overridden Amount (per script PRIOR to Override)"
      group_label: "Claim"
      description: "Average Copay Overridden Amount. Calculation Used: Copay Overridden Amount/Total no. of scripts"
      type: number
      sql: COALESCE(${copay_overridden_amount}/NULLIF(ABS(${count}),0),0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_copay_overridden_amount_ly {
      label: "LY Avg Copay Overridden Amount (per script PRIOR to Override)"
      group_label: "Claim"
      description: "Average Copay Overridden Amount of prescription for the last year. Calculation Used: Total Copay Overridden Amount of the Prescription/Total no. of scripts for Last Year based on the period selected"
      type: number
      #[ERXLPS-1163] - Corrected the logic to handle avg price for credit return scripts.
      sql: COALESCE(${copay_overridden_amount_ly}/NULLIF(ABS(${count_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
    }

    measure: avg_copay_overridden_amount_variance {
      label: "TY/LY Avg Copay Overridden Amount (per script PRIOR to Override) Variance"
      group_label: "Claim"
      description: "Dollar Increase/Decrease of Average Copay Overridden Amount of prescription. Calculation Used: Total Copay Overridden Amount of the Prescriptions compared to the last year"
      type: number
      sql: ${avg_copay_overridden_amount} - ${avg_copay_overridden_amount_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                   {% else %}
                   <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_copay_overridden_amount_variance_pct {
      label: "TY/LY Avg Copay Overridden Amount (per script PRIOR to Override) Variance %"
      group_label: "Claim"
      description: "Percentage Increase/Decrease of Average Copay Overridden Amount of prescription. Calculation Used: Total Copay Overridden Amount of the Prescription/Total no. of scripts compared to the last year"
      type: number
      sql: CAST((${avg_copay_overridden_amount} - ${avg_copay_overridden_amount_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_copay_overridden_amount_ly}),0) ;; #[ERXLPS-2105] - Added ABS function in denominator to produce correct results for -ve LY values.
      value_format: "00.00%"
      html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
    }

    #[ERXLPS-6323] - New Script Count % measures created based on Shopko US.These measures will be exposed to everyone now.
    measure: sum_rx_count_age_16_under {
      label: "Scripts (Age 16 and Under)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment filled by the Store Patient with age 16 and Under. Patient Age is calculated at the time of report run."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${eps_patient.store_patient_age} <= 16 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_16_under_pct {
      label: "Scripts % (Age 16 and Under)"
      group_label: "Scripts"
      description: "Percentage of the Scripts filled by Store Patient with age 16 and Under compared to total scripts filled. Patient Age is calculated at the time of report run."
      type: number
      sql: ${sum_rx_count_age_16_under}/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_17_35 {
      label: "Scripts (Age 17-35)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment filled by the Store Patient with age between (including) 17 and 35. Patient Age is calculated at the time of report run."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${eps_patient.store_patient_age} >= 17 AND ${eps_patient.store_patient_age} < 36 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_17_35_pct {
      label: "Scripts % (Age 17-35)"
      group_label: "Scripts"
      description: "Percentage of the Scripts filled by Store Patient with age between (including) 17 and 35 compared to total scripts filled. Patient Age is calculated at the time of report run."
      type: number
      sql: ${sum_rx_count_age_17_35}/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_36_55 {
      label: "Scripts (Age 36-55)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment filled by the Store Patient with age between (including) 36 and 55. Patient Age is calculated at the time of report run."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${eps_patient.store_patient_age} >= 36 AND ${eps_patient.store_patient_age} < 56 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_36_55_pct {
      label: "Scripts % (Age 36-55)"
      group_label: "Scripts"
      description: "Percentage of the Scripts filled by Store Patient with age between (including) 36 and 55 compared to total scripts filled. Patient Age is calculated at the time of report run."
      type: number
      sql: ${sum_rx_count_age_36_55}/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_56_64 {
      label: "Scripts (Age 56-64)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment filled by the Store Patient with age between (including) 56 and 64. Patient Age is calculated at the time of report run."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${eps_patient.store_patient_age} >= 56 AND ${eps_patient.store_patient_age} < 65 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_56_64_pct {
      label: "Scripts % (Age 56-64)"
      group_label: "Scripts"
      description: "Percentage of the Scripts filled by Store Patient with age between (including) 56 and 35 compared to total scripts filled. Patient Age is calculated at the time of report run."
      type: number
      sql: ${sum_rx_count_age_56_64}/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_65_plus {
      label: "Scripts (Age 65+)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment filled by the Store Patient with age 65 and above. Patient Age is calculated at the time of report run."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${eps_patient.store_patient_age} >= 65 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_rx_count_age_65_plus_pct {
      label: "Scripts % (Age 65+)"
      group_label: "Scripts"
      description: "Percentage of the Scripts filled by Store Patient with age 65 or above compared to total scripts filled. Patient Age is calculated at the time of report run."
      type: number
      #sql: CAST((${count_generic}) AS DECIMAL(17,4))/NULLIF(${count},0) ;;
      sql: ${sum_rx_count_age_65_plus}/NULLIF(${count},0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXDWPS-5148]
    measure: sum_count_daw_0 {
      label: "Scripts (DAW 0)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 0."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_NCPDP_DAW = '0' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_0_ly {
      label: "LY Scripts (DAW 0)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 0, for Last Year."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_NCPDP_DAW = '0' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_0_variance {
      label: "TY/LY Scripts (DAW 0) Variance"
      group_label: "Scripts"
      description: "Increase/Decrease of the Scripts written as DAW 0, compared to the last year. Calculation Used: ( Scripts (DAW 0) - LY Scripts (DAW 0) )."
      type: number
      sql: ${sum_count_daw_0} - ${sum_count_daw_0_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_0_variance_pct {
      label: "TY/LY Scripts (DAW 0) Variance %"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of of the Scripts written as DAW 0, compared to the last year. Calculation Used: ( Scripts (DAW 0) - LY Scripts (DAW 0) )/LY Scripts (DAW 0)."
      type: number
      sql: CAST((${sum_count_daw_0} - ${sum_count_daw_0_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_count_daw_0_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_1 {
      label: "Scripts (DAW 1)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 1."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_NCPDP_DAW = '1' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_1_ly {
      label: "LY Scripts (DAW 1)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 1, for Last Year."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_NCPDP_DAW = '1' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_1_variance {
      label: "TY/LY Scripts (DAW 1) Variance"
      group_label: "Scripts"
      description: "Increase/Decrease of the Scripts written as DAW 1, compared to the last year. Calculation Used: ( Scripts (DAW 1) - LY Scripts (DAW 1) )."
      type: number
      sql: ${sum_count_daw_1} - ${sum_count_daw_1_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_1_variance_pct {
      label: "TY/LY Scripts (DAW 1) Variance %"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of of the Scripts written as DAW 1, compared to the last year. Calculation Used: ( Scripts (DAW 1) - LY Scripts (DAW 1) )/LY Scripts (DAW 1)."
      type: number
      sql: CAST((${sum_count_daw_1} - ${sum_count_daw_1_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_count_daw_1_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_2 {
      label: "Scripts (DAW 2)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 2."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_NCPDP_DAW = '2' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_2_ly {
      label: "LY Scripts (DAW 2)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 2, for Last Year."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_NCPDP_DAW = '2' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_2_variance {
      label: "TY/LY Scripts (DAW 2) Variance"
      group_label: "Scripts"
      description: "Increase/Decrease of the Scripts written as DAW 2, compared to the last year. Calculation Used: ( Scripts (DAW 2) - LY Scripts (DAW 2) )."
      type: number
      sql: ${sum_count_daw_2} - ${sum_count_daw_2_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_2_variance_pct {
      label: "TY/LY Scripts (DAW 2) Variance %"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of of the Scripts written as DAW 2, compared to the last year. Calculation Used: ( Scripts (DAW 2) - LY Scripts (DAW 2) )/LY Scripts (DAW 2)."
      type: number
      sql: CAST((${sum_count_daw_2} - ${sum_count_daw_2_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_count_daw_2_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_5 {
      label: "Scripts (DAW 5)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 5."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_NCPDP_DAW = '5' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_5_ly {
      label: "LY Scripts (DAW 5)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 5, for Last Year."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_NCPDP_DAW = '5' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_5_variance {
      label: "TY/LY Scripts (DAW 5) Variance"
      group_label: "Scripts"
      description: "Increase/Decrease of the Scripts written as DAW 5, compared to the last year. Calculation Used: ( Scripts (DAW 5) - LY Scripts (DAW 5) )."
      type: number
      sql: ${sum_count_daw_5} - ${sum_count_daw_5_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_5_variance_pct {
      label: "TY/LY Scripts (DAW 5) Variance %"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of of the Scripts written as DAW 5, compared to the last year. Calculation Used: ( Scripts (DAW 5) - LY Scripts (DAW 5) )/LY Scripts (DAW 5)."
      type: number
      sql: CAST((${sum_count_daw_5} - ${sum_count_daw_5_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_count_daw_5_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_9 {
      label: "Scripts (DAW 9)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 9."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_NCPDP_DAW = '9' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_9_ly {
      label: "LY Scripts (DAW 9)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW 9, for Last Year."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_NCPDP_DAW = '9' THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_9_variance {
      label: "TY/LY Scripts (DAW 9) Variance"
      group_label: "Scripts"
      description: "Increase/Decrease of the Scripts written as DAW 9, compared to the last year. Calculation Used: ( Scripts (DAW 9) - LY Scripts (DAW 9) )."
      type: number
      sql: ${sum_count_daw_9} - ${sum_count_daw_9_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_9_variance_pct {
      label: "TY/LY Scripts (DAW 9) Variance %"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of of the Scripts written as DAW 9, compared to the last year. Calculation Used: ( Scripts (DAW 9) - LY Scripts (DAW 9) )/LY Scripts (DAW 9)."
      type: number
      sql: CAST((${sum_count_daw_9} - ${sum_count_daw_9_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_count_daw_9_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_others {
      label: "Scripts (DAW Others)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW other than 0,1,2,5,9."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND NVL(${TABLE}.SALE_NCPDP_DAW,'X') NOT IN ('0','1','2','5','9') THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_daw_others_ly {
      label: "LY Scripts (DAW Others)"
      group_label: "Scripts"
      description: "Total script volume without any adjustment for the prescription written as DAW Others(Other than 0,1,2,5,9), for Last Year."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND NVL(${TABLE}.SALE_NCPDP_DAW,'X') NOT IN ('0','1','2','5','9') THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXLPS-6319] - New measures added for Script count based on Days supply
    measure: sum_rx_tx_days_supply {
      label: "Prescription Days Supply"
      description: "The Days supply of the transaction, for the drug. The days supply is auto-populated in the client when the fill quantity and the SIG are entered. However, it can be entered manually by a user."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${rx_tx_days_supply} END ;;
      value_format: "#,##0;(#,##0)"
    }

    measure: sum_rx_tx_days_supply_ly {
      label: "LY Prescription Days Supply"
      description: "The Days supply of the last year transaction, for the drug. The days supply is auto-populated in the client when the fill quantity and the SIG are entered. However, it can be entered manually by a user."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${rx_tx_days_supply} END ;;
      value_format: "#,##0;(#,##0)"
    }

    measure: sum_rx_tx_days_supply_variance {
      label: "TY/LY Prescription Days Supply Variance"
      description: "The Days supply of the transaction, for the drug compared to the last year. Calculation Used: (Prescription Days Supply - LY Prescription Days Supply)."
      type: number
      sql: ${sum_rx_tx_days_supply} - ${sum_rx_tx_days_supply_ly} ;;
      value_format: "#,##0;(#,##0)"
    }

    measure: sum_rx_tx_days_supply_variance_pct {
      label: "TY/LY Prescription Days Supply Variance %"
      description: "Percentage of Days supply of the transaction, for the drug compared to the last year. Calculation Used: ((Prescription Days Supply - LY Prescription Days Supply)/LY Prescription Days Supply)."
      type: number
      sql: CAST((${sum_rx_tx_days_supply} - ${sum_rx_tx_days_supply_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_rx_tx_days_supply_ly}),0) ;;
      value_format: "00.00%"
    }

    measure: sum_count_rx_tx_days_supply_less_than_30 {
      label: "Scripts (Days Supply <30)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Less than 30"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} <30 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_less_than_30_ly {
      label: "LY Scripts (Days Supply <30)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Less than 30 for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} <30 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_equal_to_30 {
      label: "Scripts (Days Supply = 30)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Equal to 30"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} =30 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_equal_to_30_ly {
      label: "LY Scripts (Days Supply = 30)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Equal to 30 for Last Year based on the period selected"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} =30 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_greater_than_30_and_less_than_60 {
      label: "Scripts (Days Supply >30 and <60)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Greater than 30 and Less than 60"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} >30 and ${rx_tx_days_supply} <60 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_greater_than_30_and_less_than_60_ly {
      label: "LY Scripts (Days Supply >30 and <60)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Greater than 30 and Less than 60 for Last Year based on the period selected. "
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} >30 and ${rx_tx_days_supply} <60 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_equal_to_60 {
      label: "Scripts (Days Supply = 60)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Equal to 60"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} =60 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_equal_to_60_ly {
      label: "LY Scripts (Days Supply = 60)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Equal to 60 for Last Year based on the period selected."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} =60 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_greater_than_60_and_less_than_90 {
      label: "Scripts (Days Supply >60 and <90)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Greater than 60 and Less than 90"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} >60 and ${rx_tx_days_supply} <90 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_greater_than_60_and_less_than_90_ly {
      label: "LY Scripts (Days Supply >60 and <90)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Greater than 60 and Less than 90 for Last Year based on the period selected."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} >60 and ${rx_tx_days_supply} <90 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_equal_to_90 {
      label: "Scripts (Days Supply = 90)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Equal to 90"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} =90 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_equal_to_90_ly {
      label: "LY Scripts (Days Supply = 90)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Equal to 90 for Last Year based on the period selected."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} =90 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXDWPS-5366]
    measure: sum_count_rx_tx_days_supply_equal_to_90_variance {
      label: "TY/LY Scripts (Days Supply = 90) Variance"
      group_label: "Scripts"
      description: "Increase/Decrease of the script volume with Prescription Days Supply Equal to 90, compared to the last year. Calculation Used: ( Scripts (Days Supply = 90) - LY Scripts (Days Supply = 90) )."
      type: number
      sql: ${sum_count_rx_tx_days_supply_equal_to_90} - ${sum_count_rx_tx_days_supply_equal_to_90_ly} ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_equal_to_90_variance_pct {
      label: "TY/LY Scripts (Days Supply = 90) Variance %"
      group_label: "Scripts"
      description: "Percentage Increase/Decrease of the script volume with Prescription Days Supply Equal to 90, compared to the last year. Calculation Used: ( Scripts (Days Supply = 90) - LY Scripts (Days Supply = 90) )/LY Scripts (Days Supply = 90)."
      type: number
      sql: CAST((${sum_count_rx_tx_days_supply_equal_to_90} - ${sum_count_rx_tx_days_supply_equal_to_90_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_count_rx_tx_days_supply_equal_to_90_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_less_than_84_ly {
      label: "LY Scripts (Days Supply <84)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Lesser than 84 for Last Year based on the period selected."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} <84 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_greater_than_or_equal_to_84_ly {
      label: "LY Scripts (Days Supply >=84)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Greater than or Equal to 84 for Last Year based on the period selected."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} >=84 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_less_than_84 {
      label: "Scripts (Days Supply <84)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Lesser than 84"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} <84 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_greater_than_or_equal_to_84 {
      label: "Scripts (Days Supply >=84)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Greater than or Equal to 84"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} >=84 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_greater_than_90 {
      label: "Scripts (Days Supply >90)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Greater than 90"
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${rx_tx_days_supply} >90 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_count_rx_tx_days_supply_greater_than_90_ly {
      label: "LY Scripts (Days Supply >90)"
      group_label: "Scripts"
      description: "Total script volume with Prescription Days Supply Greater than 90 for Last Year based on the period selected."
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${rx_tx_days_supply} >90 THEN ${count_reference} END ;;
      value_format: "#,##0;(#,##0)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXDWPS-5366]
    measure: avg_net_sales_per_days_supply {
      label: "Avg Net Sales (per Days Supply)"
      group_label: "Average Net Sales (per Days Supply)"
      description: "Average Net Sales per Prescription Days Supply. Calculation Used: Net Sales/Prescription Days Supply"
      type: number
      sql: COALESCE(${sum_net_sales}/NULLIF(ABS(${sum_rx_tx_days_supply}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_per_days_supply_ly {
      label: "LY Avg Net Sales (per Days Supply)"
      group_label: "Average Net Sales (per Days Supply)"
      description: "Average Net Sales per Prescription Days Supply, for last year. Calculation Used: LY Net Sales/LY Prescription Days Supply"
      type: number
      sql: COALESCE(${sum_net_sales_ly}/NULLIF(ABS(${sum_rx_tx_days_supply_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_net_sales_per_days_supply_variance {
      label: "TY/LY Avg Net Sales (per Days Supply) Variance"
      group_label: "Average Net Sales (per Days Supply)"
      description: "Increase/Decrease of Average Net Sales per Prescription Days Supply, compared to the last year. Calculation Used: ( Avg Net Sales (per Days Supply) - LY Avg Net Sales (per Days Supply) )."
      type: number
      sql: ${avg_net_sales_per_days_supply} - ${avg_net_sales_per_days_supply_ly} ;;
      value_format: "$#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_net_sales_per_days_supply_variance_pct {
      label: "TY/LY Avg Net Sales (per Days Supply) Variance %"
      group_label: "Average Net Sales (per Days Supply)"
      description: "Percentage Increase/Decrease of Average Net Sales per Prescription Days Supply, compared to the last year. Calculation Used: ( Avg Net Sales (per Days Supply) - LY Avg Net Sales (per Days Supply) )/LY Avg Net Sales (per Days Supply)."
      type: number
      #sql: CAST((${avg_net_sales_per_days_supply} - ${avg_net_sales_per_days_supply_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_net_sales_per_days_supply_ly}),0) ;;
      sql: (${avg_net_sales_per_days_supply} - ${avg_net_sales_per_days_supply_ly})/NULLIF(ABS(${avg_net_sales_per_days_supply_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #[ERXDWPS-5366]
    measure: avg_days_supply_per_script {
      label: "Avg Days Supply (per Script)"
      description: "Average Days Supply per Script Count. Calculation Used: Prescription Days Supply/Scripts"
      type: number
      sql: COALESCE(${sum_rx_tx_days_supply}/NULLIF(ABS(${count}),0) ,0) ;;
      value_format: "#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_days_supply_per_script_ly {
      label: "LY Avg Days Supply (per Script)"
      group_label: "Average Net Sales (per Days Supply)"
      description: "Average Days Supply per Script, for last year. Calculation Used: LY Prescription Days Supply/ LY Scripts" #[ERXDWPS-6231]
      type: number
      sql: COALESCE(${sum_rx_tx_days_supply_ly}/NULLIF(ABS(${count_ly}),0) ,0) ;;
      value_format: "#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                     <font color="red">{{ rendered_value }}
                   {% else %}
                     <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
    }

    measure: avg_days_supply_per_script_variance {
      label: "TY/LY Avg Days Supply (per Script) Variance"
      description: "Increase/Decrease of Average Days Supply per Script Count, compared to the last year. Calculation Used: ( Avg Days Supply (per Script) - LY Days Supply (per Script) )."
      type: number
      sql: ${avg_days_supply_per_script} - ${avg_days_supply_per_script_ly} ;;
      value_format: "#,##0.00;($#,##0.00)"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: avg_days_supply_per_script_variance_pct {
      label: "TY/LY Avg Days Supply (per Script) Variance %"
      description: "Percentage Increase/Decrease of Average Days Supply per Script Count, compared to the last year. Calculation Used: ( Avg Days Supply (per Script) - LY Days Supply (per Script) )/LY Days Supply (per Script)."
      type: number
      sql: CAST((${avg_days_supply_per_script} - ${avg_days_supply_per_script_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_days_supply_per_script_ly}),0) ;;
      value_format: "00.00%"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    #ERXDWPS-5136 (DOS) Days of Supply Measures - Shopko Reporting | Start
    measure: sum_net_sales_one_week_ago {
      label: "Net Sales Last Complete Week"
      description: "Net Sales Last Complete Week"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${report_calendar_global.one_week_ago} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_net_sales_two_week_ago {
      label: "Net Sales Two Complete Weeks Ago"
      description: "Net Sales Two Complete Weeks Ago"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${report_calendar_global.two_week_ago} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_days_supply_one_week_ago {
      label: "Prescription Days Supply Last Complete Week"
      description: "Prescription Days Supply Last Complete Week"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${report_calendar_global.one_week_ago} = 'Y' THEN ${rx_tx_days_supply} END ;;
      value_format: "#,##0;(#,##0)"
    }

    measure: sum_rx_tx_days_supply_two_week_ago {
      label: "Prescription Days Supply Two Complete Weeks Ago"
      description: "Prescription Days Supply Two Complete Weeks Ago"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'TY' and ${report_calendar_global.two_week_ago} = 'Y'  THEN ${rx_tx_days_supply} END ;;
      value_format: "#,##0;(#,##0)"
    }

    measure: avg_net_sales_per_days_supply_one_week_ago {
      label: "Avg Net Sales (per Days Supply) - Last Complete Week"
      description: "Average Net Sales per Prescription Days Supply for last complete week. Calculation Used: Net Sales for Last Completed Week/Prescription Days Supply for Last Complete Week."
      type: number
      sql: COALESCE(${sum_net_sales_one_week_ago}/NULLIF(ABS(${sum_rx_tx_days_supply_one_week_ago}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_per_days_supply_two_week_ago {
      label: "Avg Net Sales (per Days Supply) - Two Complete Weeks Ago"
      description: "Average Net Sales per Prescription Days Supply for last Two Completed Weeks ago. Calculation Used: Net Sales Two Complete Weeks Ago/Prescription Days Supply Two Complete Weeks Ago"
      type: number
      sql: COALESCE(${sum_net_sales_two_week_ago}/NULLIF(ABS(${sum_rx_tx_days_supply_two_week_ago}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: sum_net_sales_one_week_ago_ly {
      label: "LY Net Sales Last Complete Week"
      description: "LY Net Sales One Week Ago"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${report_calendar_global.one_week_ago} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_net_sales_two_week_ago_ly {
      label: "LY Net Sales Two Complete Weeks Ago"
      description: "LY Net Sales Two Complete Weeks Ago"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${report_calendar_global.two_week_ago} = 'Y' THEN ${net_sales} END ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    measure: sum_rx_tx_days_supply_one_week_ago_ly {
      label: "LY Prescription Days Supply Last Complete Week"
      description: "LY Prescription Days Supply Last Complete Week"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${report_calendar_global.one_week_ago} = 'Y' THEN ${rx_tx_days_supply} END ;;
      value_format: "#,##0;(#,##0)"
    }

    measure: sum_rx_tx_days_supply_two_week_ago_ly {
      label: "LY Prescription Days Supply Two Complete Weeks Ago"
      description: "LY Prescription Days Supply Two Complete Weeks Ago"
      hidden: yes
      type: sum
      sql: CASE WHEN ${report_calendar_global.type} = 'LY' and ${report_calendar_global.two_week_ago} = 'Y'  THEN ${rx_tx_days_supply} END ;;
      value_format: "#,##0;(#,##0)"
    }

    measure: avg_net_sales_per_days_supply_one_week_ago_ly {
      label: "LY Avg Net Sales (per Days Supply) - Last Complete Week"
      description: "Average Net Sales per Prescription Days Supply for last complete week for last year. Calculation Used: Net Sales for Last Completed Week/Prescription Days Supply for Last Complete Week."
      type: number
      sql: COALESCE(${sum_net_sales_one_week_ago_ly}/NULLIF(ABS(${sum_rx_tx_days_supply_one_week_ago_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }

    measure: avg_net_sales_per_days_supply_two_week_ago_ly {
      label: "LY Avg Net Sales (per Days Supply) - Two Complete Weeks Ago"
      description: "Average Net Sales per Prescription Days Supply for last Two Completed Weeks ago for last year. Calculation Used: Net Sales Two Complete Weeks Ago/Prescription Days Supply Two Complete Weeks Ago"
      type: number
      sql: COALESCE(${sum_net_sales_two_week_ago_ly}/NULLIF(ABS(${sum_rx_tx_days_supply_two_week_ago_ly}),0) ,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
      html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
    }
    #ERXDWPS-5136 (DOS) Days of Supply Measures - Shopko Reporting | End

    #ERXDWPS-5339 - Shopko: DOS Report: Request to create additional dimensions
    #ERXDWPS-5928 - Removed LY dimensions. Removed TY check from rx_tx_days_supply_grouping dimension. Commiting code changes from looker.
    dimension: rx_tx_days_supply_grouping {
      label: "Prescription Days of Supply Grouping"
      description: "Prescription Days of Supply grouped into buckets : below-30, 30, 31-59, 60, 61-83, 84-89, 90 and above 90"
      type: string
      sql: ${TABLE}.SALE_DAYS_SUPPLY_GROUPING ;; #[ERX-8161]
    }

#[ERX-8161] START | - Looker changes: Expose F_RX fields from F_SALE table(already exposed on Sales explore)

    dimension: rx_number {
      label: "Prescription Number"
      description: "Prescription Number"
      type: number
      sql: ${TABLE}.SALE_RX_NUMBER ;;
      value_format: "######"
    }

    dimension: rx_ncpcp_route {
      label: "Prescription NCPDP Route"
      description: "Route that is normally used by the patient for using/taking a compound. This field is EPS only!!!"
      type: string
      sql: ${TABLE}.SALE_RX_NCPDP_ROUTE ;;
    }

    dimension: rx_reportable_drug_number {
      label: "Prescription Reportable Drug Number"
      description: "Schedule 2 (CAN N) Form Number"
      type: string
      sql: ${TABLE}.SALE_RX_REPORTABLE_DRUG_NUMBER ;;
    }

    dimension: rx_image_total {
      label: "Prescription Image Total"
      description: "Defines the number of prescriptions on a single hard copy image"
      type: number
      sql: ${TABLE}.SALE_RX_IMAGE_TOTAL ;;
      value_format: "#,##0"
    }

    dimension: rx_status {
      label: "Prescription Status"
      type: yesno
      sql: ${TABLE}.SALE_RX_STATUS = 'Y' ;;
    }

    dimension: rx_source {
      label: "Prescription Source"
      description: "Indicates what process was used to create this prescription record"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 0 ;;
          label: "Not Specified"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 1 ;;
          label: "Written"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 2 ;;
          label: "Phoned In"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 3 ;;
          label: "E-Script"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 4 ;;
          label: "Fax"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 5 ;;
          label: "Pharmacy Generated"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 20 ;;
          label: "Manual Transfer"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 21 ;;
          label: "Informational Rx"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 22 ;;
          label: "Patient Specified"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 23 ;;
          label: "Auto Transfer"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 24 ;;
          label: "Transfer Auto RAR"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 25 ;;
          label: "Escript RAR"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 26 ;;
          label: "Escript Addfill"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 27 ;;
          label: "Patient Request"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 28 ;;
          label: "Prescriber Request"
        }

        when: {
          sql: ${TABLE}.SALE_RX_SOURCE = 29 ;;
          label: "Other"
        }

        when: {
          sql: true ;;
          label: "Blank"
        }
      }
    }

    ## [ERXLPS-609] - For the dimension: rx_source - Temporarily removed the Master Code Sub Query that is preventing the end user from using this column as a pivot with counts.
    ##                Changing to SQL Case until DE for long term fix for Master Code Subqueries is decided upon
    ## sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION)
    ##         FROM EDW.D_MASTER_CODE MC
    ##         WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_RX_SOURCE AS VARCHAR),'NULL')
    ##         AND MC.EDW_COLUMN_NAME = 'RX_SOURCE')
    ## suggestions: ['BLANK','NOT SPECIFIED','WRITTEN','PHONED IN','E-SCRIPT','FAX','PHARMACY GENERATED','MANUAL TRANSFER','INFORMATIONAL RX','PATIENT SPECIFIED','AUTO TRANSFER','TRANSFER AUTO RAR',
    ##               'ESCRIPT RAR','ESCRIPT ADDFILL','PATIENT REQUEST','PRESCRIBER REQUEST','OTHER']

    dimension: rx_on_file {
      label: "Prescription On File"
      description: "Yes/No flag indicating if the prescription is On File"
      type: yesno
      sql: ${TABLE}.SALE_RX_ON_FILE = 'Y' ;;
    }

    dimension: wholesale_order {
      label: "Prescription Wholesale Order"
      description: "Yes/No flag indicating if the prescription is a part of wholesale orders. Value populated at the time of Order Entry Confirmation. If the Record type of the selected patient is “Office”, then the prescription is a wholesale order. This field is EPS only!!!"
      type: yesno
      sql: ${TABLE}.SALE_RX_WHOLESALE_ORDER_FLAG = 'Y' ;;
    }

    dimension: controlled_substance_escript {
      label: "Prescription Controlled Substance Escript"
      description: "Yes/No flag indicating prescription was generated from a controlled substance escript. Used to identify prescriptions for  auditing and RX edits requirement. This field is EPS only!!!"
      hidden: yes
      type: yesno
      sql: ${TABLE}.SALE_RX_CONTROLLED_SUBSTANCE_ESCRIPT_FLAG = 'Y' ;;
    }

    dimension: rx_enable_autofill {
      label: "Prescription Enable Autofill"
      description: "Flag that indicates whether this prescription is an Auto-Fill prescription"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_RX_ENABLE_AUTOFILL = 'N' ;;
          label: "NO"
        }

        when: {
          sql: ${TABLE}.SALE_RX_ENABLE_AUTOFILL = 'Y' ;;
          label: "YES"
        }

        when: {
          sql: ${TABLE}.SALE_RX_ENABLE_AUTOFILL = 'R' ;;
          label: "REFUSED"
        }
      }
    }

    dimension: rx_hard_copy_printed {
      label: "Prescription Hard Copy Printed"
      description: "Yes/No flag indicating whether the E-script hard copy and the System-Generated Hard Copy have been successfully printed"
      type: yesno
      sql: ${TABLE}.SALE_RX_HARD_COPY_PRINTED = 'Y' ;;
    }

    dimension: rx_prescribed_drug_id {
      label: "Prescription Prescried Drug ID"
      description: "Unique ID that links this record to a specific DRUG record"
      hidden: yes
      type: string
      sql: ${TABLE}.SALE_RX_PRESCRIBED_DRUG_ID ;;
    }

    #[ERXLPS-1845] - Added delete check.
    dimension: rx_prescribed_drug_ndc {
      label: "Prescription Prescribed Drug NDC"
      description: "Prescribed drug NDC"
      type: string
      sql: (select max(store_drug_ndc) from edw.d_store_drug where chain_id = ${chain_id} and nhin_store_id = ${nhin_store_id} and drug_id = ${rx_prescribed_drug_id} and source_system_id = 4 and store_drug_deleted = 'N') ;;
    }

    measure: rx_transfer_out_fill_count {
      label: "Prescription Transfer Out Fill Quantity"
      group_label: "Other Measures"
      description: "Total quantity transferred out"
      type: sum_distinct
      sql: ${TABLE}.SALE_RX_TRANSFER_OUT_FILL_COUNT ;;
      sql_distinct_key: ${chain_id} ||'@'|| ${nhin_store_id} ||'@'|| ${rx_id} ||'@'|| ${sold_flg} ||'@'|| ${adjudicated_flg} ||'@'|| ${report_calendar_global.type} ;;
      value_format: "#,##0"
    }

    dimension: rx_prescribed_days_supply {
      label: "Prescription Prescribed Days Supply"
      description: "Total days supply as prescribed"
      type: number
      sql: ${TABLE}.SALE_RX_PRESCRIBED_DAYS_SUPPLY ;;
    }

    dimension: rx_escript_message_identifier {
      label: "Prescription Escript Message Identifier"
      description: "eScript ID# generated at pharmacy at the time of sell which is sent in EPSv15 patientUpdate/select to EPR in order for a triggered message to be sent to Emdeon to make them aware of a successfull eScript fill"
      type: string
      sql: ${TABLE}.SALE_RX_ESCRIPT_MESSAGE_ID ;;
    }

    dimension: rx_autofill_mail_flag {
      label: "Prescription Autofill Mail Flag"
      description: "Flag that indicates patient wants this auto-filled prescription mailed to them. User entered"
      type: yesno
      sql: ${TABLE}.SALE_RX_AUTOFILL_MAIL_FLAG = 'Y' ;;
    }

    dimension: rx_barcode {
      label: "Prescription Barcode"
      description: "Barcode number attached to the hard copy. Auto-generated. Alpha-numeric"
      type: string
      sql: ${TABLE}.SALE_RX_BARCODE ;;
    }

    dimension: rx_call_for_refills {
      label: "Prescription Call For Refills"
      description: "Flag that determines what AutoFill should do when no refills remain or the Rx has expired. Entered by user based on patient preference"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_RX_CALL_FOR_REFILLS AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_RX_CALL_FOR_REFILLS') ;;
      suggestions: ["CALL DOCTOR", "NOTIFY PATIENT", "DO NOT AUTO-FILL", "NOT SPECIFIED"]
    }

    dimension: rx_note {
      label: "Prescription Note"
      description: "Notes that pertain to this prescription; will display as All Fills notes each time prescription is filled. User entered. Alpha-Numeric"
      type: string
      sql: ${TABLE}.SALE_RX_NOTE ;;
    }

    dimension: rx_prescriber_not_found_response {
      label: "Prescription Prescriber Not Found Response"
      description: "Contains prescriber information when the prescriber is not found during a patient select request. Alpha-numeric"
      type: string
      sql: ${TABLE}.SALE_RX_PRESCRIBER_NOT_FOUND_RESPONSE ;;
    }

    dimension: rx_prescriber_order_number {
      label: "Prescription Prescriber Order Number"
      description: "Unique ID that is given to an escript from a prescriber. The ID corresponds to an Rx number when the escript is processed. System Generated"
      type: string
      sql: ${TABLE}.SALE_RX_PRESCRIBER_ORDER_NUMBER ;;
    }

    dimension: rx_refills_authorized {
      label: "Prescription Refills Authorized"
      description: "Number of refills originally authorized by doctor. User entered"
      type: string
      sql: ${TABLE}.SALE_RX_REFILLS_AUTHORIZED ;;
    }

    dimension: rx_refills_remaining {
      label: "Prescription Refills Remaining"
      description: "Number of remaining refills. System Generated"
      type: string
      sql: ${TABLE}.SALE_RX_REFILLS_REMAINING ;;
    }

    dimension: rx_refills_transferred {
      label: "Prescription Refills Transferred"
      description: "Number of refills that have been transferred out for the prescription. System Generated"
      type: string
      sql: ${TABLE}.SALE_RX_REFILLS_TRANSFERRED ;;
    }

    #label name modified based on business functionlaity
    dimension: rx_rxfill_indicator {
      label: "Prescription Fill Status Notification Indicator"
      description: "Holds the value of when a prescriber requests an RXFILL message to verify the fill of a prescription."
      type: string
      sql: ${TABLE}.SALE_RX_RXFILL_INDICATOR ;;
    }

    dimension: rx_image_index {
      label: "Prescription Image Index"
      description: "If multiple barcodes/prescriptions on a single hard copy, defines which prescription this one is. System designates which barcode corresponds with each prescription"
      type: number
      sql: ${TABLE}.SALE_RX_IMAGE_INDEX ;;
      value_format: "######"
    }

    dimension: rx_sync_script_enrolled_by {
      label: "Prescription Sync Script Enrolled By"
      description: "Source of prescription enrollment in SyncScript program. System generated"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_RX_SYNC_SCRIPT_ENROLLED_BY AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_RX_SYNC_SCRIPT_ENROLLED_BY') ;;
      suggestions: ["NOT ENROLLED", "PHARMACY", "IVR"]
    }

    dimension: rx_sync_script_enrollment_desc {
      label: "Prescription Sync Script Enrollment"
      description: "Prescription level enrollment in SyncScript program. User entered"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_RX_SYNC_SCRIPT_ENROLLMENT AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_RX_SYNC_SCRIPT_ENROLLMENT') ;;
      suggestions: ["NOT ASKED", "YES", "PATIENT REFUSED SYNCSCRIPT"]
    }

    dimension: rx_temporary_prescriber_identifier {
      label: "Prescription Temporary Prescriber Identifier"
      description: "Temporary prescriber ID number used to identify the prescriber for third party billing purposes when no DEA exists. System Generated"
      type: string
      sql: ${TABLE}.SALE_RX_TEMPORARY_PRESCRIBER_ID_NUMBER ;;
    }

    dimension: rx_temporary_prescriber_id_qualifier {
      label: "Prescription Temporary Prescriber ID Qualifier"
      description: "Temporary ID Qualifier for the prescriber. System Generated"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_RX_TEMPORARY_PRESCRIBER_ID_QUALIFIER AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_RX_TEMPORARY_PRESCRIBER_ID_QUALIFIER') ;;
      suggestions: [
        "NOT SPECIFIED",
        "NPI",
        "BLUE CROSS",
        "BLUE SHIELD",
        "MEDICARE",
        "MEDICAID",
        "UPIN",
        "STATE LICENSE",
        "CHAMPUS",
        "HEALTH INDUSTRY NUMBER",
        "FEDERAL TAX ID",
        "DEA",
        "STATE ISSUED",
        "PLAN SPECIFIC",
        "HCID",
        "FOREIGN PRESCRIBER IDENTIFIER",
        "OTHER"
      ]
    }

    #[ERXLPS-910] Sales related measure added here. Once these measures called from Sales explore sum_distinct will be applied to produce correct results.
    measure: sum_sales_rx_qty_left {
      label: "Prescription Quantity Left"
      group_label: "Quantity"
      description: "Number of remaining units (quantity) of the drug"
      type: sum_distinct
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_rx_qty_left END ;;
      sql_distinct_key: ${chain_id} ||'@'|| ${nhin_store_id} ||'@'|| ${rx_id} ||'@'|| ${sold_flg} ||'@'|| ${adjudicated_flg} ||'@'|| ${report_calendar_global.type} ;;
      value_format: "###0.0000"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    measure: sum_sales_rx_autofill_quantity {
      label: "Prescription Autofill Quantity"
      group_label: "Quantity"
      description: "The quantity to be dispensed during Auto-Fill. User entered.  If null, dispense quantity like regular"
      type: sum_distinct
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg} = 'Y') AND ${report_calendar_global.type} = 'TY' THEN ${TABLE}.sale_rx_autofill_quantity END ;;
      sql_distinct_key: ${chain_id} ||'@'|| ${nhin_store_id} ||'@'|| ${rx_id} ||'@'|| ${sold_flg} ||'@'|| ${adjudicated_flg} ||'@'|| ${report_calendar_global.type} ;;
      value_format: "###0.0000"
      drill_fields: [sales_transaction_level_drill_path*]
    }

    dimension: rx_patient_id {
      label: "Prescription Patient Identifier"
      description: "Unique ID that links this record with a specific PATIENT record. System generated"
      type: string
      #hidden: yes
      sql: ${TABLE}.SALE_RX_PATIENT_ID ;;
      value_format: "######"
    }

#[ERX-8161] END | - Looker changes: Expose F_RX fields from F_SALE table(already exposed on Sales explore)

#[ERX-8161] START | - Looker changes: Expose F_RX_TX_LINK fields from F_SALE table(already exposed on Sales explore)

    dimension: rx_tx_counseling_rph_employee_number {
      label: "Prescription Counseling Rph Employee Number"
      description: "Employee Number of the Pharmacist that completed the RPh Counseling task for a prescription"
      type: string
      sql: ${TABLE}.SALE_COUNSELING_RPH_EMPLOYEE_NUMBER ;;
    }

    dimension: rx_tx_dob_override_employee_number {
      label: "Prescription DOB Override Employee Number"
      description: "Employee Number of the individual that completed the Override of the DOB during DOB verification prompted at will call screen"
      type: string
      sql: ${TABLE}.SALE_DOB_OVERRIDE_EMPLOYEE_NUMBER ;;
    }

    dimension: rx_tx_epr_synch_version {
      label: "Prescription EPR Synch Version"
      description: "EPS version when the EPS SYNC occurs and EPR sends a successful response"
      type: string
      sql: ${TABLE}.SALE_EPR_SYNCH_VERSION ;;
    }

    dimension: rx_tx_mobile_services_channel {
      label: "Prescription Mobile Services Channel"
      description: "Route that refills are coming into the system. Via IVR or mobile device, Mobile App, Text, Epharm, Email, etc"
      type: string
      sql: ${TABLE}.SALE_MOBILE_SERVICES_CHANNEL ;;
    }

    dimension: rx_tx_new_ddid_authorized_by_emp_number {
      label: "Prescription New DDID Authorized By Emp Number"
      description: "Employee Number of the user who authorized the use of the new DDID for this fill"
      type: string
      sql: ${TABLE}.SALE_NEW_DDID_AUTHORIZED_BY_EMP_NUMBER ;;
    }

    dimension: rx_tx_pos_reason_for_void {
      label: "Prescription POS Reason For Void"
      description: "Reason that a POS sold transaction was unsold or voided"
      type: string
      sql: ${TABLE}.SALE_POS_REASON_FOR_VOID ;;
    }

    dimension: rx_tx_pv_employee_number {
      label: "Prescription PV Employee Number"
      description: "Employee Number of the person who completed Product Verification"
      type: string
      sql: ${TABLE}.SALE_PV_EMPLOYEE_NUMBER ;;
    }

    dimension: rx_tx_register_number {
      label: "Prescription Register Number"
      description: "Register number where the prescription was sold"
      type: string
      sql: ${TABLE}.SALE_REGISTER_NUMBER ;;
    }

    dimension: rx_tx_custom_sig {
      label: "Prescription Custom SIG"
      description: "Yes/No flag indicating if indicated SIG is a custom SIG. This means that the user typed the SIG manually or they used a SIG code and manually added additional SIG text"
      type: yesno
      sql: ${TABLE}.SALE_CUSTOM_SIG = 'Y' ;;
    }

    dimension: rx_tx_relationship_to_patient {
      label: "Prescription Relationship To Patient"
      description: "Relationship of the person dropping off or picking up the Rx, on behalf of the patient/customer"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_RELATIONSHIP_TO_PATIENT = '01' ;;
          label: "Patient"
        }

        when: {
          sql: ${TABLE}.SALE_RELATIONSHIP_TO_PATIENT = '02' ;;
          label: "Parent/Legal Guardian"
        }

        when: {
          sql: ${TABLE}.SALE_RELATIONSHIP_TO_PATIENT = '03' ;;
          label: "Spouse"
        }

        when: {
          sql: ${TABLE}.SALE_RELATIONSHIP_TO_PATIENT = '04' ;;
          label: "Caregiver"
        }

        when: {
          sql: ${TABLE}.SALE_RELATIONSHIP_TO_PATIENT = '99' ;;
          label: "Other"
        }

        when: {
          sql: true ;;
          label: "Not Specified"
        }
      }
    }

    dimension: rx_tx_sent_to_ehr {
      label: "Prescription Sent To EHR"
      description: "Yes/No flag indicating if the transaction has been sent EHR (Set by the application when the record is sent to EHR)"
      type: yesno
      sql: ${TABLE}.SALE_SENT_TO_EHR = 'Y' ;;
    }

    dimension: rx_tx_state_report_status {
      label: "Prescription State Report Status"
      description: "Flag indicating if the EC5 report has been submitted to the pharmacies specific state prescription monitoring program"
      type: string

      case: {
        when: {
          sql: ${TABLE}.SALE_STATE_REPORT_STATUS = '0' ;;
          label: "ECS Not Sent"
        }

        when: {
          sql: ${TABLE}.SALE_STATE_REPORT_STATUS = '1' ;;
          label: "ECS Sent"
        }

        when: {
          sql: ${TABLE}.SALE_STATE_REPORT_STATUS = '2' ;;
          label: "ECS Sent And Credited"
        }

        when: {
          sql: ${TABLE}.SALE_STATE_REPORT_STATUS = '3' ;;
          label: "ECS Sent And Changed"
        }

        when: {
          sql: true ;;
          label: "Not Available"
        }
      }
    }


    dimension: rx_tx_dispensed_drug_ndc {
      label: "Prescription Dispensed Drug NDC"
      description: "Prescription Dispensed Drug NDC"
      type: string
      sql: ${store_drug.ndc} ;;
    }

    dimension: rx_tx_auto_counting_system_priority {
      label: "Prescription Auto Counting System Priority"
      description: "Flag that indicates the priority of the prescription in the automated counting system"
      type: string
      sql: ${TABLE}.SALE_AUTO_COUNTING_SYSTEM_PRIORITY ;;
    }

    dimension: rx_tx_cashier_name {
      label: "Prescription Cashier Name"
      description: "The cashier's name who sold the prescription. User dependent, system populated"
      type: string
      sql: ${TABLE}.SALE_CASHIER_NAME ;;
    }

    dimension: rx_tx_manufacturer {
      label: "Prescription Manufacturer"
      description: "Manufacturer of the dispensed drug. System Generated"
      type: string
      sql: ${TABLE}.SALE_MANUFACTURER ;;
    }

    dimension: rx_tx_mar_page_position {
      label: "Prescription MAR Page Position"
      description: "Primary sort field which determines where medications should print on the MAR (Medication Application Record). User Defined"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_MAR_PAGE_POSITION AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_MAR_PAGE_POSITION') ;;
      suggestions: ["NOT SPECIFIED", "TOP", "BOTTOM", "MIDDLE", "SEPARATE PAGE"]
    }

    dimension: rx_tx_mar_sort_order {
      label: "Prescription MAR Sort Order"
      description: "Secondary sort field which determines where medications should print on the MAR (Medication Application Record). User Defined"
      type: string
      sql: ${TABLE}.SALE_MAR_SORT_ORDER ;;
    }

    #Label name mentioned as Prescription Transaction Note (rx_tx_note) as eps_rx has another column Prescription Transaction whcih contain rx_note
    dimension: rx_tx_note {
      label: "Prescription Transaction Note"
      description: "Notes entered by a User, or by the system, that pertain to a prescription. Alpha-Numeric"
      type: string
      sql: ${TABLE}.SALE_NOTE ;;
    }

    dimension: rx_tx_number_of_labels {
      label: "Prescription Number of Labels"
      description: "Total number of labels to print for this prescription. User entered via client or client prints default number of labels for prescription if not entered"
      type: number
      sql: ${TABLE}.SALE_NUMBER_OF_LABELS ;;
    }

    dimension: rx_tx_photo_id_address {
      label: "Prescription Photo Identifier Address"
      description: "Address of the photographic identification card, which was presented by the person dropping off or Picking up the Rx. User entered"
      type: string
      sql: ${TABLE}.SALE_PHOTO_ID_ADDRESS ;;
    }

    dimension: rx_tx_photo_id_city {
      label: "Prescription Photo Identifier City"
      description: "City of the photographic identification card, which was presented by the person dropping off or Picking up the Rx. User Entered"
      type: string
      sql: ${TABLE}.SALE_PHOTO_ID_CITY ;;
    }

    dimension: rx_tx_photo_id_number {
      label: "Prescription Photo Identifier"
      description: "Identification number(s) or letter(s) on the photographic identification card, which was presented at drop off or pick up. User entered"
      type: string
      sql: ${TABLE}.SALE_PHOTO_ID_NUMBER ;;
    }

    dimension: rx_tx_photo_id_pickup_dropoff_qualifier {
      label: "Prescription Photo Identifier Dropoff Qualifer"
      description: "Additional qualifier for the ID contained in AIR05. System Generated depeding on user entry"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_PHOTO_ID_PICKUP_DROPOFF_QUALIFIER AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_PHOTO_ID_PICKUP_DROPOFF_QUALIFIER') ;;
      suggestions: ["PERSON DROPPING OFF", "PERSON PICKING UP", "UNKNOWN", "NOT SPECIFIED"]
    }

    dimension: rx_tx_photo_id_postal_code {
      label: "Prescription Photo Identifier Postal Code"
      description: "Postal Code (Zip Code) of the photographic identification card, which was presented by the person dropping off or Picking up the prescription"
      type: string
      sql: ${TABLE}.SALE_PHOTO_ID_POSTAL_CODE ;;
    }

    dimension: rx_tx_photo_id_state {
      label: "Prescription Photo Identifier State"
      description: "State, Province, or Country of the photographic identification card, which was presented by the person dropping off or Picking up the prescription. User Entered"
      type: string
      sql: ${TABLE}.SALE_PHOTO_ID_STATE ;;
    }

    dimension: rx_tx_photo_id_type {
      label: "Prescription Photo Identifier Type"
      description: "Type of photographic identification offered by the person dropping off or picking up the prescription. User entered/selected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_PHOTO_ID_TYPE AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_PHOTO_ID_TYPE') ;;
      #Add suggetions once master codes are present in edw.d_master_code table
      suggestions: [
        "MILITARY ID",
        "STATE ISSUED ID",
        "UNIQUE SYSTEM ID",
        "PASSPORT ID",
        "DRIVER S LICENSE ID",
        "SOCIAL SECURITY NUMBER",
        "OTHER",
        "NOT SPECIFIED"
      ]
    }

    dimension: rx_tx_picked_up {
      label: "Prescription Picked Up"
      description: "Indicates if the prescription was picked up by the patient"
      type: yesno
      sql: ${TABLE}.SALE_PICKED_UP_FLAG = 'Y' ;;
    }

    dimension: rx_tx_pickup_first_name {
      label: "Prescription Pickup First Name"
      description: "First name on the photographic identification card, which was presented by the person dropping off or picking up the Rx. User entered"
      type: string
      sql: ${TABLE}.SALE_PICKUP_FIRST_NAME ;;
    }

    dimension: rx_tx_pickup_last_name {
      label: "Prescription Pickup Last Name"
      description: "Last name on the photographic identification card, which was presented by the person dropping off or picking up the Rx.User entered"
      type: string
      sql: ${TABLE}.SALE_PICKUP_LAST_NAME ;;
    }

    dimension: rx_tx_pickup_middle_name {
      label: "Prescription Pickup Middle Name"
      description: "Middle name on the photographic identification card, which was presented by the person dropping off or picking up the Rx. User entered"
      type: string
      sql: ${TABLE}.SALE_PICKUP_MIDDLE_NAME ;;
    }

    dimension: rx_tx_physician_order_page_position {
      label: "Prescription Physician Order Page Position"
      description: "Primary sort to determine where this medication should print on the  Physician's order. User Defined"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_PHYSICIAN_ORDER_PAGE_POSITION AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_PHYSICIAN_ORDER_PAGE_POSITION') ;;
      suggestions: ["NOT SPECIFIED", "TOP", "BOTTOM", "MIDDLE", "SEPARATE PAGE"]
    }

    dimension: rx_tx_physician_order_sort_order {
      label: "Prescription Physician Order Sort Order"
      description: "Secondary sort for medications for positioning on the MAR chart. Primary sort is MAR_PAGE Position. User Entered/Defined"
      type: string
      sql: ${TABLE}.SALE_PHYSICIAN_ORDER_SORT_ORDER ;;
    }

    dimension: rx_tx_require_pickup_id_address {
      label: "Prescription Require Pickup Identifier Address"
      description: "Indicates if the address listed on the person's ID, dropping off or picking up the prescription, still needs to be collected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_REQUIRE_PICKUP_ID_ADDRESS AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_REQUIRE_PICKUP_ID_ADDRESS') ;;
      suggestions: ["YES", "NO", "DATA ACQUIRED", "NOT SPECIFIED"]
    }

    dimension: rx_tx_require_pickup_id_birth_date {
      label: "Prescription Require Pickup Identifier Birth Date"
      description: "Yes/No Flag indicating if the birth date of the person dropping off or picking up the prescription is a mandatory field. User input"
      type: yesno
      sql: ${TABLE}.SALE_REQUIRE_PICKUP_ID_BIRTH_DATE = 'Y' ;;
    }

    dimension: rx_tx_require_pickup_id_city {
      label: "Prescription Require Pickup Identifier City"
      description: "Indicates if the city listed on the person's ID, dropping off or picking up the prescription, still needs to be collected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_REQUIRE_PICKUP_ID_CITY AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_REQUIRE_PICKUP_ID_CITY') ;;
      suggestions: ["YES", "NO", "DATA ACQUIRED", "NOT SPECIFIED"]
    }

    dimension: rx_tx_require_pickup_id_expiration {
      label: "Prescription Require Pickup Identifier Expiration"
      description: "Indicates if the expiration date of the person's ID, dropping off or picking up the prescription, still needs to be collected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_REQUIRE_PICKUP_ID_EXPIRATION AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_REQUIRE_PICKUP_ID_EXPIRATION') ;;
      suggestions: ["YES", "NO", "DATA ACQUIRED", "NOT SPECIFIED"]
    }

    dimension: rx_tx_require_pickup_id_middle_name {
      label: "Prescription Require Pickup Identifier Middle Name"
      description: "Yes/No Flag indicating if the middle name on the person's ID, dropping off or picking up the prescription, still needs to be collected"
      type: yesno
      sql: ${TABLE}.SALE_REQUIRE_PICKUP_ID_MIDDLE_NAME = 'Y' ;;
    }


    dimension: rx_tx_require_pickup_id_name {
      label: "Prescription Require Pickup Identifier Name"
      description: "Indicates if the first and last name on the person's ID, dropping off or picking up the prescription, still needs to be collected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_REQUIRE_PICKUP_ID_NAME AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_REQUIRE_PICKUP_ID_NAME') ;;
      suggestions: ["YES", "NO", "DATA ACQUIRED", "NOT SPECIFIED"]
    }

    dimension: rx_tx_require_pickup_id_number {
      label: "Prescription Require Pickup Identifier Number"
      description: "Indicates if the ID Number on the person's ID Card, dropping off or picking up the prescription, still needs to be collected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_REQUIRE_PICKUP_ID_NUMBER AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_REQUIRE_PICKUP_ID_NUMBER') ;;
      suggestions: ["YES", "NO", "DATA ACQUIRED", "NOT SPECIFIED"]
    }

    dimension: rx_tx_require_pickup_id_postal_code {
      label: "Prescription Require Pickup Identifier Postal Code"
      description: "Indicates if the ID Number on the person's ID Card, dropping off or picking up the prescription, still needs to be collected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_REQUIRE_PICKUP_ID_POSTAL_CODE AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_REQUIRE_PICKUP_ID_POSTAL_CODE') ;;
      suggestions: ["YES", "NO", "DATA ACQUIRED", "NOT SPECIFIED"]
    }

    dimension: rx_tx_require_pickup_id_state {
      label: "Prescription Require Pickup Identifier State"
      description: "Indicates if the State on the person's ID, dropping off or picking up the prescription, still needs to be collected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_REQUIRE_PICKUP_ID_STATE AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_REQUIRE_PICKUP_ID_STATE') ;;
      suggestions: ["YES", "NO", "DATA ACQUIRED", "NOT SPECIFIED"]
    }

    dimension: rx_tx_require_pickup_id_type {
      label: "Prescription Require Pickup Identifier Type"
      description: "Indicates if the type of ID Card, for the person dropping off or picking up the prescription, still needs to be collected"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_REQUIRE_PICKUP_ID_TYPE AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_REQUIRE_PICKUP_ID_TYPE') ;;
      suggestions: ["YES", "NO", "DATA ACQUIRED"]
    }

    dimension: rx_tx_rph_employee_number_of_record {
      label: "Prescription Rph Employee Number Of Record"
      description: "Employee Number of the Pharmacist associated with this record"
      type: string
      sql: ${TABLE}.SALE_RPH_EMPLOYEE_NUMBER_OF_RECORD ;;
    }


    dimension: rx_tx_rx_match_key {
      label: "Prescription Match Key"
      description: "External vendor identifier"
      type: string
      sql: ${TABLE}.SALE_RX_MATCH_KEY ;;
    }

    dimension: rx_tx_sig_code {
      label: "Prescription SIG Code"
      description: "Code that signifies how the medication should be taken and is written on the prescription as directions. User Entered/selected"
      type: string
      sql: ${TABLE}.SALE_SIG_CODE ;;
    }

    dimension: rx_tx_sig_text {
      label: "Prescription SIG Text"
      description: "Actual SIG text printed on the bottle label. Created by the system or entered manually by the user"
      type: string
      sql: ${TABLE}.SALE_SIG_TEXT ;;
    }

    dimension: rx_tx_site_of_administration {
      label: "Prescription Site Of Administration"
      description: "Site on the patient that the medication was administered"
      type: string
      sql: (SELECT MAX(MASTER_CODE_SHORT_DESCRIPTION) FROM EDW.D_MASTER_CODE MC WHERE MC.MASTER_CODE_VALUE = NVL(CAST(${TABLE}.SALE_SITE_OF_ADMINISTRATION AS VARCHAR),'NULL') AND MC.EDW_COLUMN_NAME = 'SALE_SITE_OF_ADMINISTRATION') ;;
      #Add suggetions once master codes are present in edw.d_master_code table
      suggestions: [
        "NOT SPECIFIED",
        "LEFT UPPER ARM",
        "LEFT DELTOID",
        "LEFT GLUTEUS MEDIUS",
        "LEFT LOWER FOREARM",
        "LEFT THIGH",
        "LEFT VASTUS LATERALIS",
        "NASAL",
        "ORAL",
        "RIGHT UPPER ARM",
        "RIGHT DELTOID",
        "RIGHT GLUTEUS MEDIUS",
        "RIGHT LOWER FOREARM",
        "RIGHT THIGH",
        "RIGHT VASTUS LATERALIS",
        "OTHER"
      ]
    }

    dimension: rx_tx_consent_by_first_name {
      label: "Prescription Consent By First Name"
      description: "First name of the person of the person consenting to the administration of this immunization"
      type: string
      sql: ${TABLE}.SALE_CONSENT_BY_FIRST_NAME ;;
    }

    dimension: rx_tx_consent_by_last_name {
      label: "Prescription Consent By Last Name"
      description: "Last name of the person of the person consenting to the administration of this immunization"
      type: string
      sql: ${TABLE}.SALE_CONSENT_BY_LAST_NAME ;;
    }

    dimension: rx_tx_consent_by_middle_name {
      label: "Prescription Consent By Middle Name"
      description: "Middle name of the person of the person consenting to the administration of this immunization"
      type: string
      sql: ${TABLE}.SALE_CONSENT_BY_MIDDLE_NAME ;;
    }

    dimension: rx_tx_consent_by_relation_code {
      label: "Prescription Consent By Relation Code"
      description: "3 Character Relationship code identifying the relationship of the person consenting to the administration of this immunization"
      type: string
      sql: ${TABLE}.SALE_CONSENT_BY_RELATION_CODE ;;
    }

    dimension: rx_tx_drug_image_key {
      label: "Prescription Drug Image Key"
      description: "DIB filename of the drug image associated with this transaction.  System Generated"
      type: string
      sql: ${TABLE}.SALE_DRUG_IMAGE_KEY ;;
    }

    dimension: sum_sales_rx_tx_sig_per_day {
      label: "Prescription Total SIG Per Day"
      group_label: "SIG"
      description: "Total number of times the drug is taken per day . User entered via client"
      type: number
      sql: ${TABLE}.SALE_SIG_PER_DAY ;;
    }

    dimension: sum_sales_rx_tx_sig_per_dose {
      label: "Prescription Total SIG Per Dose"
      group_label: "SIG"
      description: "Total number of dosage units that must be taken or given per administration of the drug. User entered via client"
      type: number
      sql: ${TABLE}.SALE_SIG_PER_DOSE ;;
    }

    #ERXDWPS-6173 - Issue with the logic in SBMO Script Count : Consider credit script as -ve script count
    measure: total_sbmo_script_count {
      label: "SBMO Script Count"
      description: "SBMO Script Count"
      type: sum_distinct
      sql: case when ${TABLE}.SALE_FILL_LOCATION in ('M' , 'C')
                then ${TABLE}.SALE_SCRIPT_COUNT
                else null end ;;
      sql_distinct_key:  ${chain_id}|| '@' ||${nhin_store_id} || '@' || ${rx_tx_id} || '@' || ${sold_flg} || '@' || ${adjudicated_flg} || '@' || ${report_calendar_global.type} || '@' || ${sale_event_type} ;;
      value_format: "#,##0;(#,##0)"
    }

  measure: count_distinct_rx_tx_id {
    label: "Fill Count"
    hidden: yes
    description: "Prescription Fill Count"
    type: number
    sql: COUNT(DISTINCT(${chain_id} ||'@'|| ${nhin_store_id} ||'@'|| ${rx_tx_id})) ;; #ERXLPS-1649
    value_format: "#,##0"
  }

#[ERX-8161] END | - Looker changes: Expose F_RX_TX_LINK fields from F_SALE table(already exposed on Sales explore)

  #--------------------------------------------- [ERX-7360] new filter for base vs archive table selection ----------------------------------------------
  filter: active_archive_filter {
    hidden:  yes
    label: "Analysis From"
    type: string
    suggestions: ["Active Tables – Current and Past 2 complete years' data", "Archive Tables"]
    default_value: "Active Tables – Current and Past 2 complete years' data"
  }

  dimension: active_archive_filter_input {
    hidden: yes
    type: string
    sql:  {% parameter active_archive_filter %} ;;
  }
  #------------------------------------------- END [ERX-7360] new filter for base vs archive table selection --------------------------------------------

  #[ERXDWPS-6716] New measure for net tx sales fully attributed to the primary plan
  measure: net_sales_rolled_up {
    label: "Net Sales Rolled Up"
    description: "Total net sales amount for a prescription transaction, fully attributed to the primary plan for third party claims or for cash transactions. This measure will be displayed only on primary payer, all others will display as $0.00"
    type: sum
    sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${financial_category} IN ('CASH - CREDIT','CASH - FILLED','PARTIAL - FILLED', 'PARTIAL - CREDIT')
               AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
              THEN (${TABLE}.SALE_PRICE - nvl(${TABLE}.SALE_DISCOUNT_AMOUNT,0))
              WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y')
               AND ${financial_category} IN ('T/P - CREDIT','T/P - FILLED')
               AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
              THEN ${sales_tx_tp.tx_net_sales}
          END ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  #ERXDWPS-7510 - Sync EPS RX_TX_LINK,RX_SUMMARY changes to EDW F_SALE and F_SALE_ARCHIVE | Start
  dimension: sale_rx_tx_dispensing_rules_state {
    label:"Prescription Transaction Dispensing Rules State"
    description:"Stores the code of the state where the prescription will be delivered to the patient."
    type: string
    sql: ${TABLE}.SALE_RX_TX_DISPENSING_RULES_STATE ;;
  }

  dimension: sale_rx_tx_prescriber_license_state {
    label:"Prescription Transaction Prescriber License State"
    description:"In order to assist the pharmacies in case of audit, this field stores the prescriber license state at the transaction level so if a customer is audited they will know the license used at the time of filling."
    type: string
    sql: ${TABLE}.SALE_RX_TX_PRESCRIBER_LICENSE_STATE ;;
  }

  dimension: sale_rx_tx_prescriber_license_number {
    label:"Prescription Transaction Prescriber License Number"
    description:"In order to assist the pharmacies in case of audit,  this field stores the prescriber license number at the transaction level so if a customer is audited they will know the license used at the time of filling."
    type: string
    sql: ${TABLE}.SALE_RX_TX_PRESCRIBER_LICENSE_NUMBER ;;
  }

  dimension: sale_rx_tx_wait_for_pa_sale_rx_tx_id {
    label:"Prescription Transaction Wait For Pa Rx Tx Id"
    type: number
    hidden: yes
    sql: ${TABLE}.SALE_RX_TX_WAIT_FOR_PA_SALE_RX_TX_ID ;;
  }

  dimension: sale_rx_tx_cii_partial_dispensed_count {
    label:"Prescription Transaction CII Partial Dispensed Count"
    description:"This column will be used only in case of C-II drug. The value of this column will be incremented when a prescription is partially dispensed (ie Fill quantity is less than prescribed quantity) for a CII drug.
    In case of new fill for C-II drug, If Fill quantity = Prescribed quantity then CII Partial Dispensed Count = 0. If Fill quantity < Prescribed quantity CII Partial Dispensed Count = 1.
    In case of second fill for C-II drug If Fill quantity = Prescribed quantity CII Partial Dispensed Count = copy value of CII Partial Dispensed Count for the last RX_TX. If Fill quantity < Prescribed quantity CII Partial Dispensed Count = Increment one to the value CII Partial Dispensed Count for the last RX_TX"
    type: number
    sql: ${TABLE}.SALE_RX_TX_CII_PARTIAL_DISPENSED_COUNT ;;
  }

  dimension: sale_rx_tx_alignment_fill_days_supply {
    label:"Prescription Transaction Alignment Fill Days Supply"
    description:"It signifies the days supply of standard fill received in alignment request from Care Rx. If prescription is filled for days supply different than it then patient medications will not be aligned."
    type: number
    sql: ${TABLE}.SALE_RX_TX_ALIGNMENT_FILL_DAYS_SUPPLY ;;
  }

  dimension: sale_rx_tx_alignment_fill_type_reference {
    label:"Prescription Transaction Alignment Fill Type"
    description:"It identifies type of alignment fill transactions"
    type: string
    hidden: yes
    sql: ${TABLE}.SALE_RX_TX_ALIGNMENT_FILL_TYPE ;;
  }

  dimension: sale_rx_tx_alignment_fill_type {
    label:"Prescription Transaction Alignment Fill Type"
    description:"It identifies type of alignment fill transactions"
    type: string
    sql: CASE WHEN to_char(${TABLE}.SALE_RX_TX_ALIGNMENT_FILL_TYPE) IS NULL THEN 'NULL - UNKNOWN'
              WHEN to_char(${TABLE}.SALE_RX_TX_ALIGNMENT_FILL_TYPE) = '1' THEN '1 - STORT FILL TRANSACTION'
              WHEN to_char(${TABLE}.SALE_RX_TX_ALIGNMENT_FILL_TYPE) = '2' THEN '2 - LONG FILL TRANSACTION'
              WHEN to_char(${TABLE}.SALE_RX_TX_ALIGNMENT_FILL_TYPE) = '3' THEN '3 - STANDARD FILL TRANSACTION'
              ELSE 'UNKNOWN'
         END ;;
    suggestions: ["NULL - UNKNOWN", "1 - STORT FILL TRANSACTION", "2 - LONG FILL TRANSACTION", "3 - STANDARD FILL TRANSACTION"]
    suggest_persist_for: "24 hours"
    drill_fields: [sale_rx_tx_alignment_fill_type_reference]
  }

  dimension: sale_rx_tx_is_alignment_fill_request {
    label:"Prescription Transaction Is Alignment Fill Request"
    description:"Yes/No flag indicating if transaction is created as result of alignment fill request from Care Rx"
    type: yesno
    sql: ${TABLE}.SALE_RX_TX_IS_ALIGNMENT_FILL_REQUEST_FLAG = 'Y' ;;
  }

  dimension: sale_rx_tx_immunization_share_flag_reference {
    label:"Prescription Transaction Immunization Share Flag"
    description:"Flag indicating if the Immunization should be shared with the Immunization Registry."
    type: string
    hidden: yes
    sql: ${TABLE}.SALE_RX_TX_IMMUNIZATION_SHARE_FLAG ;;
  }

  dimension: sale_rx_tx_immunization_share_flag {
    label:"Prescription Transaction Immunization Share Flag"
    description:"Flag indicating if the Immunization should be shared with the Immunization Registry."
    type: string
    sql: CASE WHEN ${TABLE}.SALE_RX_TX_IMMUNIZATION_SHARE_FLAG IS NULL THEN 'NULL - UNKNOWN'
              WHEN ${TABLE}.SALE_RX_TX_IMMUNIZATION_SHARE_FLAG = 'Y' THEN 'Y - YES'
              WHEN ${TABLE}.SALE_RX_TX_IMMUNIZATION_SHARE_FLAG = 'N' THEN 'N - NO'
              ELSE 'UNKNOWN'
         END ;;
    suggestions: ["NULL - UNKNOWN", "Y - YES", "N - NO"]
    suggest_persist_for: "24 hours"
    drill_fields: [sale_rx_tx_immunization_share_flag_reference]
  }

  dimension: sale_rx_tx_pmp_opioid_treatment_type_reference {
    label:"Prescription Transaction Pmp Opioid Treatment Type"
    description:"This field indicates that the prescription is for opioid dependency treatment or not."
    type: string
    hidden: yes
    sql: ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE ;;
  }

  dimension: sale_rx_tx_pmp_opioid_treatment_type {
    label:"Prescription Transaction Pmp Opioid Treatment Type"
    description:"This field indicates that the prescription is for opioid dependency treatment or not."
    type: string
    sql: CASE WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE IS NULL THEN 'NULL - UNKNOWN'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '01' THEN  '01 - NOT USED FOR OPIOID DEPENDENCY TREATMENT'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '02' THEN  '02 - USED FOR OPIOID DEPENDENCY TREATMENT'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '03' THEN  '03 - PAIN ASSOCIATED WITH ACTIVE AND AFTERCARE CANCER TREATMENT'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '04' THEN  '04 - PALLIATIVE CARE IN CONJUNCTION WITH A SERIOUS ILLNESS'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '05' THEN  '05 - END-OF-LIFE AND HOSPICE CARE'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '06' THEN  '06 - A PREGNANT INDIVIDUAL WITH A PRE-EXISTING PRESCRIPTION FOR OPIOIDS'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '07' THEN  '07 - ACUTE PAIN FOR AN INDIVIDUAL WITH AN EXISTING OPIOID PRESCRIPTION FOR CHRONIC PAIN'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '08' THEN  '08 - INDIVIDUALS PURSUING AN ACTIVE TAPER OF OPIOID MEDICATIONS'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '09' THEN  '09 - PATIENT IS PARTICIPATING IN A PAIN MANAGEMENT CONTRACT'
              WHEN ${TABLE}.SALE_RX_TX_PMP_OPIOID_TREATMENT_TYPE = '99' THEN  '99 - OTHER (TRADING PARTNER AGREED UPON REASON)'
              ELSE 'UNKNOWN'
         END ;;
    suggestions: ["NULL - UNKNOWN", "01 - NOT USED FOR OPIOID DEPENDENCY TREATMENT", "02 - USED FOR OPIOID DEPENDENCY TREATMENT", "03 - PAIN ASSOCIATED WITH ACTIVE AND AFTERCARE CANCER TREATMENT", "04 - PALLIATIVE CARE IN CONJUNCTION WITH A SERIOUS ILLNESS", "05 - END-OF-LIFE AND HOSPICE CARE", "06 - A PREGNANT INDIVIDUAL WITH A PRE-EXISTING PRESCRIPTION FOR OPIOIDS", "07 - ACUTE PAIN FOR AN INDIVIDUAL WITH AN EXISTING OPIOID PRESCRIPTION FOR CHRONIC PAIN", "08 - INDIVIDUALS PURSUING AN ACTIVE TAPER OF OPIOID MEDICATIONS", "09 - PATIENT IS PARTICIPATING IN A PAIN MANAGEMENT CONTRACT", "99 - OTHER (TRADING PARTNER AGREED UPON REASON)"]
    suggest_persist_for: "24 hours"
    drill_fields: [sale_rx_tx_pmp_opioid_treatment_type_reference]
  }

  dimension: sale_rx_tx_require_id_pickup_dropoff_qualifier_reference {
    label:"Prescription Transaction Require Id Pickup Dropoff Qualifier"
    description:"Flag to identify if the pick up /drop off qualifier is a mandatory field."
    type: string
    hidden: yes
    sql: ${TABLE}.SALE_RX_TX_REQUIRE_ID_PICKUP_DROPOFF_QUALIFIER ;;
  }

  dimension: sale_rx_tx_require_id_pickup_dropoff_qualifier {
    label:"Prescription Transaction Require Id Pickup Dropoff Qualifier"
    description:"Flag to identify if the pick up /drop off qualifier is a mandatory field."
    type: string
    sql: CASE WHEN ${TABLE}.SALE_RX_TX_REQUIRE_ID_PICKUP_DROPOFF_QUALIFIER IS NULL THEN 'NULL - UNKNOWN'
              WHEN ${TABLE}.SALE_RX_TX_REQUIRE_ID_PICKUP_DROPOFF_QUALIFIER= 'Y' THEN 'Y - HAVE TO GET THE PICKUP INFO'
              WHEN ${TABLE}.SALE_RX_TX_REQUIRE_ID_PICKUP_DROPOFF_QUALIFIER= 'N' THEN 'N - DO NOT NEED THE PICKUP INFO'
              WHEN ${TABLE}.SALE_RX_TX_REQUIRE_ID_PICKUP_DROPOFF_QUALIFIER= 'D' THEN 'D - DONE WITH THE PICKUP INFO COLLECTION'
              ELSE 'UNKNOWN'
         END ;;
    suggestions: ["NULL - UNKNOWN", "Y - HAVE TO GET THE PICKUP INFO", "N - DO NOT NEED THE PICKUP INFO", "D - DONE WITH THE PICKUP INFO COLLECTION"]
    suggest_persist_for: "24 hours"
    drill_fields: [sale_rx_tx_require_id_pickup_dropoff_qualifier_reference]
  }

  dimension: sale_rx_tx_pv_double_count_performed {
    label:"Prescription Transaction PV Double Count Performed"
    description:"Prescription Transaction PV Double Count Performed"
    type: string
    sql: ${TABLE}.SALE_RX_TX_PV_DOUBLE_COUNT_PERFORMED ;;
  }

  dimension_group: sale_rx_tx_counseling_completion {
    label:"Prescription Transaction Counseling Completion"
    description:"Date/Time when the counseling is completed on a particular transaction."
    type: time
    sql: ${TABLE}.SALE_RX_TX_COUNSELING_COMPLETION_DATE ;;
    timeframes: [time,date,week,month,month_num,year,quarter,quarter_of_year,yesno,hour_of_day,time_of_day,hour2,minute15,day_of_week,day_of_month]
  }

  dimension: sale_rx_tx_change_billing  {
    label:"Prescription Transaction Change Billing"
    description:"Prescription Transaction Change Billing. 'Y' signifies change billing was performed at will call.'N' Signifies change billing was performed at will call -> adjudication failed -> user chose 'Use Original Billing'. No situation tracks successful/unsuccessful adjudication. If 'Use Original Billing' is used, then corresponding rx_tx_id will get the value as 'Y' and this ID will get deactivated. The original RX_TX_ID will get the value as 'N' that will signify that change billing was performed at will call -> adjudication failed -> user chose 'Use Original Billing'. NULL value stands for Change Billing hasn’t been done/attempted"
    type: string
    sql: ${TABLE}.SALE_RX_TX_CHANGE_BILLING ;;
  }

  dimension: sale_rx_tx_last_foreground_rph_employee_number {
    label:"Prescription Transaction Last Foreground Rph Employee Number"
    description:"Inserted by code and is populated only when a transaction has completed data verification (In work flow) or fulfillment/RPh verification (In Rapid fill) in background."
    type: string
    sql: ${TABLE}.SALE_RX_TX_LAST_FOREGROUND_RPH_EMPLOYEE_NUMBER ;;
  }

  dimension: sale_rx_tx_ship_to_provider_address_only {
    label:"Prescription Transaction Ship To Provider Address Only"
    description:"Prescription Transaction Ship To Provider Address Only"
    type: string
    sql: ${TABLE}.SALE_RX_TX_SHIP_TO_PROVIDER_ADDRESS_ONLY ;;
  }

  dimension: sale_rx_tx_tax_code_id {
    label:"Prescription Transaction Tax Code Id"
    hidden: yes
    type: number
    sql: ${TABLE}.SALE_RX_TX_TAX_CODE_ID ;;
  }

  dimension: sale_rx_tx_initial_sale_rx_tx_id {
    label:"Prescription Transaction Initial Rx Tx Id"
    hidden: yes
    type: number
    sql: ${TABLE}.SALE_RX_TX_INITIAL_SALE_RX_TX_ID ;;
  }

  dimension: sale_rx_tx_subsequent_sale_rx_tx_id {
    label:"Prescription Transaction Subsequent Rx Tx Id"
    hidden: yes
    type: number
    sql: ${TABLE}.SALE_RX_TX_SUBSEQUENT_SALE_RX_TX_ID ;;
  }

  dimension: sale_rx_tx_used_in_insulin_pump_reference {
    label:"Prescription Transaction Used In Insulin Pump"
    description:"Prescription Transaction Used In Insulin Pump. Set when using rx edit#23"
    type: string
    hidden: yes
    sql: ${TABLE}.SALE_RX_TX_USED_IN_INSULIN_PUMP ;;
  }

  dimension: sale_rx_tx_used_in_insulin_pump {
    label:"Prescription Transaction Used In Insulin Pump"
    description:"Prescription Transaction Used In Insulin Pump. Set when using rx edit#23"
    type: string
    sql: CASE WHEN ${TABLE}.SALE_RX_TX_USED_IN_INSULIN_PUMP IS NULL THEN 'NULL - UNKNOWN'
              WHEN ${TABLE}.SALE_RX_TX_USED_IN_INSULIN_PUMP = 'Y' THEN 'Y - YES'
              WHEN ${TABLE}.SALE_RX_TX_USED_IN_INSULIN_PUMP = 'N' THEN 'N - NO'
              ELSE 'UNKNOWN'
         END ;;
    suggestions: ["NULL - UNKNOWN", "Y - YES", "N - NO"]
    suggest_persist_for: "24 hours"
    drill_fields: [sale_rx_tx_used_in_insulin_pump_reference]
  }

  measure: sum_sale_rx_tx_patient_pay_amount {
    label:"Prescription Transaction Patient Pay Amount"
    description:"Holds the final amount a patient owes to the pharmacy. If the rx has been priced to a tp, the value in this field will exactly match with tx_tp.received_copay. This is the NCPDP 505-F5 patient pay/patient net pay/balance due from patient value. for a cash rx, the value stored here will be calculated as generic_price - generic_discount + tax_amount. For brand or compound the value stored here will be calculated as rx_tx.brand_price – rx_tx.brand_discount + rx_tx.tax_amount"
    type: sum
    sql: NVL(CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                THEN ${TABLE}.SALE_RX_TX_PATIENT_PAY_AMOUNT
            END,0)  ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  dimension_group: sale_rx_tx_network_plan_bill {
    label:"Prescription Transaction Network Plan Bill"
    description:"Date/Time of Prescription Transaction Network Plan Bill"
    type: time
    sql: ${TABLE}.SALE_RX_TX_NETWORK_PLAN_BILL_DATE ;;
    timeframes: [time,date,week,month,month_num,year,quarter,quarter_of_year,yesno,hour_of_day,time_of_day,hour2,minute15,day_of_week,day_of_month]
  }

  measure: sum_sale_rx_tx_expected_completion_patient_pay_amount {
    label:"Prescription Transaction Expected Completion Patient Pay Amount"
    description:"Estimated Patient pay for total fill on partial fill."
    type: sum
    sql: NVL(CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                THEN ${TABLE}.SALE_RX_TX_EXPECTED_COMPLETION_PATIENT_PAY_AMOUNT
            END,0)  ;;
    value_format: "$#,##0.00;($#,##0.00)"
  }

  dimension_group: sale_rx_alignment_start_date {
    label: "Alignment Start"
    description: "Prescription alignment start date"
    type: time
    timeframes: [time,date,week,day_of_week,day_of_week_index,month,month_num,month_name,day_of_month,quarter,quarter_of_year,year,day_of_year,week_of_year]
    sql: ${TABLE}.SALE_RX_ALIGNMENT_START_DATE ;;
  }

  dimension: sale_rx_is_patient_auto_selected {
    label: "Patient Auto Selected"
    description: "Yes/No flag indicating whether the patient was auto selected"
    type: yesno
    sql: ${TABLE}.SALE_RX_IS_PATIENT_AUTO_SELECTED = 'Y' ;;
  }

  dimension_group: sale_rx_sync_script_refused_date {
    label: "Sync Script Refused"
    description: "Prescription sync script refused date"
    type: time
    timeframes: [time,date,week,day_of_week,day_of_week_index,month,month_num,month_name,day_of_month,quarter,quarter_of_year,year,day_of_year,week_of_year]
    sql: ${TABLE}.SALE_RX_SYNC_SCRIPT_REFUSED_DATE ;;
  }
  #ERXDWPS-7510 - Sync EPS RX_TX_LINK,RX_SUMMARY changes to EDW F_SALE and F_SALE_ARCHIVE | End

  #[ERXDWPS-7020] - Pharmacy drug cost related dimensions
  dimension: awp_ingredient_cost_pct_store {
    label: "AWP Ingredient Cost % - Pharmacy"
    description: "Ingredient Cost percentage based on AWP Cost at the time of fill at Pharmacy. Calculation Used: ( Response Detail Ingredient Amount / AWP at time of fill - Pharmacy )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${rx_tx_awp_cost_amount_at_fill_store_reference},0),6) ;;
    value_format: "00.0000%"
  }

  dimension: wac_ingredient_cost_pct_store {
    label: "WAC Ingredient Cost % - Pharmacy"
    description: "Ingredient Cost percentage based on WAC Cost at the time of fill at Pharmacy. Calculation Used: ( Response Detail Ingredient Amount / WAC at time of fill - Pharmacy )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${rx_tx_wac_cost_amount_at_fill_store_reference},0),6) ;;
    value_format: "00.0000%"
  }

  measure: sum_awp_ingredient_cost_pct_store {
    label: "AWP Ingredient Cost % - Pharmacy"
    description: "Ingredient Cost percentage based on AWP Cost at the time of fill at Pharmacy. Calculation Used: ( Response Detail Ingredient Amount / AWP at time of fill - Pharmacy )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sum_sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${sum_rx_tx_awp_cost_amount_at_fill_store},0),6) ;;
    value_format: "00.0000%"
  }

  measure: sum_wac_ingredient_cost_pct_store {
    label: "WAC Ingredient Cost % - Pharmacy"
    description: "Ingredient Cost percentage based on WAC Cost at the time of fill at Pharmacy. Calculation Used: ( Response Detail Ingredient Amount / WAC at time of fill - Pharmacy )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sum_sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${sum_rx_tx_wac_cost_amount_at_fill_store},0),6) ;;
    value_format: "00.0000%"
  }

  #[ERXDWPS-7020] - Host drug cost related dimensions
  dimension: awp_ingredient_cost_pct_host {
    label: "AWP Ingredient Cost % - HOST"
    description: "Ingredient Cost percentage based on AWP Cost at the time of fill at Host. Calculation Used: ( Response Detail Ingredient Amount / AWP at time of fill - HOST )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${rx_tx_awp_cost_amount_at_fill_host_reference},0),6) ;;
    value_format: "00.0000%"
  }

  dimension: wac_ingredient_cost_pct_host {
    label: "WAC Ingredient Cost % - HOST"
    description: "Ingredient Cost percentage based on WAC Cost at the time of fill at Host. Calculation Used: ( Response Detail Ingredient Amount / WAC at time of fill - HOST )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${rx_tx_wac_cost_amount_at_fill_host_reference},0),6) ;;
    value_format: "00.0000%"
  }

  measure: sum_awp_ingredient_cost_pct_host {
    label: "AWP Ingredient Cost % - HOST"
    description: "Ingredient Cost percentage based on AWP Cost at the time of fill at Host. Calculation Used: ( Response Detail Ingredient Amount / AWP at time of fill - HOST )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sum_sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${sum_rx_tx_awp_cost_amount_at_fill_host},0),6) ;;
    value_format: "00.0000%"
  }

  measure: sum_wac_ingredient_cost_pct_host {
    label: "WAC Ingredient Cost % - HOST"
    description: "Ingredient Cost percentage based on WAC Cost at the time of fill at Host. Calculation Used: ( Response Detail Ingredient Amount / WAC at time of fill - HOST )"
    type: number
    sql: ROUND(${eps_tx_tp_response_detail.sum_sales_tx_tp_response_detail_ingredient_amount}/NULLIF(${sum_rx_tx_wac_cost_amount_at_fill_host},0),6) ;;
    value_format: "00.0000%"
  }

#TRX-1228 This measure is created to have a drill path for the TurnRx.
  measure: trx_scripts_count {
    label: "Scripts Count"
    group_label: "Scripts"
    description: "Total script volume without any adjustment"
    hidden: yes
    type: number
    sql: ${count} ;;
    value_format: "#,##0;(#,##0)"
    drill_fields: [trx_drill_path*,trx_scripts_count]
  }

  #################################################################################################################
  #           [ERXDWPS-8260] COSTCO SOW - Moving Average Cost - Sales Looker Dimensions and Measures              #
  #                        START MVAC based dimensions, measures and filters                                      #
  #################################################################################################################

    dimension: moving_average_cost {
      label: "Moving Average Cost"
      description: "Represents the total Moving Average Cost (MVAC) at fill date, of filled drug used on the prescription transaction record"
      type: number
      hidden: yes
      sql: NVL(CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                    THEN
                         CASE WHEN ${financial_category} IN ('CASH - FILLED', 'PARTIAL - FILLED', 'T/P - FILLED')
                              THEN ${store_rx_tx_detail_flatten.rx_tx_total_moving_average_cost_at_fill_date}
                              WHEN ${financial_category} IN ('CASH - CREDIT', 'PARTIAL - CREDIT', 'T/P - CREDIT')
                              THEN ${store_rx_tx_detail_flatten.rx_tx_total_moving_average_cost_at_fill_date}*-1
                         END
                END,0) ;;
      value_format: "$#,##0.00;($#,##0.00)"
    }

    dimension: moving_average_cost_per_unit {
      label: "Tx Moving Average Cost Per Unit"
      description: "Represents the per unit Moving Average Cost (MVAC) at fill date, of filled drug used on the prescription transaction record"
      type: number
      sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                THEN ${store_rx_tx_detail_flatten.rx_tx_moving_average_cost_per_unit_at_fill_date}
           END ;;
      value_format: "$#,##0.0000000;($#,##0.0000000)"
    }

      dimension: moving_average_cost_after_sold {
        label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC)(after Sold) of filled drug used on the prescription transaction record"
        type: number
        hidden: yes
        sql: NVL(CASE WHEN ${after_adjudicated_flg} = 'Y' AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
                    THEN
                         CASE WHEN ${financial_category} IN ('CASH - FILLED', 'PARTIAL - FILLED', 'T/P - FILLED')
                              THEN ${store_rx_tx_detail_flatten.rx_tx_total_moving_average_cost_at_fill_date}
                              WHEN ${financial_category} IN ('CASH - CREDIT', 'PARTIAL - CREDIT', 'T/P - CREDIT')
                              THEN ${store_rx_tx_detail_flatten.rx_tx_total_moving_average_cost_at_fill_date}*-1
                         END
               END,0) ;;
        value_format: "$#,##0.00;($#,##0.00)"
      }

      dimension: gross_margin_mvac {
        label: "Gross Margin (MVAC)"
        description: "Gross Margin (MVAC) of prescription. MVAC Calculation Used: Price of the Prescription - Moving Average Cost"
        type: number
        hidden: yes
        sql: CASE WHEN (${adjudicated_flg} = 'Y' or ${sold_flg}= 'Y') AND NVL(${sales_tx_tp.tx_tp_first_counter},1) = 1
             THEN (${TABLE}.SALE_PRICE - ${moving_average_cost})
             ELSE 0
        END ;;
        value_format: "$#,##0.00;($#,##0.00)"
      }

      filter: gross_margin_filter_mvac {
        label: "Gross Margin $ (MVAC) \"Filter Only\""
        description: "Gross Margin (MVAC) of prescription. MVAC Calculation Used: Price of the Prescription - Moving Average Cost"
        type: number
        sql: {% condition gross_margin_filter_mvac %} ${gross_margin_mvac} {% endcondition %} ;;
      }

      dimension: gross_margin_after_sold_mvac {
        label: "Gross Margin After Sold (MVAC)"
        description: "Gross Margin (MVAC) of prescription after sold. MVAC Calculation Used: Price of the Prescription After Sold - Moving Average Cost After Sold"
        type: number
        hidden: yes
        sql: CASE WHEN ${sold_flg} = 'Y' THEN ${gross_margin_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
      }

      measure: sum_moving_average_cost {
        label: "Moving Average Cost"
        group_label: "Moving Average Cost"
        hidden: yes
        description: "Represents the total Moving Average Cost (MVAC) of filled drug used on the prescription transaction record"
        type: sum
        sql: ${moving_average_cost} ;;
        value_format: "$#,##0.00;($#,##0.00)"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
      }

      measure: avg_moving_average_cost {
        label: "Avg Moving Average Cost"
        group_label: "Moving Average Cost"
        description: "Average Moving Average Cost (MVAC) of filled drug. MVAC Calculation Used: Moving Average Cost /Total no. of scripts"
        type: number
        sql: COALESCE(${sum_moving_average_cost_ty}/NULLIF(${count},0),0) ;;
        value_format: "$#,##0.00;($#,##0.00)"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
      }

      measure: avg_moving_average_cost_ly {
        label: "LY Avg Moving Average Cost"
        group_label: "Moving Average Cost"
        description: "Average last year Moving Average Cost (MVAC) of filled drug. MVAC Calculation Used: Moving Average Cost /Total no. of scripts for Last Year based on the period selected"
        type: number
        sql: COALESCE(${sum_moving_average_cost_ly}/NULLIF(${count_ly},0),0) ;;
        value_format: "$#,##0.00;($#,##0.00)"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
      }

      measure: avg_moving_average_cost_variance {
        label: "TY/LY Avg Moving Average Cost Variance $"
        group_label: "Moving Average Cost"
        description: "Dollar Increase/Decrease of Average Moving Average Cost (MVAC) of filled drug. MVAC Calculation Used: (Avg Moving Average Cost - LY Avg Moving Average Cost)."
        type: number
        sql: ${avg_moving_average_cost} - ${avg_moving_average_cost_ly} ;;
        value_format: "$#,##0.00;($#,##0.00)"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                   {% else %}
                   <font color="grey">{{ rendered_value }}
                   {% endif %}
                   ;;
      }

      measure: avg_moving_average_cost_variance_pct {
        label: "TY/LY Avg Moving Average Cost Variance %"
        group_label: "Moving Average Cost"
        description: "Percentage Increase/Decrease of Average Moving Average Cost (MVAC) of filled drug. MVAC Calculation Used: (Avg Moving Average Cost - LY Avg Moving Average Cost)/LY Avg Moving Average Cost."
        type: number
        sql: CAST((${avg_moving_average_cost} - ${avg_moving_average_cost_ly}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_moving_average_cost_ly}),0) ;;
        value_format: "00.00%"
        html: {% if value < 0 %}
                 <font color="red">{{ rendered_value }}
               {% else %}
                 <font color="grey">{{ rendered_value }}
               {% endif %}
               ;;
      }

      measure: sum_moving_average_cost_ty {
        label: "Moving Average Cost"
        group_label: "Moving Average Cost"
        type: sum
        description: "Represents the total Moving Average Cost (MVAC), for this year, of the filled drug used on the prescription transaction record"
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly {
        label: "LY Moving Average Cost"
        group_label: "Moving Average Cost"
        type: sum
        description: "Represents the total Moving Average Cost (MVAC), for last year, of the filled drug used on the prescription transaction record"
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_wk {
        label: "Moving Average Cost - Complete Week"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the complete week, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_wk {
        label: "LY Moving Average Cost - Complete Week"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the complete week, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_wtd {
        label: "Moving Average Cost - WTD"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the week to date, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_wtd {
        label: "LY Moving Average Cost - WTD"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the week to date, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_mnth {
        label: "Moving Average Cost - Complete Month"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the complete month, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_mnth {
        label: "LY Moving Average Cost - Complete Month"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the complete month, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_mtd {
        label: "Moving Average Cost - MTD"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the month to date, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_mtd {
        label: "LY Moving Average Cost - MTD"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the month to date, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_qtr {
        label: "Moving Average Cost - Complete Quarter"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the complete quarter, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_qtr {
        label: "LY Moving Average Cost - Complete Quarter"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the complete quarter, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_qtd {
        label: "Moving Average Cost - QTD"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the quarter to date, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_qtd {
        label: "LY Moving Average Cost - QTD"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the quarter to date, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_ytd {
        label: "Moving Average Cost - YTD"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the year to date, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_ytd {
        label: "LY Moving Average Cost - YTD"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the year to date, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_rolling_13_week {
        label: "Moving Average Cost - ROLLING 13 WEEK"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for a rolling 13 weeks, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_rolling_13_week {
        label: "LY Moving Average Cost - ROLLING 13 WEEK"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for a rolling 13 weeks, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ty_ttm {
        label: "Moving Average Cost - TTM"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the Trailing Tweleve Months, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_ly_ttm {
        label: "LY Moving Average Cost - TTM"
        group_label: "Moving Average Cost"
        description: "Represents the total Moving Average Cost (MVAC) for the Trailing Tweleve Months, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_gross_margin_mvac {
        label: "Gross Margin (MVAC)"
        group_label: "Gross Margin"
        description: "Gross Margin (MVAC) of prescription. MVAC Calculation Used: Price of the Prescription - Moving Average Cost"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${gross_margin_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_gross_margin_ly_mvac {
        label: "LY Gross Margin (MVAC)"
        group_label: "Gross Margin"
        description: "Gross Margin (MVAC) of prescription, for last year. MVAC Calculation Used: Price of the Prescription - Moving Average Cost"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${gross_margin_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_gross_margin_variance_dollar_mvac {
        label: "TY/LY Gross Margin Variance $ (MVAC)"
        group_label: "Gross Margin"
        description: "Dollar Increase/Decrease of total Gross Margin (MVAC) of prescription. MVAC Calculation Used: (Gross Margin - LY Gross Margin)."
        type: number
        sql: ${sum_gross_margin_mvac} - ${sum_gross_margin_ly_mvac} ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_gross_margin_variance_pct_mvac {
        label: "TY/LY Gross Margin Variance % (MVAC)"
        group_label: "Gross Margin"
        description: "Percentage Increase/Decrease of total Gross Margin (MVAC) of prescription. MVAC Calculation Used: (Gross Margin - LY Gross Margin)/LY Gross Margin."
        type: number
        sql: CAST((${sum_gross_margin_mvac} - ${sum_gross_margin_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_gross_margin_ly_mvac}),0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_gross_margin_after_sold_mvac {
        label: "Gross Margin After Sold (MVAC)"
        group_label: "Gross Margin"
        description: "Gross Margin (MVAC) of prescription after sold. MVAC Calculation Used: Price of the Prescription - Moving Average Cost"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${gross_margin_after_sold_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_gross_margin_after_sold_ly_mvac {
        label: "LY Gross Margin After Sold (MVAC)"
        group_label: "Gross Margin"
        description: "Gross Margin (MVAC) of prescription after sold, for last year. MVAC Calculation Used: Price of the Prescription - Moving Average Cost"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${gross_margin_after_sold_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: avg_gross_margin_mvac {
        label: "Avg Gross Margin (MVAC)"
        group_label: "Gross Margin"
        description: "Average Gross Margin (MVAC) of prescription. MVAC Calculation Used: Gross Margin/Scripts"
        type: number
        sql: ${sum_gross_margin_mvac}/NULLIF(${count},0) ;;
        value_format: "$#,##0.00;($#,##0.00)"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
      }

      measure: avg_gross_margin_ly_mvac {
        label: "LY Avg Gross Margin (MVAC)"
        group_label: "Gross Margin"
        description: "Average Gross Margin (MVAC) of prescription, for Last Year based on the period selected. MVAC Calculation Used: MVAC Calculation Used: LY Gross Margin/LY Scripts"
        type: number
        sql: ${sum_gross_margin_ly_mvac}/NULLIF(${count_ly},0) ;;
        value_format: "$#,##0.00;($#,##0.00)"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
      }

      measure: avg_gross_margin_variance_mvac {
        label: "TY/LY Avg Gross Margin Variance $ (MVAC)"
        group_label: "Gross Margin"
        description: "Dollar Increase/Decrease of Average Gross Margin (MVAC) of prescription compared to the last year. MVAC Calculation Used: Avg Gross Margin – LY Avg Gross Margin"
        type: number
        sql: ${avg_gross_margin_mvac} - ${avg_gross_margin_ly_mvac}  ;;
        value_format: "$#,##0.00;($#,##0.00)"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
      }

      measure: avg_gross_margin_variance_pct_mvac {
        label: "TY/LY Avg Gross Margin Variance % (MVAC)"
        group_label: "Gross Margin"
        description: "Percentage Increase/Decrease of Average Gross Margin (MVAC) of prescription compared to the last year. MVAC Calculation Used: (Avg Gross Margin – LY Avg Gross Margin)/ LY Avg Gross Margin"
        type: number
        sql: CAST((${avg_gross_margin_mvac} - ${avg_gross_margin_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_gross_margin_ly_mvac}),0) ;;
        value_format: "00.00%"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
      }

      measure: sum_gross_margin_pct_mvac {
        label: "Gross Margin % (MVAC)"
        group_label: "Gross Margin"
        description: "Gross Margin % (MVAC) of prescription. MVAC Calculation Used: (Price of the Prescription - Moving Average Cost)/Price of the Prescription"
        type: number
        sql: ${sum_gross_margin_mvac}/NULLIF(${sum_price},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_gross_margin_pct_ly_mvac {
        label: "LY Gross Margin % (MVAC)"
        group_label: "Gross Margin"
        description: "Gross Margin % (MVAC) of prescription, for last year. MVAC Calculation Used: (Price of the Prescription - Moving Average Cost)/Price of the Prescription"
        type: number
        sql: ${sum_gross_margin_ly_mvac}/NULLIF(${sum_price_ly},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      dimension: net_gross_margin_mvac {
        label: "Net Margin $ (MVAC)"
        hidden:  yes #used in templated filter
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost"
        type: number
        sql: ${net_sales} -  ${moving_average_cost} ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      filter: net_gross_margin_filter_mvac {
        label: "Net Margin $ (MVAC) \"Filter Only\""
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost"
        type: number
        sql: {% condition net_gross_margin_filter_mvac %} ${net_gross_margin_mvac} {% endcondition %} ;;
      }

      measure: sum_net_gross_margin_mvac {
        label: "Net Margin $ (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_gross_margin_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_cash_net_gross_margin_mvac {
        label: "Cash Net Margin $ (MVAC)"
        group_label: "Net Margin $"
        description: "Cash Net Margin (MVAC) of prescription, based on Net Cash Sales. MVAC Calculation Used: Net Cash Sales - Moving Average Cost."
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${net_gross_margin_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_tp_net_gross_margin_mvac {
        label: "T/P Net Margin $ (MVAC)"
        group_label: "Net Margin $"
        description: "T/P Net Margin (MVAC) of prescription, based on Net T/P Sales. MVAC Calculation Used: Net T/P Sales - Moving Average Cost."
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${net_gross_margin_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_mvac {
        label: "LY Net Margin $ (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_cash_net_gross_margin_ly_mvac {
        label: "LY Cash Net Margin $ (MVAC)"
        group_label: "Net Margin $"
        description: "Cash Net Margin (MVAC) of prescription, based on Net Cash Sales for Last Year. MVAC Calculation Used: LY Net Cash Sales - LY Moving Average Cost."
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${net_gross_margin_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_tp_net_gross_margin_ly_mvac {
        label: "LY T/P Net Margin $ (MVAC)"
        group_label: "Net Margin $"
        description: "T/P Net Margin (MVAC) of prescription, based on Net T/P Sales for Last Year. MVAC Calculation Used: LY Net T/P Sales - LY Moving Average Cost."
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${net_gross_margin_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_variance_dollar_mvac {
        label: "TY/LY Net Margin $ Variance (MVAC)"
        group_label: "Net Margin $"
        description: "Dollar Increase/Decrease of Total Net Margin (MVAC) of prescription. MVAC Calculation Used: Total Net Margin of prescription compared to the last year"
        type: number
        sql: ${sum_net_gross_margin_mvac} - ${sum_net_gross_margin_ly_mvac} ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_variance_mvac {
        label: "TY/LY Net Margin $ Variance % (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease of Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost compared to the last year"
        type: number
        sql: CAST((${sum_net_gross_margin_mvac} - ${sum_net_gross_margin_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_gross_margin_ly_mvac}),0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_cash_net_gross_margin_variance_dollar_mvac {
        label: "TY/LY Cash Net Margin $ Variance (MVAC)"
        group_label: "Net Margin $"
        description: "Dollar Increase/Decrease of Total Cash Net Margin (MVAC) of prescription, based on Net Cash Sales. MVAC Calculation Used: Cash Net Margin $ - LY Cash Net Margin $."
        type: number
        sql: ${sum_cash_net_gross_margin_mvac} - ${sum_cash_net_gross_margin_ly_mvac} ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_cash_net_gross_margin_variance_mvac {
        label: "TY/LY Cash Net Margin $ Variance % (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease of Cash Net Margin (MVAC) of prescription, based on Net Cash Sales. MVAC Calculation Used: MVAC Calculation Used: (Cash Net Margin $ - LY Cash Net Margin $)/ LY Cash Net Margin $."
        type: number
        sql: CAST((${sum_cash_net_gross_margin_mvac} - ${sum_cash_net_gross_margin_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_cash_net_gross_margin_ly_mvac}),0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_tp_net_gross_margin_variance_dollar_mvac {
        label: "TY/LY T/P Net Margin $ Variance (MVAC)"
        group_label: "Net Margin $"
        description: "Dollar Increase/Decrease of Total Net T/P Margin (MVAC) of prescription, based on Net T/P Sales. MVAC Calculation Used: T/P Net Margin $ - LY T/P Net Margin $."
        type: number
        sql: ${sum_tp_net_gross_margin_mvac} - ${sum_tp_net_gross_margin_ly_mvac} ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_tp_net_gross_margin_variance_mvac {
        label: "TY/LY T/P Net Margin $ Variance % (MVAC)"
        group_label: "Net Margin $"
        description: " Percentage Increase/Decrease of Net T/P Margin (MVAC) of prescription, based on Net T/P Sales. MVAC Calculation Used: (T/P Net Margin $ - LY T/P Net Margin $) / LY TP Net Margin $."
        type: number
        sql: CAST((${sum_tp_net_gross_margin_mvac} - ${sum_tp_net_gross_margin_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_tp_net_gross_margin_ly_mvac}),0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_wk_mvac {
        label: "Net Margin $ - Complete Week (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for complete Week"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_wk_mvac {
        label: "LY Net Margin $ - Complete Week (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's complete week based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_wk_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - Complete Week (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in complete week compared to the last year"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_wk_mvac} - ${sum_net_gross_margin_ly_wk_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_wk_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_wtd_mvac {
        label: "Net Margin $ - WTD (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for WTD"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_wtd_mvac {
        label: "LY Net Margin $ - WTD (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's WTD based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_wtd_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - WTD (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in WTD compared to the last year"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_wtd_mvac} - ${sum_net_gross_margin_ly_wtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_wtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_mnth_mvac {
        label: "Net Margin $ - Complete Month (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for complete month based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_mnth_mvac {
        label: "LY Net Margin $ - Complete Month (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's complete month based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_mnth_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - Complete Month (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in complete month compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_mnth_mvac} - ${sum_net_gross_margin_ly_mnth_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_mnth_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_mtd_mvac {
        label: "Net Margin $ - MTD (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for MTD based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_mtd_mvac {
        label: "LY Net Margin $- MTD (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's MTD based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_mtd_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - MTD (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in MTD compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_mtd_mvac} - ${sum_net_gross_margin_ly_mtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_mtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_qtr_mvac {
        label: "Net Margin $ - Complete Quarter (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for complete quarter based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_qtr_mvac {
        label: "LY Net Margin $ - Complete Quarter (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's complete quarter based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_qtr_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - Complete Quarter (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in complete quarter compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_qtr_mvac} - ${sum_net_gross_margin_ly_qtr_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_qtr_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_qtd_mvac {
        label: "Net Margin $ - QTD (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for QTD based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_qtd_mvac {
        label: "LY Net Margin $ - QTD (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's QTD based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_qtd_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - QTD (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in QTD compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_qtd_mvac} - ${sum_net_gross_margin_ly_qtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_qtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_ytd_mvac {
        label: "Net Margin $ - YTD (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for YTD based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_ytd_mvac {
        label: "LY Net Margin $ - YTD (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's YTD based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ytd_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - YTD (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in YTD compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_ytd_mvac} - ${sum_net_gross_margin_ly_ytd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_ytd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_rolling_13_week_mvac {
        label: "Net Margin $ - ROLLING 13 WEEK (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for ROLLING 13 WEEK based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_rolling_13_week_mvac {
        label: "LY Net Margin $ - ROLLING 13 WEEK (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's ROLLING 13 WEEK based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_rolling_13_week_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - ROLLING 13 WEEK (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease of Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in ROLLING 13 WEEK compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_rolling_13_week_mvac} - ${sum_net_gross_margin_ly_rolling_13_week_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_rolling_13_week_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ty_ttm_mvac {
        label: "Net Margin $ - TTM (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for TTM based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ly_ttm_mvac {
        label: "LY Net Margin $ - TTM (MVAC)"
        group_label: "Net Margin $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost for Last Year's TTM based on the period selected"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_ttm_variance_mvac {
        label: "TY/LY Net Margin $ Variance % - TTM (MVAC)"
        group_label: "Net Margin $"
        description: "Percentage Increase/Decrease of Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in TTM compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_ty_ttm_mvac} - ${sum_net_gross_margin_ly_ttm_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_ttm_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: avg_net_gross_margin_mvac {
        label: "Avg Net Margin $ (MVAC)"
        group_label: "Average Net Margin"
        description: "Average Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Margin/Total no. of scripts."
        type: number
        sql: COALESCE(${sum_net_gross_margin_mvac}/NULLIF(${count},0),0) ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
        html: {% if value < 0 %}
             <font color="red">{{ rendered_value }}
             {% else %}
             <font color="grey">{{ rendered_value }}
             {% endif %}
             ;;
      }

      measure: avg_net_gross_margin_ly_mvac {
        label: "LY Avg Net Margin $ (MVAC)"
        group_label: "Average Net Margin"
        description: "Net Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Margin/Total no. of scripts for Last Year based on the period selected"
        type: number
        sql: COALESCE(${sum_net_gross_margin_ly_mvac}/NULLIF(${count_ly},0),0) ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
        html: {% if value < 0 %}
           <font color="red">{{ rendered_value }}
           {% else %}
           <font color="grey">{{ rendered_value }}
           {% endif %}
           ;;
      }

      measure: avg_net_gross_margin_variance_dollar_mvac {
        label: "TY/LY Avg Net Margin $ Variance $ (MVAC)"
        group_label: "Average Net Margin"
        description: "Dollar Increase/Decrease of Total Net Margin (MVAC) of prescription. MVAC Calculation Used: (Avg Net Margin - LY Avg Net Margin)."
        type: number
        sql: ${avg_net_gross_margin_mvac} - ${avg_net_gross_margin_ly_mvac} ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
        html: {% if value < 0 %}
           <font color="red">{{ rendered_value }}
           {% else %}
           <font color="grey">{{ rendered_value }}
           {% endif %}
           ;;
      }

      measure: avg_net_gross_margin_variance_mvac {
        label: "TY/LY Avg Net Margin $ Variance % (MVAC)"
        group_label: "Average Net Margin"
        description: "Percentage Increase/Decrease of Net Margin (MVAC) of prescription. MVAC Calculation Used: (Avg Net Margin - LY Avg Net Margin)/LY Avg Net Margin."
        type: number
        sql: CAST((${avg_net_gross_margin_mvac} - ${avg_net_gross_margin_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${avg_net_gross_margin_ly_mvac}),0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
        html: {% if value < 0 %}
           <font color="red">{{ rendered_value }}
           {% else %}
           <font color="grey">{{ rendered_value }}
           {% endif %}
           ;;
      }

      measure: sum_net_gross_margin_after_sold_mvac {
        label: "RNAC $ (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_mvac {
        label: "LY RNAC $ (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_variance_mvac {
        label: "TY/LY RNAC $ Variance % (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost compared to the last year"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_mvac} - ${sum_net_gross_margin_after_sold_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_gross_margin_after_sold_ly_mvac}),0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_wk_mvac {
        label: "RNAC $ - Complete Week (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for complete Week"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_wk_mvac {
        label: "LY RNAC $ - Complete Week (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's complete week based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_wk_variance_mvac {
        label: "TY/LY RNAC $ Variance % - Complete Week (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in complete week compared to the last year"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_wk_mvac} - ${sum_net_gross_margin_after_sold_ly_wk_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_wk_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_wtd_mvac {
        label: "RNAC $ - WTD (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for WTD"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_wtd_mvac {
        label: "LY RNAC $ - WTD (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's WTD based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ( ${net_sales_after_sold} - ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_wtd_variance_mvac {
        label: "TY/LY RNAC $ Variance % - WTD (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in WTD compared to the last year"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_wtd_mvac} - ${sum_net_gross_margin_after_sold_ly_wtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_wtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_mnth_mvac {
        label: "RNAC $ - Complete Month (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for complete month based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_mnth_mvac {
        label: "LY RNAC $ - Complete Month (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's complete month based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_mnth_variance_mvac {
        label: "TY/LY RNAC $ Variance % - Complete Month (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in complete month compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_mnth_mvac} - ${sum_net_gross_margin_after_sold_ly_mnth_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_mnth_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_mtd_mvac {
        label: "RNAC $ - MTD (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for MTD based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_mtd_mvac {
        label: "LY RNAC $ - MTD (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's MTD based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_mtd_variance_mvac {
        label: "TY/LY RNAC $ Variance % - MTD (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in MTD compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_mtd_mvac} - ${sum_net_gross_margin_after_sold_ly_mtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_mtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_qtr_mvac {
        label: "RNAC $ - Complete Quarter (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for complete quarter based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_qtr_mvac {
        label: "LY RNAC $ - Complete Quarter (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's complete quarter based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_qtr_variance_mvac {
        label: "TY/LY RNAC $ Variance % - Complete Quarter (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in complete quarter compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_qtr_mvac} - ${sum_net_gross_margin_after_sold_ly_qtr_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_qtr_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_qtd_mvac {
        label: "RNAC $ - QTD (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for QTD based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_qtd_mvac {
        label: "LY RNAC $ - QTD (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's QTD based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_qtd_variance_mvac {
        label: "TY/LY RNAC $ Variance % - QTD (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in QTD compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_qtd_mvac} - ${sum_net_gross_margin_after_sold_ly_qtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_qtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_ytd_mvac {
        label: "RNAC $ - YTD (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for YTD based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_ytd_mvac {
        label: "LY RNAC $ - YTD (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's YTD based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ytd_variance_mvac {
        label: "TY/LY RNAC $ Variance % - YTD (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in YTD compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_ytd_mvac} - ${sum_net_gross_margin_after_sold_ly_ytd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_ytd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_rolling_13_week_mvac {
        label: "RNAC $ - ROLLING 13 WEEK (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for ROLLING 13 WEEK based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_rolling_13_week_mvac {
        label: "LY RNAC $ - ROLLING 13 WEEK (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's ROLLING 13 WEEK based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_rolling_13_week_variance_mvac {
        label: "TY/LY RNAC $ Variance % - ROLLING 13 WEEK (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease of Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in ROLLING 13 WEEK compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_rolling_13_week_mvac} - ${sum_net_gross_margin_after_sold_ly_rolling_13_week_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_rolling_13_week_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ty_ttm_mvac {
        label: "RNAC $ - TTM (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for TTM based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ly_ttm_mvac {
        label: "LY RNAC $ - TTM (MVAC)"
        group_label: "RNAC $"
        description: "Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales After Sold - Moving Average Cost After Sold for Last Year's TTM based on the period selected"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ( ${net_sales_after_sold} -  ${moving_average_cost_after_sold} ) END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_ttm_variance_mvac {
        label: "TY/LY RNAC $ Variance % - TTM (MVAC)"
        group_label: "RNAC $"
        description: "Percentage Increase/Decrease of Net Margin (MVAC) of prescription, based on Net Sales After Sold. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost in TTM compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_ty_ttm_mvac} - ${sum_net_gross_margin_after_sold_ly_ttm_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_ly_ttm_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: avg_net_gross_margin_after_sold_mvac {
        label: "Avg Net Margin After Sold (MVAC)"
        group_label: "Other Measures"
        hidden: yes
        description: "Net Margin (MVAC) of prescription, based on Net Sales after sold. MVAC Calculation Used: (Net Sales After Sold - Moving Average Cost After Sold)/Total no. of scripts"
        type: number
        sql: ${sum_net_gross_margin_after_sold_mvac}/NULLIF(${count},0) ;;
        value_format: "$#,##0.00;($#,##0.00)"
        html: {% if value < 0 %}
                   <font color="red">{{ rendered_value }}
                 {% else %}
                   <font color="grey">{{ rendered_value }}
                 {% endif %}
                 ;;
      }

      measure: sum_net_gross_margin_pct_mvac {
        label: "Net Margin % (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription )"
        type: number
        sql: CAST((${sum_net_sales} -  ${sum_moving_average_cost_ty}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_mvac {
        label: "LY Net Margin % (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly} -  ${sum_moving_average_cost_ly}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_cash_net_gross_margin_pct_mvac {
        label: "Cash Net Margin % (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage of the Cash Net Margin $ (MVAC) in comparison to the Net Margin $. MVAC Calculation Used: Cash Net Margin $/Net Margin $."
        type: number
        sql: CAST((${sum_cash_net_gross_margin_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_cash_net_gross_margin_pct_ly_mvac {
        label: "LY Cash Net Margin % (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage of the Cash Net Margin $ (MVAC) in comparison to the Net Margin $, for Last Year. MVAC Calculation Used: LY Cash Net Margin $/LY Net Margin."
        type: number
        sql: CAST((${sum_cash_net_gross_margin_ly_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_tp_net_gross_margin_pct_mvac {
        label: "T/P Net Margin % (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage of the T/P Net Margin $ (MVAC) in comparison to the Net Margin $. MVAC Calculation Used: T/P Net Margin $/Net Margin $."
        type: number
        sql: CAST((${sum_tp_net_gross_margin_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_tp_net_gross_margin_pct_ly_mvac {
        label: "LY T/P Net Margin % (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage of the T/P Net Margin $ (MVAC) in comparison to the Net Margin $, for Last Year. MVAC Calculation Used: LY T/P Net Margin $/LY Net Margin."
        type: number
        sql: CAST((${sum_tp_net_gross_margin_ly_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_ly_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_variance_number_mvac {
        label: "TY/LY Net Margin % Variance (MVAC)"
        group_label: "Net Margin %"
        description: "Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used:( (Net Sales of the Prescription - Moving Average Cost (MVAC))/Net Sales of the Prescription ) compared to the last year"
        type: number
        sql: ${sum_net_gross_margin_pct_mvac} - ${sum_net_gross_margin_pct_ly_mvac};;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_variance_mvac {
        label: "TY/LY Net Margin % Variance % (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used:( (Net Sales of the Prescription - Moving Average Cost (MVAC))/Net Sales of the Prescription ) compared to the last year"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_mvac} - ${sum_net_gross_margin_pct_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_gross_margin_pct_ly_mvac}),0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_wk_mvac {
        label: "Net Margin % - Complete Week (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for complete Week based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ty_wk} -  ${sum_moving_average_cost_ty_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_wk},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_wk_mvac {
        label: "LY Net Margin % - Complete Week (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's complete week based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_wk} -  ${sum_moving_average_cost_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_wk},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_wk_variance_mvac {
        label: "TY/LY Net Margin % Variance % - Complete Week (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) compared to the last year's complete week"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_wk_mvac} - ${sum_net_gross_margin_pct_ly_wk_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_wk_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_wtd_mvac {
        label: "Net Margin % - WTD (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription )"
        type: number
        sql: CAST((${sum_net_sales_ty_wtd} -  ${sum_moving_average_cost_ty_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_wtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_wtd_mvac {
        label: "LY Net Margin % - WTD (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's WTD based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_wtd} -  ${sum_moving_average_cost_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_wtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_wtd_variance_mvac {
        label: "TY/LY Net Margin % Variance % - WTD (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in WTD compared to the last year"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_wtd_mvac} - ${sum_net_gross_margin_pct_ly_wtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_wtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_mnth_mvac {
        label: "Net Margin % - Complete Month (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for complete month based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ty_mnth} -  ${sum_moving_average_cost_ty_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_mnth},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_mnth_mvac {
        label: "LY Net Margin % - Complete Month (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's complete month based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_mnth} -  ${sum_moving_average_cost_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_mnth},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_mnth_variance_mvac {
        label: "TY/LY Net Margin % Variance % - Complete Month (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in complete month compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_mnth_mvac} - ${sum_net_gross_margin_pct_ly_mnth_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_mnth_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_mtd_mvac {
        label: "Net Margin % - MTD (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for MTD based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ty_mtd} -  ${sum_moving_average_cost_ty_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_mtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_mtd_mvac {
        label: "LY Net Margin % - MTD (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's MTD based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_mtd} -  ${sum_moving_average_cost_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_mtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_mtd_variance_mvac {
        label: "TY/LY Net Margin % Variance % - MTD (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in MTD compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_mtd_mvac} - ${sum_net_gross_margin_pct_ly_mtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_mtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_qtr_mvac {
        label: "Net Margin % - Complete Quarter (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for complete quarter based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ty_qtr} -  ${sum_moving_average_cost_ty_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_qtr},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_qtr_mvac {
        label: "LY Net Margin % - Complete Quarter (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's complete quarter based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_qtr} -  ${sum_moving_average_cost_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_qtr},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_qtr_variance_mvac {
        label: "TY/LY Net Margin % Variance % - Complete Quarter (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in complete quarter compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_qtr_mvac} - ${sum_net_gross_margin_pct_ly_qtr_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_qtr_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_qtd_mvac {
        label: "Net Margin % - QTD (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for QTD based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ty_qtd} -  ${sum_moving_average_cost_ty_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_qtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_qtd_mvac {
        label: "LY Net Margin % - QTD (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's QTD based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_qtd} -  ${sum_moving_average_cost_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_qtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_qtd_variance_mvac {
        label: "TY/LY Net Margin % Variance % - QTD (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in QTD compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_qtd_mvac} - ${sum_net_gross_margin_pct_ly_qtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_qtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_ytd_mvac {
        label: "Net Margin % - YTD (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for YTD based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ty_ytd} -  ${sum_moving_average_cost_ty_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_ytd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_ytd_mvac {
        label: "LY Net Margin % - YTD (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's YTD based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_ytd} -  ${sum_moving_average_cost_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_ytd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ytd_variance_mvac {
        label: "TY/LY Net Margin % Variance % - YTD (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in YTD compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_ytd_mvac} - ${sum_net_gross_margin_pct_ly_ytd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_ytd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_rolling_13_week_mvac {
        label: "Net Margin % - ROLLING 13 WEEK (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for ROLLING 13 WEEK based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ty_rolling_13_week} -  ${sum_moving_average_cost_ty_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_rolling_13_week},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_rolling_13_week_mvac {
        label: "LY Net Margin % - ROLLING 13 WEEK (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's ROLLING 13 WEEK based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_rolling_13_week} -  ${sum_moving_average_cost_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_rolling_13_week},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_rolling_13_week_variance_mvac {
        label: "TY/LY Net Margin % Variance % - ROLLING 13 WEEK (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in ROLLING 13 WEEK compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_rolling_13_week_mvac} - ${sum_net_gross_margin_pct_ly_rolling_13_week_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_rolling_13_week_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ty_ttm_mvac {
        label: "Net Margin % - TTM (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for TTM based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ty_ttm} -  ${sum_moving_average_cost_ty_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ty_ttm},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ly_ttm_mvac {
        label: "LY Net Margin % - TTM (MVAC)"
        group_label: "Net Margin %"
        description: "Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's TTM based on the period selected"
        type: number
        sql: CAST((${sum_net_sales_ly_ttm} -  ${sum_moving_average_cost_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_ly_ttm},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_pct_ttm_variance_mvac {
        label: "TY/LY Net Margin % Variance % - TTM (MVAC)"
        group_label: "Net Margin %"
        description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in TTM compared to the last year based on the period selected"
        type: number
        sql: CAST((${sum_net_gross_margin_pct_ty_ttm_mvac} - ${sum_net_gross_margin_pct_ly_ttm_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_pct_ly_ttm_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty {
        label: "Moving Average Cost After Sold"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly {
        label: "LY Moving Average Cost After Sold"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_wk {
        label: "Moving Average Cost After Sold - Complete Week"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the complete week, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_wk {
        label: "LY Moving Average Cost After Sold - Complete Week"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the complete week, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wk_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_wtd {
        label: "Moving Average Cost After Sold - WTD"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the week to date, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_wtd {
        label: "LY Moving Average Cost After Sold - WTD"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the week to date, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.wtd_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_mnth {
        label: "Moving Average Cost After Sold - Complete Month"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the complete month, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_mnth {
        label: "LY Moving Average Cost After Sold - Complete Month"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the complete month, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mnth_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_mtd {
        label: "Moving Average Cost After Sold - MTD"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the month to date, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_mtd {
        label: "LY Moving Average Cost After Sold - MTD"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the month to date, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.mtd_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_qtr {
        label: "Moving Average Cost After Sold - Complete Quarter"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the complete quarter, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_qtr {
        label: "LY Moving Average Cost After Sold - Complete Quarter"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the complete quarter, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtr_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_qtd {
        label: "Moving Average Cost After Sold - QTD"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the quarter to date, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_qtd {
        label: "LY Moving Average Cost After Sold - QTD"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the quarter to date, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.qtd_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_ytd {
        label: "Moving Average Cost After Sold - YTD"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the year to date, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_ytd {
        label: "LY Moving Average Cost After Sold - YTD"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the year to date, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ytd_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_rolling_13_week {
        label: "Moving Average Cost After Sold - ROLLING 13 WEEK"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for a rolling 13 weeks, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_rolling_13_week {
        label: "LY Moving Average Cost After Sold - ROLLING 13 WEEK"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for a rolling 13 weeks, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.rolling_13_week_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ty_ttm {
        label: "Moving Average Cost After Sold - TTM"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the Trailing Twelve Months, for this year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_moving_average_cost_after_sold_ly_ttm {
        label: "LY Moving Average Cost After Sold - TTM"
        group_label: "Moving Average Cost After Sold"
        description: "Represents the total Moving Average Cost (MVAC) after sold for the Trailing Twelve Months, for last year, of the filled drug used on the prescription transaction record"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' AND ${report_calendar_global.ttm_flag} = 'Y' THEN ${moving_average_cost_after_sold} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_mvac {
        label: "RNAC % (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription )"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold} -  ${sum_moving_average_cost_after_sold_ty}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_mvac {
        label: "LY RNAC % (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly} -  ${sum_moving_average_cost_after_sold_ly}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_variance_mvac {
        label: "TY/LY RNAC % Variance % (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) compared to the last year"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_mvac}) AS DECIMAL(17,4))/NULLIF(ABS(${sum_net_gross_margin_after_sold_pct_ly_mvac}),0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_wk_mvac {
        label: "RNAC % - Complete Week (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for complete Week based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_wk} -  ${sum_moving_average_cost_after_sold_ty_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_wk},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_wk_mvac {
        label: "LY RNAC % - Complete Week (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's complete week based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_wk} -  ${sum_moving_average_cost_after_sold_ly_wk}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_wk},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_wk_variance_mvac {
        label: "TY/LY RNAC % Variance % - Complete Week (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) compared to the last year's complete week "
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_wk_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_wk_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_wk_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_wtd_mvac {
        label: "RNAC % - WTD (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for WTD based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_wtd} -  ${sum_moving_average_cost_after_sold_ty_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_wtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_wtd_mvac {
        label: "LY RNAC % - WTD (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's WTD based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_wtd} -  ${sum_moving_average_cost_after_sold_ly_wtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_wtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_wtd_variance_mvac {
        label: "TY/LY RNAC % Variance % - WTD (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in WTD compared to the last year"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_wtd_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_wtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_wtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_mnth_mvac {
        label: "RNAC % - Complete Month (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for complete month based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_mnth} -  ${sum_moving_average_cost_after_sold_ty_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_mnth},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_mnth_mvac {
        label: "LY RNAC % - Complete Month (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's complete month based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_mnth} -  ${sum_moving_average_cost_after_sold_ly_mnth}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_mnth},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_mnth_variance_mvac {
        label: "TY/LY RNAC % Variance % - Complete Month (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in complete month compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_mnth_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_mnth_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_mnth_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_mtd_mvac {
        label: "RNAC % - MTD (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for MTD based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_mtd} -  ${sum_moving_average_cost_after_sold_ty_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_mtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_mtd_mvac {
        label: "LY RNAC % - MTD (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's MTD based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_mtd} -  ${sum_moving_average_cost_after_sold_ly_mtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_mtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_mtd_variance_mvac {
        label: "TY/LY RNAC % Variance % - MTD (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in MTD compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_mtd_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_mtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_mtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_qtr_mvac {
        label: "RNAC % - Complete Quarter (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for complete quarter based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_qtr} -  ${sum_moving_average_cost_after_sold_ty_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_qtr},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_qtr_mvac {
        label: "LY RNAC % - Complete Quarter (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's complete quarter based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_qtr} -  ${sum_moving_average_cost_after_sold_ly_qtr}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_qtr},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_qtr_variance_mvac {
        label: "TY/LY RNAC % Variance % - Complete Quarter (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in complete quarter compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_qtr_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_qtr_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_qtr_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_qtd_mvac {
        label: "RNAC % - QTD (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for QTD based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_qtd} -  ${sum_moving_average_cost_after_sold_ty_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_qtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_qtd_mvac {
        label: "LY RNAC % - QTD (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's QTD based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_qtd} -  ${sum_moving_average_cost_after_sold_ly_qtd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_qtd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_qtd_variance_mvac {
        label: "TY/LY RNAC % Variance % - QTD (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in QTD compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_qtd_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_qtd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_qtd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_ytd_mvac {
        label: "RNAC % - YTD (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for YTD based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_ytd} -  ${sum_moving_average_cost_after_sold_ty_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_ytd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_ytd_mvac {
        label: "LY RNAC % - YTD (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's YTD based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_ytd} -  ${sum_moving_average_cost_after_sold_ly_ytd}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_ytd},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ytd_variance_mvac {
        label: "TY/LY RNAC % Variance % - YTD (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in YTD compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_ytd_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_ytd_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_ytd_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_rolling_13_week_mvac {
        label: "RNAC % - ROLLING 13 WEEK (MVAC)"
        group_label: "RNAC %"
        description: "Net % MArgin of prescription, based on Net Sales after sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription )  for ROLLING 13 WEEK based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_rolling_13_week} -  ${sum_moving_average_cost_after_sold_ty_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_rolling_13_week},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_rolling_13_week_mvac {
        label: "LY RNAC % - ROLLING 13 WEEK (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's ROLLING 13 WEEK based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_rolling_13_week} -  ${sum_moving_average_cost_after_sold_ly_rolling_13_week}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_rolling_13_week},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_rolling_13_week_variance_mvac {
        label: "TY/LY RNAC % Variance % - ROLLING 13 WEEK (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in ROLLING 13 WEEK compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_rolling_13_week_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_rolling_13_week_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_rolling_13_week_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ty_ttm_mvac {
        label: "RNAC % - TTM (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for TTM based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ty_ttm} -  ${sum_moving_average_cost_after_sold_ty_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ty_ttm},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ly_ttm_mvac {
        label: "LY RNAC % - TTM (MVAC)"
        group_label: "RNAC %"
        description: "Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used: ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) for Last Year's TTM based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_sales_after_sold_ly_ttm} -  ${sum_moving_average_cost_after_sold_ly_ttm}) AS DECIMAL(17,4))/NULLIF(${sum_net_sales_after_sold_ly_ttm},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_after_sold_pct_ttm_variance_mvac {
        label: "TY/LY RNAC % Variance % - TTM (MVAC)"
        group_label: "RNAC %"
        description: "Percentage Increase/Decrease of Net % Margin of prescription, based on Net Sales After Sold. MVAC Calculation Used:  ( (Net Sales of the Prescription - Moving Average Cost)/Net Sales of the Prescription ) in TTM compared to the last year based on the period selected"
        type: number
        hidden: yes
        sql: CAST((${sum_net_gross_margin_after_sold_pct_ty_ttm_mvac} - ${sum_net_gross_margin_after_sold_pct_ly_ttm_mvac}) AS DECIMAL(17,4))/NULLIF(${sum_net_gross_margin_after_sold_pct_ly_ttm_mvac},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_specialty_gross_margin_mvac {
        label: "Net Specialty Margin $ (MVAC)"
        group_label: "Specialty Margin"
        description: "Net Specialty Margin (MVAC) of prescription, based on Net Sales. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' and  ${store_drug.drug_specialty} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_specialty_gross_margin_ly_mvac {
        label: "LY Net Specialty Margin $ (MVAC)"
        group_label: "Specialty Margin"
        description: "Net Specialty Margin (MVAC) of prescription for last year, based on Net Sales and period selected. MVAC Calculation Used: Net Sales of the Prescription - Moving Average Cost"
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'LY' and  ${store_drug.drug_specialty} = 'Y' THEN ${net_sales} -  ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_cash_margin_mvac {
        label: "Cash Margin $ (MVAC)"
        group_label: "Margin $"
        description: "Cash Margin of prescription. MVAC Calculation Used: Cash Price of the Prescription - Moving Average Cost"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'N' THEN ${price} - ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_cash_margin_pct_mvac {
        label: "Cash Gross Margin % (MVAC)"
        group_label: "Other Margin %"
        description: "Cash Margin % of prescription. MVAC Calculation Used: (Cash Price of the Prescription - Moving Average Cost)/Cash Price of the Prescription"
        type: number
        sql: ${sum_cash_margin_mvac}/NULLIF(${sum_price_cash},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_tp_margin_mvac {
        label: "T/P Margin $ (MVAC)"
        group_label: "Margin $"
        description: "Third Party Margin of prescription. MVAC Calculation Used: Third Party Price of the Prescription - Moving Average Cost"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${TABLE}.SALE_TP_BILL = 'Y' THEN ${price} - ${moving_average_cost} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_tp_margin_pct_mvac {
        label: "T/P Gross Margin % (MVAC)"
        group_label: "Other Margin %"
        description: "Third Party Margin % of prescription. MVAC Calculation Used: (Third Party Price of the Prescription - Moving Average Cost)/Third Party Price of the Prescription"
        type: number
        sql: ${sum_tp_margin_mvac}/NULLIF(${sum_price_tp},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_generic_margin_mvac {
        label: "Generic Margin $ (MVAC)"
        group_label: "Margin $"
        description: "Generic Margin of prescription. MVAC Calculation Used: Generic Price of the Prescription - Moving Average Cost. For EPS Stores, by default generic price is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
             THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'G' THEN ${price} - ${moving_average_cost} END
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} = 'Y'
             THEN ${price} - ${moving_average_cost}
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} = 'Y'
             THEN ${price} - ${moving_average_cost}
        END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_generic_margin_pct_mvac {
        label: "Generic Gross Margin % (MVAC)*"
        group_label: "Other Margin %"
        description: "Generic Margin % of prescription. MVAC Calculation Used: (Generic Price of the Prescription - Moving Average Cost)/Generic Price of the Prescription.  For EPS Stores, by default generic price is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: number
        sql: ${sum_generic_margin_mvac}/NULLIF(${sum_price_generic},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_brand_margin_mvac {
        label: "Brand Margin $ (MVAC)"
        group_label: "Margin $"
        description: "Brand Margin of prescription. MVAC Calculation Used: Brand Price of the Prescription - Moving Average Cost"
        type: sum
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
             THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'B' THEN ${price} - ${moving_average_cost} END
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} <> 'Y'
             THEN ${price} - ${moving_average_cost}
             WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} <> 'Y'
             THEN ${price} - ${moving_average_cost}
        END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_brand_margin_pct_mvac {
        label: "Brand Gross Margin % (MVAC)*"
        group_label: "Other Margin %"
        description: "Brand Margin % of prescription. MVAC Calculation Used: (Brand Price of the Prescription - Moving Average Cost)/Brand Price of the Prescription. For EPS Stores, by default brand price is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: number
        sql: ${sum_brand_margin_mvac}/NULLIF(${sum_price_brand},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }



      dimension: net_gross_margin_brand_reference_mvac {
        label: "Brand Net Gross Margin $ (MVAC)"
        description: "Brand Net Margin (MVAC) of prescription, based on brand Net Sales. MVAC Calculation Used: Brand Net Sales of the Prescription - Moving Average Cost. For EPS Stores, by default brand net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: number
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
               THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'B' THEN ${net_sales} - ${moving_average_cost} END
               WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} <> 'Y'
               THEN ${net_sales} - ${moving_average_cost}
               WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} <> 'Y'
               THEN ${net_sales} - ${moving_average_cost}
          END ;;
      }

      measure: sum_net_gross_margin_brand_mvac {
        label: "Brand Net Margin $ (MVAC)*"
        group_label: "Margin $"
        description: "Brand Net Margin (MVAC) of prescription, based on Brand Net Sales. MVAC Calculation Used: Brand Net Sales of the Prescription - Moving Average Cost. For EPS Stores, by default brand net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_gross_margin_brand_reference_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_brand_pct_mvac {
        label: "Brand Net Margin % (MVAC)*"
        group_label: "Other Margin %"
        description: "Brand Net % Margin of prescription, based on Brand Net Sales. MVAC Calculation Used: ( (Brand Net Sales of the Prescription - Moving Average Cost)/Brand Net Sales of the Prescription ). For EPS Stores, by default brand net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: number
        sql: ${sum_net_gross_margin_brand_mvac}/NULLIF(${sum_net_sales_brand},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }


      dimension: net_gross_margin_generic_reference_mvac {
        label: "Generic Net Gross Margin $ (MVAC)"
        description: "Generic Net Margin (MVAC) of prescription, based on Generic Net Sales. MVAC Calculation Used: Generic Net Sales of the Prescription - Moving Average Cost. For EPS Stores, by default generic net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: number
        hidden: yes
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'DRUG DISPENSED' {% endcondition %}
               THEN CASE WHEN ${TABLE}.SALE_DRUG_DISPENSED = 'G' THEN ${net_sales} - ${moving_average_cost} END
               WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 4 AND {% condition drug_brand_generic_measures_classification_filter %} 'MULTI SOURCE' {% endcondition %} AND ${store_drug_multi_source_reference} = 'Y'
               THEN ${net_sales} - ${moving_average_cost}
               WHEN ${report_calendar_global.type} = 'TY' AND ${source_system_id} = 11 AND ${store_drug_multi_source_reference} = 'Y'
               THEN ${net_sales} - ${moving_average_cost}
          END ;;
      }

      measure: sum_net_gross_margin_generic_mvac {
        label: "Generic Net Margin $ (MVAC)*"
        group_label: "Margin $"
        description: "Generic Net Margin (MVAC) of prescription, based on Generic Net Sales. MVAC Calculation Used: Generic Net Sales of the Prescription - Moving Average Cost. For EPS Stores, by default generic net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: sum
        sql: CASE WHEN ${report_calendar_global.type} = 'TY' THEN ${net_gross_margin_generic_reference_mvac} END ;;
        value_format: "$#,##0.00;($#,##0.00)"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      measure: sum_net_gross_margin_generic_pct_mvac {
        label: "Generic Net Margin % (MVAC)*"
        group_label: "Other Margin %"
        description: "Generic Net % Margin of prescription, based on Generic Net Sales. MVAC Calculation Used: ( (Generic Net Sales of the Prescription - Moving Average Cost)/Generic Net Sales of the Prescription ). For EPS Stores, by default generic net sales is calculated based on DRUG DISPENSED (BRAND/GENERIC/COMPOUND). Users can choose MULTI SOURCE or DRUG DISPENSED for EPS Stores using Drug Brand/Generic Measures Source filter."
        type: number
        sql: ${sum_net_gross_margin_generic_mvac}/NULLIF(${sum_net_sales_generic},0) ;;
        value_format: "00.00%"
        drill_fields: [sales_transaction_level_drill_path*]
      }

      # moving_average_cost_per_unit is already explosed above. so this one is not needed.
      #dimension: drug_mvac_per_unit_amount_store {
      #  label: "Drug Moving Average Cost Per Unit Amount At Fill - Pharmacy"
      #  description: "Represents the Moving Average Cost (MVAC) of the Pharmacy Drug Per Unit Amount at the time of fill. MVAC Calculation Used: Pharmacy Drug Moving Average Cost Amount/Decimal Pack Size. This field is EPS only!!!"
      #  type: number
      #  sql: ${moving_average_cost_per_unit} ;;
      #  value_format: "$#,##0.0000000;($#,##0.0000000)"
      #}

      measure: sum_rx_tx_mvac_amount_at_fill_store {
        label: "Total Moving Average Cost Amount At Fill"
        description: "Represents the Pharmacy Moving Average Cost (MVAC) of the Prescription Transaction based on the Fill Quantity and the Drug Moving Average Cost at the time of fill. MVAC Calculation Used: Pharmacy Drug Moving Average Cost Per Unit * Prescription Transaction Fill Quantity. This field is EPS only!!!"
        type: sum
        group_label: "Drug Cost at Fill"
        sql: ${moving_average_cost} ;;
        value_format: "$#,##0.00;($#,##0.00)"
      }

  #################################################################################################################
  #           [ERXDWPS-8260] COSTCO SOW - Moving Average Cost - Sales Looker Dimensions and Measures              #
  #                          END MVAC based dimensions, measures and filters                                      #
  #################################################################################################################

    set: sales_transaction_level_drill_path {
      fields: [
        chain.chain_name,
        store_alignment.division,
        store_alignment.region,
        store_alignment.district,
        store.store_number,
        rx_number,
        rx_tx_tx_number,
        financial_category,
        rx_tx_tx_status,
        rx_tx_fill_status,
        reportable_sales_date,
        filled_date,
        sold_date,
        returned_date,
        store_drug.drug_name,
        store_drug.ndc,
        sum_final_copay,
        sum_net_due,
        sum_rx_tx_uc_price,
        sum_price,
        sum_acquisition_cost_ty,
        sum_gross_margin,
        sum_net_sales
      ]
    }

    set: explore_rx_measure_4_10_candidate_list {
      fields: [
        sum_compound_ingredient_tx_quantity_used,
        sum_compound_ingredient_tx_base_cost,
        sum_compound_ingredient_tx_acquisition_cost
        #count_transfer_pct #ERXLPS-1211 Exposed Transfer SA.
      ]
    }

#TRX-1228
  set: trx_drill_path {
    fields: [
      store_alignment.division,
      store_alignment.region,
      store_alignment.district,
      store.store_number
    ]
  }
  }
